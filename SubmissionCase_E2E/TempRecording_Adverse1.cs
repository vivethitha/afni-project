///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace SubmissionCase_E2E
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The TempRecording_Adverse1 recording.
    /// </summary>
    [TestModule("15dfd577-56d5-404e-8d7c-d1bab27100e1", ModuleType.Recording, 1)]
    public partial class TempRecording_Adverse1 : ITestModule
    {
        /// <summary>
        /// Holds an instance of the SubmissionCase_E2ERepository repository.
        /// </summary>
        public static SubmissionCase_E2ERepository repo = SubmissionCase_E2ERepository.Instance;

        static TempRecording_Adverse1 instance = new TempRecording_Adverse1();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public TempRecording_Adverse1()
        {
            AD1_PI_FirstName = "";
            AD1_PI_LastName = "";
            AD1_LI_CompanyName = "";
            AO_PI_BusinessName = "";
            AD1_LI_PolicyNumber = "";
            AD1_LI_ClaimNumber = "";
            Adverse1_LicensePlate = "";
            Adverse1_LicensePlateState = "";
            AD1_Vin_Year = "";
            AD1_VIN_Make = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static TempRecording_Adverse1 Instance
        {
            get { return instance; }
        }

#region Variables

        string _AD1_PI_FirstName;

        /// <summary>
        /// Gets or sets the value of variable AD1_PI_FirstName.
        /// </summary>
        [TestVariable("f443c022-07c7-4a23-ab9f-a791dbed704b")]
        public string AD1_PI_FirstName
        {
            get { return _AD1_PI_FirstName; }
            set { _AD1_PI_FirstName = value; }
        }

        string _AD1_PI_LastName;

        /// <summary>
        /// Gets or sets the value of variable AD1_PI_LastName.
        /// </summary>
        [TestVariable("619c48fb-d7e5-48d8-aa91-1c64e0d15449")]
        public string AD1_PI_LastName
        {
            get { return _AD1_PI_LastName; }
            set { _AD1_PI_LastName = value; }
        }

        string _AD1_LI_CompanyName;

        /// <summary>
        /// Gets or sets the value of variable AD1_LI_CompanyName.
        /// </summary>
        [TestVariable("cc787bc4-2a3a-4071-a1c7-7eadfa302f72")]
        public string AD1_LI_CompanyName
        {
            get { return _AD1_LI_CompanyName; }
            set { _AD1_LI_CompanyName = value; }
        }

        string _AO_PI_BusinessName;

        /// <summary>
        /// Gets or sets the value of variable AO_PI_BusinessName.
        /// </summary>
        [TestVariable("c48df80a-9585-4d7f-9039-1186a068f57c")]
        public string AO_PI_BusinessName
        {
            get { return _AO_PI_BusinessName; }
            set { _AO_PI_BusinessName = value; }
        }

        string _AD1_LI_PolicyNumber;

        /// <summary>
        /// Gets or sets the value of variable AD1_LI_PolicyNumber.
        /// </summary>
        [TestVariable("fd8cdaec-4618-440b-becf-9c0492d3e969")]
        public string AD1_LI_PolicyNumber
        {
            get { return _AD1_LI_PolicyNumber; }
            set { _AD1_LI_PolicyNumber = value; }
        }

        string _AD1_LI_ClaimNumber;

        /// <summary>
        /// Gets or sets the value of variable AD1_LI_ClaimNumber.
        /// </summary>
        [TestVariable("268b2f18-1501-4916-9e2e-3bb50d341d72")]
        public string AD1_LI_ClaimNumber
        {
            get { return _AD1_LI_ClaimNumber; }
            set { _AD1_LI_ClaimNumber = value; }
        }

        string _Adverse1_LicensePlate;

        /// <summary>
        /// Gets or sets the value of variable Adverse1_LicensePlate.
        /// </summary>
        [TestVariable("5f23bb80-c967-4eaa-a6e3-09ec12a23572")]
        public string Adverse1_LicensePlate
        {
            get { return _Adverse1_LicensePlate; }
            set { _Adverse1_LicensePlate = value; }
        }

        string _Adverse1_LicensePlateState;

        /// <summary>
        /// Gets or sets the value of variable Adverse1_LicensePlateState.
        /// </summary>
        [TestVariable("accdeb23-07ba-4887-9420-19a83351f557")]
        public string Adverse1_LicensePlateState
        {
            get { return _Adverse1_LicensePlateState; }
            set { _Adverse1_LicensePlateState = value; }
        }

        string _AD1_Vin_Year;

        /// <summary>
        /// Gets or sets the value of variable AD1_Vin_Year.
        /// </summary>
        [TestVariable("3c2f22ca-cab4-427b-9b44-36a686656d5c")]
        public string AD1_Vin_Year
        {
            get { return _AD1_Vin_Year; }
            set { _AD1_Vin_Year = value; }
        }

        string _AD1_VIN_Make;

        /// <summary>
        /// Gets or sets the value of variable AD1_VIN_Make.
        /// </summary>
        [TestVariable("930824fd-deeb-4f1d-8547-c6b73d79b523")]
        public string AD1_VIN_Make
        {
            get { return _AD1_VIN_Make; }
            set { _AD1_VIN_Make = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.Driver_Owner_Different' at Center.", repo.ApplicationUnderTest.Driver_Owner_DifferentInfo, new RecordItemIndex(0));
            repo.ApplicationUnderTest.Driver_Owner_Different.Click();
            Delay.Milliseconds(200);
            
            // Validation Start
            Report.Log(ReportLevel.Info, "Section", "Validation Start", new RecordItemIndex(1));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (InnerText='Pending-ClaimInformation') on item 'ApplicationUnderTest.Pending_ClaimInformation'.", repo.ApplicationUnderTest.Pending_ClaimInformationInfo, new RecordItemIndex(2));
            Validate.AttributeEqual(repo.ApplicationUnderTest.Pending_ClaimInformationInfo, "InnerText", "Pending-ClaimInformation");
            Delay.Milliseconds(100);
            
            // Validation End
            Report.Log(ReportLevel.Info, "Section", "Validation End", new RecordItemIndex(3));
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 5s.", new RecordItemIndex(4));
            Delay.Duration(5000, false);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$AD1_PI_FirstName' with focus on 'ApplicationUnderTest.AD1_PI_FirstName'.", repo.ApplicationUnderTest.AD1_PI_FirstNameInfo, new RecordItemIndex(5));
            repo.ApplicationUnderTest.AD1_PI_FirstName.PressKeys(AD1_PI_FirstName);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$AD1_PI_LastName' with focus on 'ApplicationUnderTest.AD1_PI_LastName'.", repo.ApplicationUnderTest.AD1_PI_LastNameInfo, new RecordItemIndex(6));
            repo.ApplicationUnderTest.AD1_PI_LastName.PressKeys(AD1_PI_LastName);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.InsuranceInformation' at 80;21.", repo.ApplicationUnderTest.InsuranceInformationInfo, new RecordItemIndex(7));
            repo.ApplicationUnderTest.InsuranceInformation.Click("80;21");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Set value", "Setting attribute TagValue to '$AD1_LI_CompanyName' on item 'ApplicationUnderTest.AD1_LI_CompanyName'.", repo.ApplicationUnderTest.AD1_LI_CompanyNameInfo, new RecordItemIndex(8));
            repo.ApplicationUnderTest.AD1_LI_CompanyName.Element.SetAttributeValue("TagValue", AD1_LI_CompanyName);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$AD1_LI_PolicyNumber' with focus on 'ApplicationUnderTest.AD1_LI_PolicyNumber'.", repo.ApplicationUnderTest.AD1_LI_PolicyNumberInfo, new RecordItemIndex(9));
            repo.ApplicationUnderTest.AD1_LI_PolicyNumber.PressKeys(AD1_LI_PolicyNumber);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Tab}'.", new RecordItemIndex(10));
            Keyboard.Press("{Tab}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 2s.", new RecordItemIndex(11));
            Delay.Duration(2000, false);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.AD1_LI_ClaimNumber' at Center.", repo.ApplicationUnderTest.AD1_LI_ClaimNumberInfo, new RecordItemIndex(12));
            repo.ApplicationUnderTest.AD1_LI_ClaimNumber.Click();
            Delay.Milliseconds(9700);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$AD1_LI_ClaimNumber' with focus on 'ApplicationUnderTest.AD1_LI_ClaimNumber'.", repo.ApplicationUnderTest.AD1_LI_ClaimNumberInfo, new RecordItemIndex(13));
            repo.ApplicationUnderTest.AD1_LI_ClaimNumber.PressKeys(AD1_LI_ClaimNumber);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.SubmitButton1' at 46;15.", repo.ApplicationUnderTest.SubmitButton1Info, new RecordItemIndex(14));
            repo.ApplicationUnderTest.SubmitButton1.Click("46;15");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 5s to exist. Associated repository item: 'ApplicationUnderTest.AO_PI_BusinessName'", repo.ApplicationUnderTest.AO_PI_BusinessNameInfo, new ActionTimeout(5000), new RecordItemIndex(15));
            repo.ApplicationUnderTest.AO_PI_BusinessNameInfo.WaitForExists(5000);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$AO_PI_BusinessName' with focus on 'ApplicationUnderTest.AO_PI_BusinessName'.", repo.ApplicationUnderTest.AO_PI_BusinessNameInfo, new RecordItemIndex(16));
            repo.ApplicationUnderTest.AO_PI_BusinessName.PressKeys(AO_PI_BusinessName);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.SubmitButton1' at 46;15.", repo.ApplicationUnderTest.SubmitButton1Info, new RecordItemIndex(17));
            repo.ApplicationUnderTest.SubmitButton1.Click("46;15");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 5s.", new RecordItemIndex(18));
            Delay.Duration(5000, false);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.SubmitButton1' at 46;15.", repo.ApplicationUnderTest.SubmitButton1Info, new RecordItemIndex(19));
            repo.ApplicationUnderTest.SubmitButton1.Click("46;15");
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
