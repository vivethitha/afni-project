///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace SubmissionCase_E2E
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The ClaimInformation_FooterMappings_Ins recording.
    /// </summary>
    [TestModule("f08eca3b-ca5e-4192-9ce0-d4ad6382131e", ModuleType.Recording, 1)]
    public partial class ClaimInformation_FooterMappings_Ins : ITestModule
    {
        /// <summary>
        /// Holds an instance of the SubmissionCase_E2ERepository repository.
        /// </summary>
        public static SubmissionCase_E2ERepository repo = SubmissionCase_E2ERepository.Instance;

        static ClaimInformation_FooterMappings_Ins instance = new ClaimInformation_FooterMappings_Ins();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public ClaimInformation_FooterMappings_Ins()
        {
            ClaimInfo_ClientNumber_getValue = "";
            ClaimInfo_AccountType_getValue = "";
            ClaimInfo_ClientName_getValue = "";
            ClaimInfo_Project_getValue = "";
            ClaimInfo_ClaimType_getValue = "";
            ClaimInfo_DataOfLoss_getValue = "";
            ClaimInfo_AmountOfLoss_getValue = "";
            ClaimInformation_StateOfLoss_getValue = "";
            ClaimInfo_DeductibleAmount_getValue = "";
            ClaimInfo_Street_getValue = "";
            ClaimInfo_City_getValue = "";
            ClaimInfo_AccidentType_getValue = "";
            ClaimInfo_IncidentFacts_getValue = "";
            ClaimInfo_PoliceReportNo_getValue = "";
            ClaimInformation_MedPay_getValue = "";
            ClaimInfo_AFNILiability_getValue = "";
            ClaimInfo_ClientLiability_getValue = "";
            ClaimInformation_AccoutType = "";
            ClaimInformation_ClientName = "";
            ClaimInformation_ClaimNumber = "";
            ClaimInformation_ProjectName_Save = "";
            ClaimInformation_ClaimType = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static ClaimInformation_FooterMappings_Ins Instance
        {
            get { return instance; }
        }

#region Variables

        string _ClaimInfo_ClientNumber_getValue;

        /// <summary>
        /// Gets or sets the value of variable ClaimInfo_ClientNumber_getValue.
        /// </summary>
        [TestVariable("f556413f-cced-4662-9c55-792e708e9f8e")]
        public string ClaimInfo_ClientNumber_getValue
        {
            get { return _ClaimInfo_ClientNumber_getValue; }
            set { _ClaimInfo_ClientNumber_getValue = value; }
        }

        string _ClaimInfo_AccountType_getValue;

        /// <summary>
        /// Gets or sets the value of variable ClaimInfo_AccountType_getValue.
        /// </summary>
        [TestVariable("b09c589b-e913-4709-95d1-406a7532ad36")]
        public string ClaimInfo_AccountType_getValue
        {
            get { return _ClaimInfo_AccountType_getValue; }
            set { _ClaimInfo_AccountType_getValue = value; }
        }

        string _ClaimInfo_ClientName_getValue;

        /// <summary>
        /// Gets or sets the value of variable ClaimInfo_ClientName_getValue.
        /// </summary>
        [TestVariable("736255cd-7d7b-4daa-8d28-46b530d77743")]
        public string ClaimInfo_ClientName_getValue
        {
            get { return _ClaimInfo_ClientName_getValue; }
            set { _ClaimInfo_ClientName_getValue = value; }
        }

        string _ClaimInfo_Project_getValue;

        /// <summary>
        /// Gets or sets the value of variable ClaimInfo_Project_getValue.
        /// </summary>
        [TestVariable("fe3d724e-5b13-48e0-9928-d9801c721d6e")]
        public string ClaimInfo_Project_getValue
        {
            get { return _ClaimInfo_Project_getValue; }
            set { _ClaimInfo_Project_getValue = value; }
        }

        string _ClaimInfo_ClaimType_getValue;

        /// <summary>
        /// Gets or sets the value of variable ClaimInfo_ClaimType_getValue.
        /// </summary>
        [TestVariable("8f4b9490-57d8-4895-b4df-8df9d1b81ee0")]
        public string ClaimInfo_ClaimType_getValue
        {
            get { return _ClaimInfo_ClaimType_getValue; }
            set { _ClaimInfo_ClaimType_getValue = value; }
        }

        string _ClaimInfo_DataOfLoss_getValue;

        /// <summary>
        /// Gets or sets the value of variable ClaimInfo_DataOfLoss_getValue.
        /// </summary>
        [TestVariable("d16b0524-6e24-4416-9c8a-2086863da20b")]
        public string ClaimInfo_DataOfLoss_getValue
        {
            get { return _ClaimInfo_DataOfLoss_getValue; }
            set { _ClaimInfo_DataOfLoss_getValue = value; }
        }

        string _ClaimInfo_AmountOfLoss_getValue;

        /// <summary>
        /// Gets or sets the value of variable ClaimInfo_AmountOfLoss_getValue.
        /// </summary>
        [TestVariable("5251435b-575a-4ec7-a43b-2b0b1eff463a")]
        public string ClaimInfo_AmountOfLoss_getValue
        {
            get { return _ClaimInfo_AmountOfLoss_getValue; }
            set { _ClaimInfo_AmountOfLoss_getValue = value; }
        }

        string _ClaimInformation_StateOfLoss_getValue;

        /// <summary>
        /// Gets or sets the value of variable ClaimInformation_StateOfLoss_getValue.
        /// </summary>
        [TestVariable("461bdb51-e82c-4ce1-b821-8c7edc41af79")]
        public string ClaimInformation_StateOfLoss_getValue
        {
            get { return _ClaimInformation_StateOfLoss_getValue; }
            set { _ClaimInformation_StateOfLoss_getValue = value; }
        }

        string _ClaimInfo_DeductibleAmount_getValue;

        /// <summary>
        /// Gets or sets the value of variable ClaimInfo_DeductibleAmount_getValue.
        /// </summary>
        [TestVariable("9037a1f2-2451-4691-bbf1-0a016a4f96e0")]
        public string ClaimInfo_DeductibleAmount_getValue
        {
            get { return _ClaimInfo_DeductibleAmount_getValue; }
            set { _ClaimInfo_DeductibleAmount_getValue = value; }
        }

        string _ClaimInfo_Street_getValue;

        /// <summary>
        /// Gets or sets the value of variable ClaimInfo_Street_getValue.
        /// </summary>
        [TestVariable("85e4ca52-256d-4eca-9226-149c0532dd3d")]
        public string ClaimInfo_Street_getValue
        {
            get { return _ClaimInfo_Street_getValue; }
            set { _ClaimInfo_Street_getValue = value; }
        }

        string _ClaimInfo_City_getValue;

        /// <summary>
        /// Gets or sets the value of variable ClaimInfo_City_getValue.
        /// </summary>
        [TestVariable("b532066f-602e-49b0-849e-eb254d96b72d")]
        public string ClaimInfo_City_getValue
        {
            get { return _ClaimInfo_City_getValue; }
            set { _ClaimInfo_City_getValue = value; }
        }

        string _ClaimInfo_AccidentType_getValue;

        /// <summary>
        /// Gets or sets the value of variable ClaimInfo_AccidentType_getValue.
        /// </summary>
        [TestVariable("13b8e979-3ddc-4c1d-aa08-a47ad91e6995")]
        public string ClaimInfo_AccidentType_getValue
        {
            get { return _ClaimInfo_AccidentType_getValue; }
            set { _ClaimInfo_AccidentType_getValue = value; }
        }

        string _ClaimInfo_IncidentFacts_getValue;

        /// <summary>
        /// Gets or sets the value of variable ClaimInfo_IncidentFacts_getValue.
        /// </summary>
        [TestVariable("ede8628d-f02b-4a8f-814c-388241e75d71")]
        public string ClaimInfo_IncidentFacts_getValue
        {
            get { return _ClaimInfo_IncidentFacts_getValue; }
            set { _ClaimInfo_IncidentFacts_getValue = value; }
        }

        string _ClaimInfo_PoliceReportNo_getValue;

        /// <summary>
        /// Gets or sets the value of variable ClaimInfo_PoliceReportNo_getValue.
        /// </summary>
        [TestVariable("b257bd51-9691-42af-8a7b-2675982eb586")]
        public string ClaimInfo_PoliceReportNo_getValue
        {
            get { return _ClaimInfo_PoliceReportNo_getValue; }
            set { _ClaimInfo_PoliceReportNo_getValue = value; }
        }

        string _ClaimInformation_MedPay_getValue;

        /// <summary>
        /// Gets or sets the value of variable ClaimInformation_MedPay_getValue.
        /// </summary>
        [TestVariable("89b8e26b-c251-48b6-af5a-4555939c2292")]
        public string ClaimInformation_MedPay_getValue
        {
            get { return _ClaimInformation_MedPay_getValue; }
            set { _ClaimInformation_MedPay_getValue = value; }
        }

        string _ClaimInfo_AFNILiability_getValue;

        /// <summary>
        /// Gets or sets the value of variable ClaimInfo_AFNILiability_getValue.
        /// </summary>
        [TestVariable("db05e879-b9f3-4f62-8a93-bf6cbdd1e3a2")]
        public string ClaimInfo_AFNILiability_getValue
        {
            get { return _ClaimInfo_AFNILiability_getValue; }
            set { _ClaimInfo_AFNILiability_getValue = value; }
        }

        string _ClaimInfo_ClientLiability_getValue;

        /// <summary>
        /// Gets or sets the value of variable ClaimInfo_ClientLiability_getValue.
        /// </summary>
        [TestVariable("cca04177-f4ca-4580-b34c-962af9bd628e")]
        public string ClaimInfo_ClientLiability_getValue
        {
            get { return _ClaimInfo_ClientLiability_getValue; }
            set { _ClaimInfo_ClientLiability_getValue = value; }
        }

        string _ClaimInformation_AccoutType;

        /// <summary>
        /// Gets or sets the value of variable ClaimInformation_AccoutType.
        /// </summary>
        [TestVariable("8e1920c9-8117-473f-8714-68598b77d1d9")]
        public string ClaimInformation_AccoutType
        {
            get { return _ClaimInformation_AccoutType; }
            set { _ClaimInformation_AccoutType = value; }
        }

        string _ClaimInformation_ClientName;

        /// <summary>
        /// Gets or sets the value of variable ClaimInformation_ClientName.
        /// </summary>
        [TestVariable("2922eabe-3df1-4eb9-b15c-d8636ba67a49")]
        public string ClaimInformation_ClientName
        {
            get { return _ClaimInformation_ClientName; }
            set { _ClaimInformation_ClientName = value; }
        }

        string _ClaimInformation_ClaimNumber;

        /// <summary>
        /// Gets or sets the value of variable ClaimInformation_ClaimNumber.
        /// </summary>
        [TestVariable("c477723a-5170-49f7-b383-afee71120c51")]
        public string ClaimInformation_ClaimNumber
        {
            get { return _ClaimInformation_ClaimNumber; }
            set { _ClaimInformation_ClaimNumber = value; }
        }

        string _ClaimInformation_ProjectName_Save;

        /// <summary>
        /// Gets or sets the value of variable ClaimInformation_ProjectName_Save.
        /// </summary>
        [TestVariable("6e0818d9-6edb-4225-a307-d450b9602dbd")]
        public string ClaimInformation_ProjectName_Save
        {
            get { return _ClaimInformation_ProjectName_Save; }
            set { _ClaimInformation_ProjectName_Save = value; }
        }

        string _ClaimInformation_ClaimType;

        /// <summary>
        /// Gets or sets the value of variable ClaimInformation_ClaimType.
        /// </summary>
        [TestVariable("dfc3ba70-986c-46e2-8438-dc4526058be4")]
        public string ClaimInformation_ClaimType
        {
            get { return _ClaimInformation_ClaimType; }
            set { _ClaimInformation_ClaimType = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse scroll Vertical by -480 units.", new RecordItemIndex(0));
            Mouse.ScrollWheel(-480);
            Delay.Milliseconds(500);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse scroll Vertical by 360 units.", new RecordItemIndex(1));
            Mouse.ScrollWheel(360);
            Delay.Milliseconds(500);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.Footer_ClaimInfo' at 39;4.", repo.ApplicationUnderTest.Footer_ClaimInfoInfo, new RecordItemIndex(2));
            repo.ApplicationUnderTest.Footer_ClaimInfo.Click("39;4");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 10s to exist. Associated repository item: 'ApplicationUnderTest.FooterMapping_ClaimInfo_AccountType'", repo.ApplicationUnderTest.FooterMapping_ClaimInfo_AccountTypeInfo, new ActionTimeout(10000), new RecordItemIndex(3));
            repo.ApplicationUnderTest.FooterMapping_ClaimInfo_AccountTypeInfo.WaitForExists(10000);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (InnerText=$ClaimInformation_AccoutType) on item 'ApplicationUnderTest.FooterMapping_ClaimInfo_AccountType'.", repo.ApplicationUnderTest.FooterMapping_ClaimInfo_AccountTypeInfo, new RecordItemIndex(4));
            Validate.AttributeEqual(repo.ApplicationUnderTest.FooterMapping_ClaimInfo_AccountTypeInfo, "InnerText", ClaimInformation_AccoutType);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "User", ClaimInformation_AccoutType, new RecordItemIndex(5));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (InnerText='Client Name') on item 'ApplicationUnderTest.FooterMapping_ClaimInfo_ClientName_Header'.", repo.ApplicationUnderTest.FooterMapping_ClaimInfo_ClientName_HeaderInfo, new RecordItemIndex(6));
            Validate.AttributeEqual(repo.ApplicationUnderTest.FooterMapping_ClaimInfo_ClientName_HeaderInfo, "InnerText", "Client Name");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (InnerText=$ClaimInformation_ClientName) on item 'ApplicationUnderTest.FooterMapping_ClaimInfo_ClientName'.", repo.ApplicationUnderTest.FooterMapping_ClaimInfo_ClientNameInfo, new RecordItemIndex(7));
            Validate.AttributeEqual(repo.ApplicationUnderTest.FooterMapping_ClaimInfo_ClientNameInfo, "InnerText", ClaimInformation_ClientName);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "User", ClaimInformation_ClientName, new RecordItemIndex(8));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (InnerText='Claim Number') on item 'ApplicationUnderTest.FooterMapping_ClaimInfo_ClaimNumber_Header'.", repo.ApplicationUnderTest.FooterMapping_ClaimInfo_ClaimNumber_HeaderInfo, new RecordItemIndex(9));
            Validate.AttributeEqual(repo.ApplicationUnderTest.FooterMapping_ClaimInfo_ClaimNumber_HeaderInfo, "InnerText", "Claim Number");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (InnerText=$ClaimInformation_ClaimNumber) on item 'ApplicationUnderTest.FooterMapping_ClaimInfo_ClaimNumber'.", repo.ApplicationUnderTest.FooterMapping_ClaimInfo_ClaimNumberInfo, new RecordItemIndex(10));
            Validate.AttributeEqual(repo.ApplicationUnderTest.FooterMapping_ClaimInfo_ClaimNumberInfo, "InnerText", ClaimInformation_ClaimNumber);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "User", ClaimInformation_ClaimNumber, new RecordItemIndex(11));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (InnerText='Project Name') on item 'ApplicationUnderTest.FooterMapping_ClaimInfo_Project_Header'.", repo.ApplicationUnderTest.FooterMapping_ClaimInfo_Project_HeaderInfo, new RecordItemIndex(12));
            Validate.AttributeEqual(repo.ApplicationUnderTest.FooterMapping_ClaimInfo_Project_HeaderInfo, "InnerText", "Project Name");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "User", ClaimInformation_ProjectName_Save, new RecordItemIndex(13));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (InnerText=$ClaimInformation_ProjectName_Save) on item 'ApplicationUnderTest.FooterMapping_ClaimInfo_Project'.", repo.ApplicationUnderTest.FooterMapping_ClaimInfo_ProjectInfo, new RecordItemIndex(14));
            Validate.AttributeEqual(repo.ApplicationUnderTest.FooterMapping_ClaimInfo_ProjectInfo, "InnerText", ClaimInformation_ProjectName_Save);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (InnerText='Claim Type') on item 'ApplicationUnderTest.FooterMapping_ClaimInfo_ClaimType_Header'.", repo.ApplicationUnderTest.FooterMapping_ClaimInfo_ClaimType_HeaderInfo, new RecordItemIndex(15));
            Validate.AttributeEqual(repo.ApplicationUnderTest.FooterMapping_ClaimInfo_ClaimType_HeaderInfo, "InnerText", "Claim Type");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "User", ClaimInformation_ClaimType, new RecordItemIndex(16));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (InnerText=$ClaimInformation_ClaimType) on item 'ApplicationUnderTest.FooterMapping_ClaimInfo_ClaimType'.", repo.ApplicationUnderTest.FooterMapping_ClaimInfo_ClaimTypeInfo, new RecordItemIndex(17));
            Validate.AttributeEqual(repo.ApplicationUnderTest.FooterMapping_ClaimInfo_ClaimTypeInfo, "InnerText", ClaimInformation_ClaimType);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "User", ClaimInformation_ClaimType, new RecordItemIndex(18));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (InnerText=$ClaimInformation_ClaimType) on item 'ApplicationUnderTest.FooterMapping_ClaimInfo_ClaimType'.", repo.ApplicationUnderTest.FooterMapping_ClaimInfo_ClaimTypeInfo, new RecordItemIndex(19));
            Validate.AttributeEqual(repo.ApplicationUnderTest.FooterMapping_ClaimInfo_ClaimTypeInfo, "InnerText", ClaimInformation_ClaimType);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (InnerText='Date of Loss') on item 'ApplicationUnderTest.FooterMapping_ClaimInfo_DOL_Header'.", repo.ApplicationUnderTest.FooterMapping_ClaimInfo_DOL_HeaderInfo, new RecordItemIndex(20));
            Validate.AttributeEqual(repo.ApplicationUnderTest.FooterMapping_ClaimInfo_DOL_HeaderInfo, "InnerText", "Date of Loss");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "User", ClaimInfo_DataOfLoss_getValue, new RecordItemIndex(21));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (InnerText=$ClaimInfo_DataOfLoss_getValue) on item 'ApplicationUnderTest.FooterMapping_ClaimInfo_DOL'.", repo.ApplicationUnderTest.FooterMapping_ClaimInfo_DOLInfo, new RecordItemIndex(22));
            Validate.AttributeEqual(repo.ApplicationUnderTest.FooterMapping_ClaimInfo_DOLInfo, "InnerText", ClaimInfo_DataOfLoss_getValue);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (InnerText='Amount of Loss') on item 'ApplicationUnderTest.FooterMapping_ClaimInfo_Amount_Header'.", repo.ApplicationUnderTest.FooterMapping_ClaimInfo_Amount_HeaderInfo, new RecordItemIndex(23));
            Validate.AttributeEqual(repo.ApplicationUnderTest.FooterMapping_ClaimInfo_Amount_HeaderInfo, "InnerText", "Amount of Loss");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (InnerText=$ClaimInfo_AmountOfLoss_getValue) on item 'ApplicationUnderTest.FooterMapping_ClaimInfo_Amount'.", repo.ApplicationUnderTest.FooterMapping_ClaimInfo_AmountInfo, new RecordItemIndex(24));
            Validate.AttributeEqual(repo.ApplicationUnderTest.FooterMapping_ClaimInfo_AmountInfo, "InnerText", ClaimInfo_AmountOfLoss_getValue);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "User", ClaimInfo_AmountOfLoss_getValue, new RecordItemIndex(25));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (InnerText=$ClaimInfo_AmountOfLoss_getValue) on item 'ApplicationUnderTest.FooterMapping_ClaimInfo_Amount'.", repo.ApplicationUnderTest.FooterMapping_ClaimInfo_AmountInfo, new RecordItemIndex(26));
            Validate.AttributeEqual(repo.ApplicationUnderTest.FooterMapping_ClaimInfo_AmountInfo, "InnerText", ClaimInfo_AmountOfLoss_getValue);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (InnerText='State of Loss') on item 'ApplicationUnderTest.FooterMapping_ClaimInfo_StateOfLoss_Header'.", repo.ApplicationUnderTest.FooterMapping_ClaimInfo_StateOfLoss_HeaderInfo, new RecordItemIndex(27));
            Validate.AttributeEqual(repo.ApplicationUnderTest.FooterMapping_ClaimInfo_StateOfLoss_HeaderInfo, "InnerText", "State of Loss");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "User", ClaimInformation_StateOfLoss_getValue, new RecordItemIndex(28));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (InnerText=$ClaimInformation_StateOfLoss_getValue) on item 'ApplicationUnderTest.FooterMapping_ClaimInfo_StateOfLoss'.", repo.ApplicationUnderTest.FooterMapping_ClaimInfo_StateOfLossInfo, new RecordItemIndex(29));
            Validate.AttributeEqual(repo.ApplicationUnderTest.FooterMapping_ClaimInfo_StateOfLossInfo, "InnerText", ClaimInformation_StateOfLoss_getValue);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (InnerText='Deductible Amount') on item 'ApplicationUnderTest.FooterMapping_ClaimInfo_Deductible_Header'.", repo.ApplicationUnderTest.FooterMapping_ClaimInfo_Deductible_HeaderInfo, new RecordItemIndex(30));
            Validate.AttributeEqual(repo.ApplicationUnderTest.FooterMapping_ClaimInfo_Deductible_HeaderInfo, "InnerText", "Deductible Amount");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "User", ClaimInfo_DeductibleAmount_getValue, new RecordItemIndex(31));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (InnerText=$ClaimInfo_DeductibleAmount_getValue) on item 'ApplicationUnderTest.FooterMapping_ClaimInfo_Deductible'.", repo.ApplicationUnderTest.FooterMapping_ClaimInfo_DeductibleInfo, new RecordItemIndex(32));
            Validate.AttributeEqual(repo.ApplicationUnderTest.FooterMapping_ClaimInfo_DeductibleInfo, "InnerText", ClaimInfo_DeductibleAmount_getValue);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (InnerText='Street/Loss Location') on item 'ApplicationUnderTest.FooterMapping_ClaimInfo_Street_header'.", repo.ApplicationUnderTest.FooterMapping_ClaimInfo_Street_headerInfo, new RecordItemIndex(33));
            Validate.AttributeEqual(repo.ApplicationUnderTest.FooterMapping_ClaimInfo_Street_headerInfo, "InnerText", "Street/Loss Location");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "User", ClaimInfo_Street_getValue, new RecordItemIndex(34));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (InnerText=$ClaimInfo_Street_getValue) on item 'ApplicationUnderTest.FooterMapping_ClaimInfo_Street'.", repo.ApplicationUnderTest.FooterMapping_ClaimInfo_StreetInfo, new RecordItemIndex(35));
            Validate.AttributeEqual(repo.ApplicationUnderTest.FooterMapping_ClaimInfo_StreetInfo, "InnerText", ClaimInfo_Street_getValue);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (InnerText='City of Loss') on item 'ApplicationUnderTest.FooterMapping_ClaimInfo_City_Header'.", repo.ApplicationUnderTest.FooterMapping_ClaimInfo_City_HeaderInfo, new RecordItemIndex(36));
            Validate.AttributeEqual(repo.ApplicationUnderTest.FooterMapping_ClaimInfo_City_HeaderInfo, "InnerText", "City of Loss");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "User", ClaimInfo_Street_getValue, new RecordItemIndex(37));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (InnerText=$ClaimInfo_City_getValue) on item 'ApplicationUnderTest.FooterMapping_ClaimInfo_City'.", repo.ApplicationUnderTest.FooterMapping_ClaimInfo_CityInfo, new RecordItemIndex(38));
            Validate.AttributeEqual(repo.ApplicationUnderTest.FooterMapping_ClaimInfo_CityInfo, "InnerText", ClaimInfo_City_getValue);
            Delay.Milliseconds(100);
            
            Report.Screenshot(ReportLevel.Info, "User", "", repo.PegaCaseManagerPortalGoogleChrome.Screenshot_Window, false, new RecordItemIndex(39));
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse scroll Vertical by -240 units.", new RecordItemIndex(40));
            Mouse.ScrollWheel(-240);
            Delay.Milliseconds(500);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (InnerText='Accident Type') on item 'ApplicationUnderTest.FooterMapping_ClaimInfo_AccidentType_header'.", repo.ApplicationUnderTest.FooterMapping_ClaimInfo_AccidentType_headerInfo, new RecordItemIndex(41));
            Validate.AttributeEqual(repo.ApplicationUnderTest.FooterMapping_ClaimInfo_AccidentType_headerInfo, "InnerText", "Accident Type");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "User", ClaimInfo_AccidentType_getValue, new RecordItemIndex(42));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (InnerText='Police Report No') on item 'ApplicationUnderTest.FooterMapping_ClaimInfo_PoliceReportNo_header'.", repo.ApplicationUnderTest.FooterMapping_ClaimInfo_PoliceReportNo_headerInfo, new RecordItemIndex(43));
            Validate.AttributeEqual(repo.ApplicationUnderTest.FooterMapping_ClaimInfo_PoliceReportNo_headerInfo, "InnerText", "Police Report No");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "User", ClaimInfo_PoliceReportNo_getValue, new RecordItemIndex(44));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (InnerText=$ClaimInfo_PoliceReportNo_getValue) on item 'ApplicationUnderTest.FooterMapping_ClaimInfo_PoliceReportNo'.", repo.ApplicationUnderTest.FooterMapping_ClaimInfo_PoliceReportNoInfo, new RecordItemIndex(45));
            Validate.AttributeEqual(repo.ApplicationUnderTest.FooterMapping_ClaimInfo_PoliceReportNoInfo, "InnerText", ClaimInfo_PoliceReportNo_getValue);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (InnerText='Med Pay') on item 'ApplicationUnderTest.FooterMapping_ClaimInfo_MedPay_header'.", repo.ApplicationUnderTest.FooterMapping_ClaimInfo_MedPay_headerInfo, new RecordItemIndex(46));
            Validate.AttributeEqual(repo.ApplicationUnderTest.FooterMapping_ClaimInfo_MedPay_headerInfo, "InnerText", "Med Pay");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "User", ClaimInformation_MedPay_getValue, new RecordItemIndex(47));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (InnerText=$ClaimInformation_MedPay_getValue) on item 'ApplicationUnderTest.FooterMapping_ClaimInfo_MedPay'.", repo.ApplicationUnderTest.FooterMapping_ClaimInfo_MedPayInfo, new RecordItemIndex(48));
            Validate.AttributeEqual(repo.ApplicationUnderTest.FooterMapping_ClaimInfo_MedPayInfo, "InnerText", ClaimInformation_MedPay_getValue);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (InnerText='AFNI Liability') on item 'ApplicationUnderTest.FooterMapping_ClaimInfo_AFNI_Liability_header'.", repo.ApplicationUnderTest.FooterMapping_ClaimInfo_AFNI_Liability_headerInfo, new RecordItemIndex(49));
            Validate.AttributeEqual(repo.ApplicationUnderTest.FooterMapping_ClaimInfo_AFNI_Liability_headerInfo, "InnerText", "AFNI Liability");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "User", ClaimInfo_AFNILiability_getValue, new RecordItemIndex(50));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (InnerText=$ClaimInfo_AFNILiability_getValue) on item 'ApplicationUnderTest.FooterMapping_ClaimInfo_AFNI_Liability'.", repo.ApplicationUnderTest.FooterMapping_ClaimInfo_AFNI_LiabilityInfo, new RecordItemIndex(51));
            Validate.AttributeEqual(repo.ApplicationUnderTest.FooterMapping_ClaimInfo_AFNI_LiabilityInfo, "InnerText", ClaimInfo_AFNILiability_getValue);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (InnerText='Client Liability') on item 'ApplicationUnderTest.FooterMapping_ClaimInfo_Client_Liability_header'.", repo.ApplicationUnderTest.FooterMapping_ClaimInfo_Client_Liability_headerInfo, new RecordItemIndex(52));
            Validate.AttributeEqual(repo.ApplicationUnderTest.FooterMapping_ClaimInfo_Client_Liability_headerInfo, "InnerText", "Client Liability");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "User", ClaimInfo_ClientLiability_getValue, new RecordItemIndex(53));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (InnerText=$ClaimInfo_ClientLiability_getValue) on item 'ApplicationUnderTest.FooterMapping_ClaimInfo_Client_Liability'.", repo.ApplicationUnderTest.FooterMapping_ClaimInfo_Client_LiabilityInfo, new RecordItemIndex(54));
            Validate.AttributeEqual(repo.ApplicationUnderTest.FooterMapping_ClaimInfo_Client_LiabilityInfo, "InnerText", ClaimInfo_ClientLiability_getValue);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (InnerText='Accident Type') on item 'ApplicationUnderTest.FooterMapping_ClaimInfo_AccidentType_header'.", repo.ApplicationUnderTest.FooterMapping_ClaimInfo_AccidentType_headerInfo, new RecordItemIndex(55));
            Validate.AttributeEqual(repo.ApplicationUnderTest.FooterMapping_ClaimInfo_AccidentType_headerInfo, "InnerText", "Accident Type");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "User", ClaimInfo_AccidentType_getValue, new RecordItemIndex(56));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (InnerText=$ClaimInfo_AccidentType_getValue) on item 'ApplicationUnderTest.FooterMapping_ClaimInfo_AccidentType'.", repo.ApplicationUnderTest.FooterMapping_ClaimInfo_AccidentTypeInfo, new RecordItemIndex(57));
            Validate.AttributeEqual(repo.ApplicationUnderTest.FooterMapping_ClaimInfo_AccidentTypeInfo, "InnerText", ClaimInfo_AccidentType_getValue);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (InnerText='Incident Facts') on item 'ApplicationUnderTest.FooterMapping_ClaimInfo_IncidentFacts_Header'.", repo.ApplicationUnderTest.FooterMapping_ClaimInfo_IncidentFacts_HeaderInfo, new RecordItemIndex(58));
            Validate.AttributeEqual(repo.ApplicationUnderTest.FooterMapping_ClaimInfo_IncidentFacts_HeaderInfo, "InnerText", "Incident Facts");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "User", ClaimInfo_IncidentFacts_getValue, new RecordItemIndex(59));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (InnerText=$ClaimInfo_IncidentFacts_getValue) on item 'ApplicationUnderTest.FooterMapping_ClaimInfo_IncidentFacts'.", repo.ApplicationUnderTest.FooterMapping_ClaimInfo_IncidentFactsInfo, new RecordItemIndex(60));
            Validate.AttributeEqual(repo.ApplicationUnderTest.FooterMapping_ClaimInfo_IncidentFactsInfo, "InnerText", ClaimInfo_IncidentFacts_getValue);
            Delay.Milliseconds(100);
            
            //Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Enabled='True') on item 'ApplicationUnderTest.Copy_of_Checkbox'.", repo.ApplicationUnderTest.Copy_of_CheckboxInfo, new RecordItemIndex(61));
            //Validate.AttributeEqual(repo.ApplicationUnderTest.Copy_of_CheckboxInfo, "Enabled", "True");
            //Delay.Milliseconds(100);
            
            //Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'ApplicationUnderTest.Checkbox'.", repo.ApplicationUnderTest.CheckboxInfo, new RecordItemIndex(62));
            //Validate.Exists(repo.ApplicationUnderTest.CheckboxInfo);
            //Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 5s.", new RecordItemIndex(63));
            Delay.Duration(5000, false);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
