///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace SubmissionCase_E2E
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Edit_Adverse1_Driver_Personal_Information recording.
    /// </summary>
    [TestModule("3a1d1eea-247c-472d-812a-7e4db28364e0", ModuleType.Recording, 1)]
    public partial class Edit_Adverse1_Driver_Personal_Information : ITestModule
    {
        /// <summary>
        /// Holds an instance of the SubmissionCase_E2ERepository repository.
        /// </summary>
        public static SubmissionCase_E2ERepository repo = SubmissionCase_E2ERepository.Instance;

        static Edit_Adverse1_Driver_Personal_Information instance = new Edit_Adverse1_Driver_Personal_Information();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Edit_Adverse1_Driver_Personal_Information()
        {
            AD1_PI_FirstName = "";
            Edit_AD1_PI_FirstName = "Edit_AD1_PI_FirstName";
            AD1_PI_LastName = "";
            Edit_AD1_PI_LastName = "Edit_AD1_PI_LastName";
            AD1_PI_POE = "";
            Edit_AD1_PI_POE = "Edit_AD1_PI_POE";
            AD1_PI_Address1 = "";
            Edit_AD1_PI_Address1 = "Edit_AD1_PI_Address1";
            AD1_PI_Address2 = "";
            Edit_AD1_PI_Address2 = "Edit_AD1_PI_Address2";
            AD1_PI_City = "";
            Edit_AD1_PI_City = "Edit_AD1_PI_City";
            AD1_PI_State = "";
            Edit_AD1_PI_State = "Edit_AD1_PI_State";
            AD1_PI_Zip = "";
            Edit_AD1_PI_Zip = "Edit_AD1_PI_Zip";
            AD1_PI_BankruptcyCounty = "";
            Edit_AD1_PI_BankruptcyCounty = "Edit_AD1_PI_BankruptcyCounty";
            AD1_PI_BankruptcyDistrict = "";
            Edit_AD1_PI_BankruptcyDistrict = "Edit_AD1_PI_BankruptcyDistrict";
            AD1_PI_BankruptcyChapter = "";
            Edit_AD1_PI_BankruptcyChapter = "Edit_AD1_PI_BankruptcyChapter";
            AD1_PI_BankruptcyCaseNo = "";
            Edit_AD1_PI_BankruptcyCaseNo = "Edit_AD1_PI_BankruptcyCaseNo";
            AD1_PI_PhoneUseType_getValue = "";
            Edit_AD1_PI_PhoneUseType_getValue = "Business";
            AD1_PI_PhoneType_getValue = "";
            Edit_AD1_PI_PhoneType_getValue = "Cell";
            AD1_PI_PhoneSource_getValue = "";
            Edit_AD1_PI_PhoneSource_getValue = "Skip Trace";
            AD1_PI_PhoneNumber_getValue = "";
            Edit_AD1_PI_PhoneNumber_getValue = "9600095000";
            AD1_PI_EmailUseType_getvalue = "";
            Edit_AD1_PI_EmailUseType_getvalue = "Business";
            AD1_PI_EmailSource_getValue = "";
            Edit_AD1_PI_EmailSource_getValue = "Skip Trace";
            AD1_PI_Email_getValue1 = "";
            Edit_AD1_PI_Email_getValue = "editad1PIemail@gmail.com";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Edit_Adverse1_Driver_Personal_Information Instance
        {
            get { return instance; }
        }

#region Variables

        string _AD1_PI_FirstName;

        /// <summary>
        /// Gets or sets the value of variable AD1_PI_FirstName.
        /// </summary>
        [TestVariable("53e31aa5-0432-4270-93bd-645fa1a9410a")]
        public string AD1_PI_FirstName
        {
            get { return _AD1_PI_FirstName; }
            set { _AD1_PI_FirstName = value; }
        }

        string _Edit_AD1_PI_FirstName;

        /// <summary>
        /// Gets or sets the value of variable Edit_AD1_PI_FirstName.
        /// </summary>
        [TestVariable("e0f93f8b-b863-4831-9157-5510b2e146b4")]
        public string Edit_AD1_PI_FirstName
        {
            get { return _Edit_AD1_PI_FirstName; }
            set { _Edit_AD1_PI_FirstName = value; }
        }

        string _AD1_PI_LastName;

        /// <summary>
        /// Gets or sets the value of variable AD1_PI_LastName.
        /// </summary>
        [TestVariable("f037014b-4771-49e9-a740-d3506585f8d6")]
        public string AD1_PI_LastName
        {
            get { return _AD1_PI_LastName; }
            set { _AD1_PI_LastName = value; }
        }

        string _Edit_AD1_PI_LastName;

        /// <summary>
        /// Gets or sets the value of variable Edit_AD1_PI_LastName.
        /// </summary>
        [TestVariable("348f1cd1-7f9f-4b29-8057-c662270d3823")]
        public string Edit_AD1_PI_LastName
        {
            get { return _Edit_AD1_PI_LastName; }
            set { _Edit_AD1_PI_LastName = value; }
        }

        string _AD1_PI_POE;

        /// <summary>
        /// Gets or sets the value of variable AD1_PI_POE.
        /// </summary>
        [TestVariable("c4281c08-254f-4480-b05a-7ee15dabf893")]
        public string AD1_PI_POE
        {
            get { return _AD1_PI_POE; }
            set { _AD1_PI_POE = value; }
        }

        string _Edit_AD1_PI_POE;

        /// <summary>
        /// Gets or sets the value of variable Edit_AD1_PI_POE.
        /// </summary>
        [TestVariable("72992e0c-c539-46f8-aa4a-be01491f6f42")]
        public string Edit_AD1_PI_POE
        {
            get { return _Edit_AD1_PI_POE; }
            set { _Edit_AD1_PI_POE = value; }
        }

        string _AD1_PI_Address1;

        /// <summary>
        /// Gets or sets the value of variable AD1_PI_Address1.
        /// </summary>
        [TestVariable("987da53d-4b40-4127-87d8-10729ed2cfd2")]
        public string AD1_PI_Address1
        {
            get { return _AD1_PI_Address1; }
            set { _AD1_PI_Address1 = value; }
        }

        string _Edit_AD1_PI_Address1;

        /// <summary>
        /// Gets or sets the value of variable Edit_AD1_PI_Address1.
        /// </summary>
        [TestVariable("4d840022-1eb0-4c79-b701-93650ecdaa49")]
        public string Edit_AD1_PI_Address1
        {
            get { return _Edit_AD1_PI_Address1; }
            set { _Edit_AD1_PI_Address1 = value; }
        }

        string _AD1_PI_Address2;

        /// <summary>
        /// Gets or sets the value of variable AD1_PI_Address2.
        /// </summary>
        [TestVariable("8fe9c457-29ae-4c23-921f-9f482c1ee198")]
        public string AD1_PI_Address2
        {
            get { return _AD1_PI_Address2; }
            set { _AD1_PI_Address2 = value; }
        }

        string _Edit_AD1_PI_Address2;

        /// <summary>
        /// Gets or sets the value of variable Edit_AD1_PI_Address2.
        /// </summary>
        [TestVariable("b1bc7cc9-f27a-45ae-9de9-c98a8df8e63b")]
        public string Edit_AD1_PI_Address2
        {
            get { return _Edit_AD1_PI_Address2; }
            set { _Edit_AD1_PI_Address2 = value; }
        }

        string _AD1_PI_City;

        /// <summary>
        /// Gets or sets the value of variable AD1_PI_City.
        /// </summary>
        [TestVariable("1586030d-e703-4b98-b4e3-97d946d38395")]
        public string AD1_PI_City
        {
            get { return _AD1_PI_City; }
            set { _AD1_PI_City = value; }
        }

        string _Edit_AD1_PI_City;

        /// <summary>
        /// Gets or sets the value of variable Edit_AD1_PI_City.
        /// </summary>
        [TestVariable("c7dbff49-c799-4990-bb94-779b7994e3ab")]
        public string Edit_AD1_PI_City
        {
            get { return _Edit_AD1_PI_City; }
            set { _Edit_AD1_PI_City = value; }
        }

        string _AD1_PI_State;

        /// <summary>
        /// Gets or sets the value of variable AD1_PI_State.
        /// </summary>
        [TestVariable("e9fdd0d7-1e93-47d6-ae5a-47907b702015")]
        public string AD1_PI_State
        {
            get { return _AD1_PI_State; }
            set { _AD1_PI_State = value; }
        }

        string _Edit_AD1_PI_State;

        /// <summary>
        /// Gets or sets the value of variable Edit_AD1_PI_State.
        /// </summary>
        [TestVariable("44e73a54-d3ef-4ee6-a028-aef7e38e564f")]
        public string Edit_AD1_PI_State
        {
            get { return _Edit_AD1_PI_State; }
            set { _Edit_AD1_PI_State = value; }
        }

        string _AD1_PI_Zip;

        /// <summary>
        /// Gets or sets the value of variable AD1_PI_Zip.
        /// </summary>
        [TestVariable("f3917b9e-85c1-47ed-baff-3faf707a329e")]
        public string AD1_PI_Zip
        {
            get { return _AD1_PI_Zip; }
            set { _AD1_PI_Zip = value; }
        }

        string _Edit_AD1_PI_Zip;

        /// <summary>
        /// Gets or sets the value of variable Edit_AD1_PI_Zip.
        /// </summary>
        [TestVariable("d35acc2a-efad-4a04-b0de-4f64b2862922")]
        public string Edit_AD1_PI_Zip
        {
            get { return _Edit_AD1_PI_Zip; }
            set { _Edit_AD1_PI_Zip = value; }
        }

        string _AD1_PI_BankruptcyCounty;

        /// <summary>
        /// Gets or sets the value of variable AD1_PI_BankruptcyCounty.
        /// </summary>
        [TestVariable("7702be52-3cc2-41c6-906d-5a58e0477dd9")]
        public string AD1_PI_BankruptcyCounty
        {
            get { return _AD1_PI_BankruptcyCounty; }
            set { _AD1_PI_BankruptcyCounty = value; }
        }

        string _Edit_AD1_PI_BankruptcyCounty;

        /// <summary>
        /// Gets or sets the value of variable Edit_AD1_PI_BankruptcyCounty.
        /// </summary>
        [TestVariable("cce09785-f2c4-4631-984e-8da1d3c7a42f")]
        public string Edit_AD1_PI_BankruptcyCounty
        {
            get { return _Edit_AD1_PI_BankruptcyCounty; }
            set { _Edit_AD1_PI_BankruptcyCounty = value; }
        }

        string _AD1_PI_BankruptcyDistrict;

        /// <summary>
        /// Gets or sets the value of variable AD1_PI_BankruptcyDistrict.
        /// </summary>
        [TestVariable("b2abb6ed-f0ac-4125-aacf-e63acbd2144a")]
        public string AD1_PI_BankruptcyDistrict
        {
            get { return _AD1_PI_BankruptcyDistrict; }
            set { _AD1_PI_BankruptcyDistrict = value; }
        }

        string _Edit_AD1_PI_BankruptcyDistrict;

        /// <summary>
        /// Gets or sets the value of variable Edit_AD1_PI_BankruptcyDistrict.
        /// </summary>
        [TestVariable("0e8bb3f9-388c-440b-8eb2-5d98902a1cc3")]
        public string Edit_AD1_PI_BankruptcyDistrict
        {
            get { return _Edit_AD1_PI_BankruptcyDistrict; }
            set { _Edit_AD1_PI_BankruptcyDistrict = value; }
        }

        string _AD1_PI_BankruptcyChapter;

        /// <summary>
        /// Gets or sets the value of variable AD1_PI_BankruptcyChapter.
        /// </summary>
        [TestVariable("30810075-bce7-4430-a963-82df6d0f6510")]
        public string AD1_PI_BankruptcyChapter
        {
            get { return _AD1_PI_BankruptcyChapter; }
            set { _AD1_PI_BankruptcyChapter = value; }
        }

        string _Edit_AD1_PI_BankruptcyChapter;

        /// <summary>
        /// Gets or sets the value of variable Edit_AD1_PI_BankruptcyChapter.
        /// </summary>
        [TestVariable("36bf7964-c946-46cb-a403-b1911daf7bb1")]
        public string Edit_AD1_PI_BankruptcyChapter
        {
            get { return _Edit_AD1_PI_BankruptcyChapter; }
            set { _Edit_AD1_PI_BankruptcyChapter = value; }
        }

        string _AD1_PI_BankruptcyCaseNo;

        /// <summary>
        /// Gets or sets the value of variable AD1_PI_BankruptcyCaseNo.
        /// </summary>
        [TestVariable("415b34ba-e7fe-4e57-9563-170d35eace59")]
        public string AD1_PI_BankruptcyCaseNo
        {
            get { return _AD1_PI_BankruptcyCaseNo; }
            set { _AD1_PI_BankruptcyCaseNo = value; }
        }

        string _Edit_AD1_PI_BankruptcyCaseNo;

        /// <summary>
        /// Gets or sets the value of variable Edit_AD1_PI_BankruptcyCaseNo.
        /// </summary>
        [TestVariable("c0532f38-68a6-49f9-8ae9-2a3d517d5713")]
        public string Edit_AD1_PI_BankruptcyCaseNo
        {
            get { return _Edit_AD1_PI_BankruptcyCaseNo; }
            set { _Edit_AD1_PI_BankruptcyCaseNo = value; }
        }

        string _AD1_PI_PhoneUseType_getValue;

        /// <summary>
        /// Gets or sets the value of variable AD1_PI_PhoneUseType_getValue.
        /// </summary>
        [TestVariable("29469b5f-e842-4c42-b636-da652d6baf22")]
        public string AD1_PI_PhoneUseType_getValue
        {
            get { return _AD1_PI_PhoneUseType_getValue; }
            set { _AD1_PI_PhoneUseType_getValue = value; }
        }

        string _Edit_AD1_PI_PhoneUseType_getValue;

        /// <summary>
        /// Gets or sets the value of variable Edit_AD1_PI_PhoneUseType_getValue.
        /// </summary>
        [TestVariable("f8cd1b3d-b454-4972-be8a-7a6bdb6cda77")]
        public string Edit_AD1_PI_PhoneUseType_getValue
        {
            get { return _Edit_AD1_PI_PhoneUseType_getValue; }
            set { _Edit_AD1_PI_PhoneUseType_getValue = value; }
        }

        string _AD1_PI_PhoneType_getValue;

        /// <summary>
        /// Gets or sets the value of variable AD1_PI_PhoneType_getValue.
        /// </summary>
        [TestVariable("04d05ab0-af44-4873-aad1-19369b708e06")]
        public string AD1_PI_PhoneType_getValue
        {
            get { return _AD1_PI_PhoneType_getValue; }
            set { _AD1_PI_PhoneType_getValue = value; }
        }

        string _Edit_AD1_PI_PhoneType_getValue;

        /// <summary>
        /// Gets or sets the value of variable Edit_AD1_PI_PhoneType_getValue.
        /// </summary>
        [TestVariable("02f240f8-77fb-44c3-a2e3-4f5d4e5385f5")]
        public string Edit_AD1_PI_PhoneType_getValue
        {
            get { return _Edit_AD1_PI_PhoneType_getValue; }
            set { _Edit_AD1_PI_PhoneType_getValue = value; }
        }

        string _AD1_PI_PhoneSource_getValue;

        /// <summary>
        /// Gets or sets the value of variable AD1_PI_PhoneSource_getValue.
        /// </summary>
        [TestVariable("f97eb703-a77e-4855-a4fb-f29be7565b4a")]
        public string AD1_PI_PhoneSource_getValue
        {
            get { return _AD1_PI_PhoneSource_getValue; }
            set { _AD1_PI_PhoneSource_getValue = value; }
        }

        string _Edit_AD1_PI_PhoneSource_getValue;

        /// <summary>
        /// Gets or sets the value of variable Edit_AD1_PI_PhoneSource_getValue.
        /// </summary>
        [TestVariable("2458d4af-c5a2-4e9a-bc33-8960786fd25d")]
        public string Edit_AD1_PI_PhoneSource_getValue
        {
            get { return _Edit_AD1_PI_PhoneSource_getValue; }
            set { _Edit_AD1_PI_PhoneSource_getValue = value; }
        }

        string _AD1_PI_PhoneNumber_getValue;

        /// <summary>
        /// Gets or sets the value of variable AD1_PI_PhoneNumber_getValue.
        /// </summary>
        [TestVariable("0302719b-95aa-4dee-8174-c8c063769ddc")]
        public string AD1_PI_PhoneNumber_getValue
        {
            get { return _AD1_PI_PhoneNumber_getValue; }
            set { _AD1_PI_PhoneNumber_getValue = value; }
        }

        string _Edit_AD1_PI_PhoneNumber_getValue;

        /// <summary>
        /// Gets or sets the value of variable Edit_AD1_PI_PhoneNumber_getValue.
        /// </summary>
        [TestVariable("e8427f40-4569-4183-9841-3d1383afce7d")]
        public string Edit_AD1_PI_PhoneNumber_getValue
        {
            get { return _Edit_AD1_PI_PhoneNumber_getValue; }
            set { _Edit_AD1_PI_PhoneNumber_getValue = value; }
        }

        string _AD1_PI_EmailUseType_getvalue;

        /// <summary>
        /// Gets or sets the value of variable AD1_PI_EmailUseType_getvalue.
        /// </summary>
        [TestVariable("97227f52-d47c-4b44-9bd8-90b58accd1cc")]
        public string AD1_PI_EmailUseType_getvalue
        {
            get { return _AD1_PI_EmailUseType_getvalue; }
            set { _AD1_PI_EmailUseType_getvalue = value; }
        }

        string _Edit_AD1_PI_EmailUseType_getvalue;

        /// <summary>
        /// Gets or sets the value of variable Edit_AD1_PI_EmailUseType_getvalue.
        /// </summary>
        [TestVariable("fd7c867d-5d36-495e-928a-2cba23ccf425")]
        public string Edit_AD1_PI_EmailUseType_getvalue
        {
            get { return _Edit_AD1_PI_EmailUseType_getvalue; }
            set { _Edit_AD1_PI_EmailUseType_getvalue = value; }
        }

        string _AD1_PI_EmailSource_getValue;

        /// <summary>
        /// Gets or sets the value of variable AD1_PI_EmailSource_getValue.
        /// </summary>
        [TestVariable("222df634-163d-40c5-b3e3-965c0026f321")]
        public string AD1_PI_EmailSource_getValue
        {
            get { return _AD1_PI_EmailSource_getValue; }
            set { _AD1_PI_EmailSource_getValue = value; }
        }

        string _Edit_AD1_PI_EmailSource_getValue;

        /// <summary>
        /// Gets or sets the value of variable Edit_AD1_PI_EmailSource_getValue.
        /// </summary>
        [TestVariable("87857774-2ed9-4774-8f4a-7b620fef68a9")]
        public string Edit_AD1_PI_EmailSource_getValue
        {
            get { return _Edit_AD1_PI_EmailSource_getValue; }
            set { _Edit_AD1_PI_EmailSource_getValue = value; }
        }

        string _AD1_PI_Email_getValue1;

        /// <summary>
        /// Gets or sets the value of variable AD1_PI_Email_getValue1.
        /// </summary>
        [TestVariable("9d7c0854-9a8f-4771-8077-de61db98a808")]
        public string AD1_PI_Email_getValue1
        {
            get { return _AD1_PI_Email_getValue1; }
            set { _AD1_PI_Email_getValue1 = value; }
        }

        string _Edit_AD1_PI_Email_getValue;

        /// <summary>
        /// Gets or sets the value of variable Edit_AD1_PI_Email_getValue.
        /// </summary>
        [TestVariable("ff91122a-2548-45d7-b3e4-4e26e0c5817a")]
        public string Edit_AD1_PI_Email_getValue
        {
            get { return _Edit_AD1_PI_Email_getValue; }
            set { _Edit_AD1_PI_Email_getValue = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.Save_Button' at 6;8.", repo.ApplicationUnderTest.Save_ButtonInfo, new RecordItemIndex(0));
            repo.ApplicationUnderTest.Save_Button.Click("6;8");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 5s.", new RecordItemIndex(1));
            Delay.Duration(5000, false);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Enabled='True') on item 'ApplicationUnderTest.Driver_Owner_Different'.", repo.ApplicationUnderTest.Driver_Owner_DifferentInfo, new RecordItemIndex(2));
            Validate.AttributeEqual(repo.ApplicationUnderTest.Driver_Owner_DifferentInfo, "Enabled", "True");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Value='true') on item 'ApplicationUnderTest.Driver_Owner_Different'.", repo.ApplicationUnderTest.Driver_Owner_DifferentInfo, new RecordItemIndex(3));
            Validate.AttributeEqual(repo.ApplicationUnderTest.Driver_Owner_DifferentInfo, "Value", "true");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$AD1_PI_FirstName) on item 'ApplicationUnderTest.AD1_PI_FirstName'.", repo.ApplicationUnderTest.AD1_PI_FirstNameInfo, new RecordItemIndex(4));
            Validate.AttributeEqual(repo.ApplicationUnderTest.AD1_PI_FirstNameInfo, "TagValue", AD1_PI_FirstName);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "User", AD1_PI_FirstName, new RecordItemIndex(5));
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Ctrl+A' Press.", new RecordItemIndex(6));
            Keyboard.Press(System.Windows.Forms.Keys.A | System.Windows.Forms.Keys.Control, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Delete' Press.", new RecordItemIndex(7));
            Keyboard.Press(System.Windows.Forms.Keys.Delete, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Edit_AD1_PI_FirstName' with focus on 'ApplicationUnderTest.AD1_PI_FirstName'.", repo.ApplicationUnderTest.AD1_PI_FirstNameInfo, new RecordItemIndex(8));
            repo.ApplicationUnderTest.AD1_PI_FirstName.PressKeys(Edit_AD1_PI_FirstName);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "User", "", new RecordItemIndex(9));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$AD1_PI_LastName) on item 'ApplicationUnderTest.AD1_PI_LastName'.", repo.ApplicationUnderTest.AD1_PI_LastNameInfo, new RecordItemIndex(10));
            Validate.AttributeEqual(repo.ApplicationUnderTest.AD1_PI_LastNameInfo, "TagValue", AD1_PI_LastName);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "User", AD1_PI_LastName, new RecordItemIndex(11));
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Ctrl+A' Press.", new RecordItemIndex(12));
            Keyboard.Press(System.Windows.Forms.Keys.A | System.Windows.Forms.Keys.Control, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Delete' Press.", new RecordItemIndex(13));
            Keyboard.Press(System.Windows.Forms.Keys.Delete, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Edit_AD1_PI_LastName' with focus on 'ApplicationUnderTest.AD1_PI_LastName'.", repo.ApplicationUnderTest.AD1_PI_LastNameInfo, new RecordItemIndex(14));
            repo.ApplicationUnderTest.AD1_PI_LastName.PressKeys(Edit_AD1_PI_LastName);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "User", AD1_PI_LastName, new RecordItemIndex(15));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$AD1_PI_POE) on item 'ApplicationUnderTest.AD1_PI_POE'.", repo.ApplicationUnderTest.AD1_PI_POEInfo, new RecordItemIndex(16));
            Validate.AttributeEqual(repo.ApplicationUnderTest.AD1_PI_POEInfo, "TagValue", AD1_PI_POE);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "User", AD1_PI_POE, new RecordItemIndex(17));
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Ctrl+A' Press.", new RecordItemIndex(18));
            Keyboard.Press(System.Windows.Forms.Keys.A | System.Windows.Forms.Keys.Control, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Delete' Press.", new RecordItemIndex(19));
            Keyboard.Press(System.Windows.Forms.Keys.Delete, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Edit_AD1_PI_POE' with focus on 'ApplicationUnderTest.AD1_PI_POE'.", repo.ApplicationUnderTest.AD1_PI_POEInfo, new RecordItemIndex(20));
            repo.ApplicationUnderTest.AD1_PI_POE.PressKeys(Edit_AD1_PI_POE);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "User", Edit_AD1_PI_POE, new RecordItemIndex(21));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$AD1_PI_Address1) on item 'ApplicationUnderTest.AD1_PI_Address1'.", repo.ApplicationUnderTest.AD1_PI_Address1Info, new RecordItemIndex(22));
            Validate.AttributeEqual(repo.ApplicationUnderTest.AD1_PI_Address1Info, "TagValue", AD1_PI_Address1);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "User", AD1_PI_Address1, new RecordItemIndex(23));
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Ctrl+A' Press.", new RecordItemIndex(24));
            Keyboard.Press(System.Windows.Forms.Keys.A | System.Windows.Forms.Keys.Control, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Delete' Press.", new RecordItemIndex(25));
            Keyboard.Press(System.Windows.Forms.Keys.Delete, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Edit_AD1_PI_Address1' with focus on 'ApplicationUnderTest.AD1_PI_Address1'.", repo.ApplicationUnderTest.AD1_PI_Address1Info, new RecordItemIndex(26));
            repo.ApplicationUnderTest.AD1_PI_Address1.PressKeys(Edit_AD1_PI_Address1);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "User", Edit_AD1_PI_Address1, new RecordItemIndex(27));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$AD1_PI_Address2) on item 'ApplicationUnderTest.AD1_PI_Address2'.", repo.ApplicationUnderTest.AD1_PI_Address2Info, new RecordItemIndex(28));
            Validate.AttributeEqual(repo.ApplicationUnderTest.AD1_PI_Address2Info, "TagValue", AD1_PI_Address2);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "User", AD1_PI_Address2, new RecordItemIndex(29));
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Ctrl+A' Press.", new RecordItemIndex(30));
            Keyboard.Press(System.Windows.Forms.Keys.A | System.Windows.Forms.Keys.Control, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Delete' Press.", new RecordItemIndex(31));
            Keyboard.Press(System.Windows.Forms.Keys.Delete, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Edit_AD1_PI_Address2' with focus on 'ApplicationUnderTest.AD1_PI_Address2'.", repo.ApplicationUnderTest.AD1_PI_Address2Info, new RecordItemIndex(32));
            repo.ApplicationUnderTest.AD1_PI_Address2.PressKeys(Edit_AD1_PI_Address2);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "User", Edit_AD1_PI_Address2, new RecordItemIndex(33));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$AD1_PI_City) on item 'ApplicationUnderTest.AD1_PI_City'.", repo.ApplicationUnderTest.AD1_PI_CityInfo, new RecordItemIndex(34));
            Validate.AttributeEqual(repo.ApplicationUnderTest.AD1_PI_CityInfo, "TagValue", AD1_PI_City);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "User", AD1_PI_City, new RecordItemIndex(35));
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Ctrl+A' Press.", new RecordItemIndex(36));
            Keyboard.Press(System.Windows.Forms.Keys.A | System.Windows.Forms.Keys.Control, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Delete' Press.", new RecordItemIndex(37));
            Keyboard.Press(System.Windows.Forms.Keys.Delete, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Edit_AD1_PI_City' with focus on 'ApplicationUnderTest.AD1_PI_City'.", repo.ApplicationUnderTest.AD1_PI_CityInfo, new RecordItemIndex(38));
            repo.ApplicationUnderTest.AD1_PI_City.PressKeys(Edit_AD1_PI_City);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "User", Edit_AD1_PI_City, new RecordItemIndex(39));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$AD1_PI_State) on item 'ApplicationUnderTest.AD1_PI_State'.", repo.ApplicationUnderTest.AD1_PI_StateInfo, new RecordItemIndex(40));
            Validate.AttributeEqual(repo.ApplicationUnderTest.AD1_PI_StateInfo, "TagValue", AD1_PI_State);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "User", AD1_PI_State, new RecordItemIndex(41));
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Ctrl+A' Press.", new RecordItemIndex(42));
            Keyboard.Press(System.Windows.Forms.Keys.A | System.Windows.Forms.Keys.Control, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Delete' Press.", new RecordItemIndex(43));
            Keyboard.Press(System.Windows.Forms.Keys.Delete, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Edit_AD1_PI_State' with focus on 'ApplicationUnderTest.AD1_PI_State'.", repo.ApplicationUnderTest.AD1_PI_StateInfo, new RecordItemIndex(44));
            repo.ApplicationUnderTest.AD1_PI_State.PressKeys(Edit_AD1_PI_State);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "User", Edit_AD1_PI_State, new RecordItemIndex(45));
            
            Report.Screenshot(ReportLevel.Info, "User", "", repo.PegaCaseManagerPortalGoogleChrome.Screenshot_Window, false, new RecordItemIndex(46));
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 500ms.", new RecordItemIndex(47));
            Delay.Duration(500, false);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$AD1_PI_Zip) on item 'ApplicationUnderTest.AD1_PI_Zip'.", repo.ApplicationUnderTest.AD1_PI_ZipInfo, new RecordItemIndex(48));
            Validate.AttributeEqual(repo.ApplicationUnderTest.AD1_PI_ZipInfo, "TagValue", AD1_PI_Zip);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "User", AD1_PI_Zip, new RecordItemIndex(49));
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Ctrl+A' Press.", new RecordItemIndex(50));
            Keyboard.Press(System.Windows.Forms.Keys.A | System.Windows.Forms.Keys.Control, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Delete' Press.", new RecordItemIndex(51));
            Keyboard.Press(System.Windows.Forms.Keys.Delete, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Edit_AD1_PI_Zip' with focus on 'ApplicationUnderTest.AD1_PI_Zip'.", repo.ApplicationUnderTest.AD1_PI_ZipInfo, new RecordItemIndex(52));
            repo.ApplicationUnderTest.AD1_PI_Zip.PressKeys(Edit_AD1_PI_Zip);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "User", Edit_AD1_PI_Zip, new RecordItemIndex(53));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$AD1_PI_BankruptcyCounty) on item 'ApplicationUnderTest.AD1_PI_BankruptcyCounty'.", repo.ApplicationUnderTest.AD1_PI_BankruptcyCountyInfo, new RecordItemIndex(54));
            Validate.AttributeEqual(repo.ApplicationUnderTest.AD1_PI_BankruptcyCountyInfo, "TagValue", AD1_PI_BankruptcyCounty);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "User", AD1_PI_BankruptcyCounty, new RecordItemIndex(55));
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Ctrl+A' Press.", new RecordItemIndex(56));
            Keyboard.Press(System.Windows.Forms.Keys.A | System.Windows.Forms.Keys.Control, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Delete' Press.", new RecordItemIndex(57));
            Keyboard.Press(System.Windows.Forms.Keys.Delete, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Edit_AD1_PI_BankruptcyCounty' with focus on 'ApplicationUnderTest.AD1_PI_BankruptcyCounty'.", repo.ApplicationUnderTest.AD1_PI_BankruptcyCountyInfo, new RecordItemIndex(58));
            repo.ApplicationUnderTest.AD1_PI_BankruptcyCounty.PressKeys(Edit_AD1_PI_BankruptcyCounty);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "User", Edit_AD1_PI_BankruptcyCounty, new RecordItemIndex(59));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$AD1_PI_BankruptcyDistrict) on item 'ApplicationUnderTest.AD1_PI_BankruptcyDistrict'.", repo.ApplicationUnderTest.AD1_PI_BankruptcyDistrictInfo, new RecordItemIndex(60));
            Validate.AttributeEqual(repo.ApplicationUnderTest.AD1_PI_BankruptcyDistrictInfo, "TagValue", AD1_PI_BankruptcyDistrict);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "User", AD1_PI_BankruptcyDistrict, new RecordItemIndex(61));
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Ctrl+A' Press.", new RecordItemIndex(62));
            Keyboard.Press(System.Windows.Forms.Keys.A | System.Windows.Forms.Keys.Control, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Delete' Press.", new RecordItemIndex(63));
            Keyboard.Press(System.Windows.Forms.Keys.Delete, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Edit_AD1_PI_BankruptcyDistrict' with focus on 'ApplicationUnderTest.AD1_PI_BankruptcyDistrict'.", repo.ApplicationUnderTest.AD1_PI_BankruptcyDistrictInfo, new RecordItemIndex(64));
            repo.ApplicationUnderTest.AD1_PI_BankruptcyDistrict.PressKeys(Edit_AD1_PI_BankruptcyDistrict);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "User", Edit_AD1_PI_BankruptcyDistrict, new RecordItemIndex(65));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$AD1_PI_BankruptcyChapter) on item 'ApplicationUnderTest.AD1_PI_BankruptcyChapter'.", repo.ApplicationUnderTest.AD1_PI_BankruptcyChapterInfo, new RecordItemIndex(66));
            Validate.AttributeEqual(repo.ApplicationUnderTest.AD1_PI_BankruptcyChapterInfo, "TagValue", AD1_PI_BankruptcyChapter);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "User", AD1_PI_BankruptcyChapter, new RecordItemIndex(67));
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Ctrl+A' Press.", new RecordItemIndex(68));
            Keyboard.Press(System.Windows.Forms.Keys.A | System.Windows.Forms.Keys.Control, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Delete' Press.", new RecordItemIndex(69));
            Keyboard.Press(System.Windows.Forms.Keys.Delete, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Edit_AD1_PI_BankruptcyChapter' with focus on 'ApplicationUnderTest.AD1_PI_BankruptcyChapter'.", repo.ApplicationUnderTest.AD1_PI_BankruptcyChapterInfo, new RecordItemIndex(70));
            repo.ApplicationUnderTest.AD1_PI_BankruptcyChapter.PressKeys(Edit_AD1_PI_BankruptcyChapter);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "User", Edit_AD1_PI_BankruptcyChapter, new RecordItemIndex(71));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$AD1_PI_BankruptcyCaseNo) on item 'ApplicationUnderTest.AD1_PI_BankruptcyCaseNo'.", repo.ApplicationUnderTest.AD1_PI_BankruptcyCaseNoInfo, new RecordItemIndex(72));
            Validate.AttributeEqual(repo.ApplicationUnderTest.AD1_PI_BankruptcyCaseNoInfo, "TagValue", AD1_PI_BankruptcyCaseNo);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "User", AD1_PI_BankruptcyCaseNo, new RecordItemIndex(73));
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Ctrl+A' Press.", new RecordItemIndex(74));
            Keyboard.Press(System.Windows.Forms.Keys.A | System.Windows.Forms.Keys.Control, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Delete' Press.", new RecordItemIndex(75));
            Keyboard.Press(System.Windows.Forms.Keys.Delete, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Edit_AD1_PI_BankruptcyCaseNo' with focus on 'ApplicationUnderTest.AD1_PI_BankruptcyCaseNo'.", repo.ApplicationUnderTest.AD1_PI_BankruptcyCaseNoInfo, new RecordItemIndex(76));
            repo.ApplicationUnderTest.AD1_PI_BankruptcyCaseNo.PressKeys(Edit_AD1_PI_BankruptcyCaseNo);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "User", Edit_AD1_PI_BankruptcyCaseNo, new RecordItemIndex(77));
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'TagValue' from item 'ApplicationUnderTest.AD1_PI_PhoneUseType' and assigning its value to variable 'AD1_PI_PhoneUseType_getValue'.", repo.ApplicationUnderTest.AD1_PI_PhoneUseTypeInfo, new RecordItemIndex(78));
            AD1_PI_PhoneUseType_getValue = repo.ApplicationUnderTest.AD1_PI_PhoneUseType.Element.GetAttributeValueText("TagValue");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$AD1_PI_PhoneUseType_getValue) on item 'ApplicationUnderTest.AD1_PI_PhoneUseType'.", repo.ApplicationUnderTest.AD1_PI_PhoneUseTypeInfo, new RecordItemIndex(79));
            Validate.AttributeEqual(repo.ApplicationUnderTest.AD1_PI_PhoneUseTypeInfo, "TagValue", AD1_PI_PhoneUseType_getValue);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "User", AD1_PI_PhoneUseType_getValue, new RecordItemIndex(80));
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'TagValue' from item 'ApplicationUnderTest.AD1_PI_PhoneUseType' and assigning its value to variable 'Edit_AD1_PI_PhoneUseType_getValue'.", repo.ApplicationUnderTest.AD1_PI_PhoneUseTypeInfo, new RecordItemIndex(81));
            Edit_AD1_PI_PhoneUseType_getValue = repo.ApplicationUnderTest.AD1_PI_PhoneUseType.Element.GetAttributeValueText("TagValue");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "User", Edit_AD1_PI_PhoneUseType_getValue, new RecordItemIndex(82));
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'TagValue' from item 'ApplicationUnderTest.AD1_PI_PhoneType' and assigning its value to variable 'AD1_PI_PhoneType_getValue'.", repo.ApplicationUnderTest.AD1_PI_PhoneTypeInfo, new RecordItemIndex(83));
            AD1_PI_PhoneType_getValue = repo.ApplicationUnderTest.AD1_PI_PhoneType.Element.GetAttributeValueText("TagValue");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$AD1_PI_PhoneType_getValue) on item 'ApplicationUnderTest.AD1_PI_PhoneType'.", repo.ApplicationUnderTest.AD1_PI_PhoneTypeInfo, new RecordItemIndex(84));
            Validate.AttributeEqual(repo.ApplicationUnderTest.AD1_PI_PhoneTypeInfo, "TagValue", AD1_PI_PhoneType_getValue);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "User", AD1_PI_PhoneType_getValue, new RecordItemIndex(85));
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'TagValue' from item 'ApplicationUnderTest.AD1_PI_PhoneType' and assigning its value to variable 'Edit_AD1_PI_PhoneType_getValue'.", repo.ApplicationUnderTest.AD1_PI_PhoneTypeInfo, new RecordItemIndex(86));
            Edit_AD1_PI_PhoneType_getValue = repo.ApplicationUnderTest.AD1_PI_PhoneType.Element.GetAttributeValueText("TagValue");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "User", Edit_AD1_PI_PhoneType_getValue, new RecordItemIndex(87));
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'TagValue' from item 'ApplicationUnderTest.AD1_PI_PhoneSource' and assigning its value to variable 'AD1_PI_PhoneSource_getValue'.", repo.ApplicationUnderTest.AD1_PI_PhoneSourceInfo, new RecordItemIndex(88));
            AD1_PI_PhoneSource_getValue = repo.ApplicationUnderTest.AD1_PI_PhoneSource.Element.GetAttributeValueText("TagValue");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$AD1_PI_PhoneSource_getValue) on item 'ApplicationUnderTest.AD1_PI_PhoneSource'.", repo.ApplicationUnderTest.AD1_PI_PhoneSourceInfo, new RecordItemIndex(89));
            Validate.AttributeEqual(repo.ApplicationUnderTest.AD1_PI_PhoneSourceInfo, "TagValue", AD1_PI_PhoneSource_getValue);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "User", AD1_PI_PhoneSource_getValue, new RecordItemIndex(90));
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'TagValue' from item 'ApplicationUnderTest.AD1_PI_PhoneSource' and assigning its value to variable 'Edit_AD1_PI_PhoneSource_getValue'.", repo.ApplicationUnderTest.AD1_PI_PhoneSourceInfo, new RecordItemIndex(91));
            Edit_AD1_PI_PhoneSource_getValue = repo.ApplicationUnderTest.AD1_PI_PhoneSource.Element.GetAttributeValueText("TagValue");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "User", Edit_AD1_PI_PhoneSource_getValue, new RecordItemIndex(92));
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'TagValue' from item 'ApplicationUnderTest.AD1_PI_PhoneNumber' and assigning its value to variable 'AD1_PI_PhoneNumber_getValue'.", repo.ApplicationUnderTest.AD1_PI_PhoneNumberInfo, new RecordItemIndex(93));
            AD1_PI_PhoneNumber_getValue = repo.ApplicationUnderTest.AD1_PI_PhoneNumber.Element.GetAttributeValueText("TagValue");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$AD1_PI_PhoneNumber_getValue) on item 'ApplicationUnderTest.AD1_PI_PhoneNumber'.", repo.ApplicationUnderTest.AD1_PI_PhoneNumberInfo, new RecordItemIndex(94));
            Validate.AttributeEqual(repo.ApplicationUnderTest.AD1_PI_PhoneNumberInfo, "TagValue", AD1_PI_PhoneNumber_getValue);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "User", AD1_PI_PhoneNumber_getValue, new RecordItemIndex(95));
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'TagValue' from item 'ApplicationUnderTest.AD1_PI_PhoneNumber' and assigning its value to variable 'Edit_AD1_PI_PhoneNumber_getValue'.", repo.ApplicationUnderTest.AD1_PI_PhoneNumberInfo, new RecordItemIndex(96));
            Edit_AD1_PI_PhoneNumber_getValue = repo.ApplicationUnderTest.AD1_PI_PhoneNumber.Element.GetAttributeValueText("TagValue");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "User", Edit_AD1_PI_PhoneNumber_getValue, new RecordItemIndex(97));
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'TagValue' from item 'ApplicationUnderTest.AD1_PI_EmailUseType' and assigning its value to variable 'AD1_PI_EmailUseType_getvalue'.", repo.ApplicationUnderTest.AD1_PI_EmailUseTypeInfo, new RecordItemIndex(98));
            AD1_PI_EmailUseType_getvalue = repo.ApplicationUnderTest.AD1_PI_EmailUseType.Element.GetAttributeValueText("TagValue");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$AD1_PI_EmailUseType_getvalue) on item 'ApplicationUnderTest.AD1_PI_EmailUseType'.", repo.ApplicationUnderTest.AD1_PI_EmailUseTypeInfo, new RecordItemIndex(99));
            Validate.AttributeEqual(repo.ApplicationUnderTest.AD1_PI_EmailUseTypeInfo, "TagValue", AD1_PI_EmailUseType_getvalue);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "User", AD1_PI_EmailUseType_getvalue, new RecordItemIndex(100));
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'TagValue' from item 'ApplicationUnderTest.AD1_PI_EmailUseType' and assigning its value to variable 'Edit_AD1_PI_EmailUseType_getvalue'.", repo.ApplicationUnderTest.AD1_PI_EmailUseTypeInfo, new RecordItemIndex(101));
            Edit_AD1_PI_EmailUseType_getvalue = repo.ApplicationUnderTest.AD1_PI_EmailUseType.Element.GetAttributeValueText("TagValue");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "User", Edit_AD1_PI_EmailUseType_getvalue, new RecordItemIndex(102));
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'TagValue' from item 'ApplicationUnderTest.AD1_PI_EmailSource' and assigning its value to variable 'AD1_PI_EmailSource_getValue'.", repo.ApplicationUnderTest.AD1_PI_EmailSourceInfo, new RecordItemIndex(103));
            AD1_PI_EmailSource_getValue = repo.ApplicationUnderTest.AD1_PI_EmailSource.Element.GetAttributeValueText("TagValue");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$AD1_PI_EmailSource_getValue) on item 'ApplicationUnderTest.AD1_PI_EmailSource'.", repo.ApplicationUnderTest.AD1_PI_EmailSourceInfo, new RecordItemIndex(104));
            Validate.AttributeEqual(repo.ApplicationUnderTest.AD1_PI_EmailSourceInfo, "TagValue", AD1_PI_EmailSource_getValue);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "User", AD1_PI_EmailSource_getValue, new RecordItemIndex(105));
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'TagValue' from item 'ApplicationUnderTest.AD1_PI_EmailSource' and assigning its value to variable 'Edit_AD1_PI_EmailSource_getValue'.", repo.ApplicationUnderTest.AD1_PI_EmailSourceInfo, new RecordItemIndex(106));
            Edit_AD1_PI_EmailSource_getValue = repo.ApplicationUnderTest.AD1_PI_EmailSource.Element.GetAttributeValueText("TagValue");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "User", Edit_AD1_PI_EmailSource_getValue, new RecordItemIndex(107));
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'TagValue' from item 'ApplicationUnderTest.AD1_PI_Email' and assigning its value to variable 'AD1_PI_Email_getValue1'.", repo.ApplicationUnderTest.AD1_PI_EmailInfo, new RecordItemIndex(108));
            AD1_PI_Email_getValue1 = repo.ApplicationUnderTest.AD1_PI_Email.Element.GetAttributeValueText("TagValue");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$AD1_PI_Email_getValue1) on item 'ApplicationUnderTest.AD1_PI_Email'.", repo.ApplicationUnderTest.AD1_PI_EmailInfo, new RecordItemIndex(109));
            Validate.AttributeEqual(repo.ApplicationUnderTest.AD1_PI_EmailInfo, "TagValue", AD1_PI_Email_getValue1);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "User", AD1_PI_Email_getValue1, new RecordItemIndex(110));
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'TagValue' from item 'ApplicationUnderTest.AD1_PI_Email' and assigning its value to variable 'Edit_AD1_PI_Email_getValue'.", repo.ApplicationUnderTest.AD1_PI_EmailInfo, new RecordItemIndex(111));
            Edit_AD1_PI_Email_getValue = repo.ApplicationUnderTest.AD1_PI_Email.Element.GetAttributeValueText("TagValue");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "User", Edit_AD1_PI_Email_getValue, new RecordItemIndex(112));
            
            Report.Screenshot(ReportLevel.Info, "User", "", repo.PegaCaseManagerPortalGoogleChrome.Screenshot_Window, false, new RecordItemIndex(113));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$Edit_AD1_PI_FirstName) on item 'ApplicationUnderTest.AD1_PI_FirstName'.", repo.ApplicationUnderTest.AD1_PI_FirstNameInfo, new RecordItemIndex(114));
            Validate.AttributeEqual(repo.ApplicationUnderTest.AD1_PI_FirstNameInfo, "TagValue", Edit_AD1_PI_FirstName);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "User", Edit_AD1_PI_FirstName, new RecordItemIndex(115));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$Edit_AD1_PI_LastName) on item 'ApplicationUnderTest.AD1_PI_LastName'.", repo.ApplicationUnderTest.AD1_PI_LastNameInfo, new RecordItemIndex(116));
            Validate.AttributeEqual(repo.ApplicationUnderTest.AD1_PI_LastNameInfo, "TagValue", Edit_AD1_PI_LastName);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "User", Edit_AD1_PI_LastName, new RecordItemIndex(117));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$Edit_AD1_PI_POE) on item 'ApplicationUnderTest.AD1_PI_POE'.", repo.ApplicationUnderTest.AD1_PI_POEInfo, new RecordItemIndex(118));
            Validate.AttributeEqual(repo.ApplicationUnderTest.AD1_PI_POEInfo, "TagValue", Edit_AD1_PI_POE);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "User", Edit_AD1_PI_POE, new RecordItemIndex(119));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$Edit_AD1_PI_Address1) on item 'ApplicationUnderTest.AD1_PI_Address1'.", repo.ApplicationUnderTest.AD1_PI_Address1Info, new RecordItemIndex(120));
            Validate.AttributeEqual(repo.ApplicationUnderTest.AD1_PI_Address1Info, "TagValue", Edit_AD1_PI_Address1);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "User", Edit_AD1_PI_Address1, new RecordItemIndex(121));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$Edit_AD1_PI_Address2) on item 'ApplicationUnderTest.AD1_PI_Address2'.", repo.ApplicationUnderTest.AD1_PI_Address2Info, new RecordItemIndex(122));
            Validate.AttributeEqual(repo.ApplicationUnderTest.AD1_PI_Address2Info, "TagValue", Edit_AD1_PI_Address2);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "User", Edit_AD1_PI_Address2, new RecordItemIndex(123));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$Edit_AD1_PI_City) on item 'ApplicationUnderTest.AD1_PI_City'.", repo.ApplicationUnderTest.AD1_PI_CityInfo, new RecordItemIndex(124));
            Validate.AttributeEqual(repo.ApplicationUnderTest.AD1_PI_CityInfo, "TagValue", Edit_AD1_PI_City);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "User", Edit_AD1_PI_City, new RecordItemIndex(125));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$Edit_AD1_PI_State) on item 'ApplicationUnderTest.AD1_PI_State'.", repo.ApplicationUnderTest.AD1_PI_StateInfo, new RecordItemIndex(126));
            Validate.AttributeEqual(repo.ApplicationUnderTest.AD1_PI_StateInfo, "TagValue", Edit_AD1_PI_State);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "User", Edit_AD1_PI_State, new RecordItemIndex(127));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$Edit_AD1_PI_Zip) on item 'ApplicationUnderTest.AD1_PI_Zip'.", repo.ApplicationUnderTest.AD1_PI_ZipInfo, new RecordItemIndex(128));
            Validate.AttributeEqual(repo.ApplicationUnderTest.AD1_PI_ZipInfo, "TagValue", Edit_AD1_PI_Zip);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "User", Edit_AD1_PI_Zip, new RecordItemIndex(129));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$Edit_AD1_PI_BankruptcyCounty) on item 'ApplicationUnderTest.AD1_PI_BankruptcyCounty'.", repo.ApplicationUnderTest.AD1_PI_BankruptcyCountyInfo, new RecordItemIndex(130));
            Validate.AttributeEqual(repo.ApplicationUnderTest.AD1_PI_BankruptcyCountyInfo, "TagValue", Edit_AD1_PI_BankruptcyCounty);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "User", Edit_AD1_PI_BankruptcyCounty, new RecordItemIndex(131));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$Edit_AD1_PI_BankruptcyDistrict) on item 'ApplicationUnderTest.AD1_PI_BankruptcyDistrict'.", repo.ApplicationUnderTest.AD1_PI_BankruptcyDistrictInfo, new RecordItemIndex(132));
            Validate.AttributeEqual(repo.ApplicationUnderTest.AD1_PI_BankruptcyDistrictInfo, "TagValue", Edit_AD1_PI_BankruptcyDistrict);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "User", Edit_AD1_PI_BankruptcyDistrict, new RecordItemIndex(133));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$Edit_AD1_PI_BankruptcyChapter) on item 'ApplicationUnderTest.AD1_PI_BankruptcyChapter'.", repo.ApplicationUnderTest.AD1_PI_BankruptcyChapterInfo, new RecordItemIndex(134));
            Validate.AttributeEqual(repo.ApplicationUnderTest.AD1_PI_BankruptcyChapterInfo, "TagValue", Edit_AD1_PI_BankruptcyChapter);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "User", Edit_AD1_PI_BankruptcyChapter, new RecordItemIndex(135));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$Edit_AD1_PI_BankruptcyCaseNo) on item 'ApplicationUnderTest.AD1_PI_BankruptcyCaseNo'.", repo.ApplicationUnderTest.AD1_PI_BankruptcyCaseNoInfo, new RecordItemIndex(136));
            Validate.AttributeEqual(repo.ApplicationUnderTest.AD1_PI_BankruptcyCaseNoInfo, "TagValue", Edit_AD1_PI_BankruptcyCaseNo);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "User", Edit_AD1_PI_BankruptcyCaseNo, new RecordItemIndex(137));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$Edit_AD1_PI_PhoneUseType_getValue) on item 'ApplicationUnderTest.AD1_PI_PhoneUseType'.", repo.ApplicationUnderTest.AD1_PI_PhoneUseTypeInfo, new RecordItemIndex(138));
            Validate.AttributeEqual(repo.ApplicationUnderTest.AD1_PI_PhoneUseTypeInfo, "TagValue", Edit_AD1_PI_PhoneUseType_getValue);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "User", Edit_AD1_PI_PhoneUseType_getValue, new RecordItemIndex(139));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$Edit_AD1_PI_PhoneType_getValue) on item 'ApplicationUnderTest.AD1_PI_PhoneType'.", repo.ApplicationUnderTest.AD1_PI_PhoneTypeInfo, new RecordItemIndex(140));
            Validate.AttributeEqual(repo.ApplicationUnderTest.AD1_PI_PhoneTypeInfo, "TagValue", Edit_AD1_PI_PhoneType_getValue);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "User", Edit_AD1_PI_PhoneType_getValue, new RecordItemIndex(141));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$Edit_AD1_PI_PhoneSource_getValue) on item 'ApplicationUnderTest.AD1_PI_PhoneSource'.", repo.ApplicationUnderTest.AD1_PI_PhoneSourceInfo, new RecordItemIndex(142));
            Validate.AttributeEqual(repo.ApplicationUnderTest.AD1_PI_PhoneSourceInfo, "TagValue", Edit_AD1_PI_PhoneSource_getValue);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "User", Edit_AD1_PI_PhoneSource_getValue, new RecordItemIndex(143));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$Edit_AD1_PI_PhoneNumber_getValue) on item 'ApplicationUnderTest.AD1_PI_PhoneNumber'.", repo.ApplicationUnderTest.AD1_PI_PhoneNumberInfo, new RecordItemIndex(144));
            Validate.AttributeEqual(repo.ApplicationUnderTest.AD1_PI_PhoneNumberInfo, "TagValue", Edit_AD1_PI_PhoneNumber_getValue);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "User", Edit_AD1_PI_PhoneNumber_getValue, new RecordItemIndex(145));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$Edit_AD1_PI_EmailUseType_getvalue) on item 'ApplicationUnderTest.AD1_PI_EmailUseType'.", repo.ApplicationUnderTest.AD1_PI_EmailUseTypeInfo, new RecordItemIndex(146));
            Validate.AttributeEqual(repo.ApplicationUnderTest.AD1_PI_EmailUseTypeInfo, "TagValue", Edit_AD1_PI_EmailUseType_getvalue);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "User", Edit_AD1_PI_EmailUseType_getvalue, new RecordItemIndex(147));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$Edit_AD1_PI_EmailSource_getValue) on item 'ApplicationUnderTest.AD1_PI_EmailSource'.", repo.ApplicationUnderTest.AD1_PI_EmailSourceInfo, new RecordItemIndex(148));
            Validate.AttributeEqual(repo.ApplicationUnderTest.AD1_PI_EmailSourceInfo, "TagValue", Edit_AD1_PI_EmailSource_getValue);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "User", Edit_AD1_PI_EmailSource_getValue, new RecordItemIndex(149));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$Edit_AD1_PI_Email_getValue) on item 'ApplicationUnderTest.AD1_PI_Email'.", repo.ApplicationUnderTest.AD1_PI_EmailInfo, new RecordItemIndex(150));
            Validate.AttributeEqual(repo.ApplicationUnderTest.AD1_PI_EmailInfo, "TagValue", Edit_AD1_PI_Email_getValue);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "User", Edit_AD1_PI_Email_getValue, new RecordItemIndex(151));
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.SubmitButton1' at 46;15.", repo.ApplicationUnderTest.SubmitButton1Info, new RecordItemIndex(152));
            repo.ApplicationUnderTest.SubmitButton1.Click("46;15");
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
