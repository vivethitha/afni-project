///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace SubmissionCase_E2E
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Adverse1_Driver_Personal_Information_Save recording.
    /// </summary>
    [TestModule("029b2bd7-a05f-49e7-bbcd-2f3e93715d8f", ModuleType.Recording, 1)]
    public partial class Adverse1_Driver_Personal_Information_Save : ITestModule
    {
        /// <summary>
        /// Holds an instance of the SubmissionCase_E2ERepository repository.
        /// </summary>
        public static SubmissionCase_E2ERepository repo = SubmissionCase_E2ERepository.Instance;

        static Adverse1_Driver_Personal_Information_Save instance = new Adverse1_Driver_Personal_Information_Save();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Adverse1_Driver_Personal_Information_Save()
        {
            AD1_PI_FirstName = "";
            AD1_PI_LastName = "";
            AD1_PI_POE = "";
            AD1_PI_Address1 = "";
            AD1_PI_Address2 = "";
            AD1_PI_City = "";
            AD1_PI_State = "";
            AD1_PI_Zip = "";
            AD1_PI_Email_getValue = "";
            AD1_PI_BankruptcyCounty = "";
            AD1_PI_BankruptcyDistrict = "";
            AD1_PI_BankruptcyChapter = "";
            AD1_PI_BankruptcyCaseNo = "";
            AD1_PI_PhoneNumber_getValue = "";
            AD1_PI_PhoneUseType = "";
            AD1_PI_PhoneType = "";
            AD1_PI_PhoneSource = "";
            AD1_PI_EmailUseType = "";
            AD1_PI_EmailSource = "";
            AD1_PI_Email = "";
            Test = "AD1_PI_BankruptcyCaseNo";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Adverse1_Driver_Personal_Information_Save Instance
        {
            get { return instance; }
        }

#region Variables

        string _AD1_PI_FirstName;

        /// <summary>
        /// Gets or sets the value of variable AD1_PI_FirstName.
        /// </summary>
        [TestVariable("ec7134df-bdc5-4115-bf0a-1bc333efdc02")]
        public string AD1_PI_FirstName
        {
            get { return _AD1_PI_FirstName; }
            set { _AD1_PI_FirstName = value; }
        }

        string _AD1_PI_LastName;

        /// <summary>
        /// Gets or sets the value of variable AD1_PI_LastName.
        /// </summary>
        [TestVariable("f7e15988-6de3-4a06-a916-d259d3133333")]
        public string AD1_PI_LastName
        {
            get { return _AD1_PI_LastName; }
            set { _AD1_PI_LastName = value; }
        }

        string _AD1_PI_POE;

        /// <summary>
        /// Gets or sets the value of variable AD1_PI_POE.
        /// </summary>
        [TestVariable("2f93258c-5dfe-41ad-be65-b2619277b8f7")]
        public string AD1_PI_POE
        {
            get { return _AD1_PI_POE; }
            set { _AD1_PI_POE = value; }
        }

        string _AD1_PI_Address1;

        /// <summary>
        /// Gets or sets the value of variable AD1_PI_Address1.
        /// </summary>
        [TestVariable("f51abf26-abfe-4a60-9c93-0d34645dc3f4")]
        public string AD1_PI_Address1
        {
            get { return _AD1_PI_Address1; }
            set { _AD1_PI_Address1 = value; }
        }

        string _AD1_PI_Address2;

        /// <summary>
        /// Gets or sets the value of variable AD1_PI_Address2.
        /// </summary>
        [TestVariable("e260274d-aedd-4949-a7d0-b6918a7a7031")]
        public string AD1_PI_Address2
        {
            get { return _AD1_PI_Address2; }
            set { _AD1_PI_Address2 = value; }
        }

        string _AD1_PI_City;

        /// <summary>
        /// Gets or sets the value of variable AD1_PI_City.
        /// </summary>
        [TestVariable("f41eca89-5abf-4d73-8289-b7ca162f6252")]
        public string AD1_PI_City
        {
            get { return _AD1_PI_City; }
            set { _AD1_PI_City = value; }
        }

        string _AD1_PI_State;

        /// <summary>
        /// Gets or sets the value of variable AD1_PI_State.
        /// </summary>
        [TestVariable("92665dab-b3da-4b16-a400-62f6e6e2ea36")]
        public string AD1_PI_State
        {
            get { return _AD1_PI_State; }
            set { _AD1_PI_State = value; }
        }

        string _AD1_PI_Zip;

        /// <summary>
        /// Gets or sets the value of variable AD1_PI_Zip.
        /// </summary>
        [TestVariable("25108c3a-4848-498b-bcc5-f629616233d4")]
        public string AD1_PI_Zip
        {
            get { return _AD1_PI_Zip; }
            set { _AD1_PI_Zip = value; }
        }

        string _AD1_PI_Email_getValue;

        /// <summary>
        /// Gets or sets the value of variable AD1_PI_Email_getValue.
        /// </summary>
        [TestVariable("c0e41e11-154c-4b4a-b25d-5710d3754cdb")]
        public string AD1_PI_Email_getValue
        {
            get { return _AD1_PI_Email_getValue; }
            set { _AD1_PI_Email_getValue = value; }
        }

        string _AD1_PI_BankruptcyCounty;

        /// <summary>
        /// Gets or sets the value of variable AD1_PI_BankruptcyCounty.
        /// </summary>
        [TestVariable("30dead16-7415-431a-9bda-77d72f37683f")]
        public string AD1_PI_BankruptcyCounty
        {
            get { return _AD1_PI_BankruptcyCounty; }
            set { _AD1_PI_BankruptcyCounty = value; }
        }

        string _AD1_PI_BankruptcyDistrict;

        /// <summary>
        /// Gets or sets the value of variable AD1_PI_BankruptcyDistrict.
        /// </summary>
        [TestVariable("3302db33-8afd-4401-95b1-d25be1946980")]
        public string AD1_PI_BankruptcyDistrict
        {
            get { return _AD1_PI_BankruptcyDistrict; }
            set { _AD1_PI_BankruptcyDistrict = value; }
        }

        string _AD1_PI_BankruptcyChapter;

        /// <summary>
        /// Gets or sets the value of variable AD1_PI_BankruptcyChapter.
        /// </summary>
        [TestVariable("298fe07f-b864-4d4f-810b-7b1287af253e")]
        public string AD1_PI_BankruptcyChapter
        {
            get { return _AD1_PI_BankruptcyChapter; }
            set { _AD1_PI_BankruptcyChapter = value; }
        }

        string _AD1_PI_BankruptcyCaseNo;

        /// <summary>
        /// Gets or sets the value of variable AD1_PI_BankruptcyCaseNo.
        /// </summary>
        [TestVariable("84ff08f6-241e-4697-a479-f796bb80a6bc")]
        public string AD1_PI_BankruptcyCaseNo
        {
            get { return _AD1_PI_BankruptcyCaseNo; }
            set { _AD1_PI_BankruptcyCaseNo = value; }
        }

        string _AD1_PI_PhoneNumber_getValue;

        /// <summary>
        /// Gets or sets the value of variable AD1_PI_PhoneNumber_getValue.
        /// </summary>
        [TestVariable("d6b96324-b151-487c-8c76-f55444397fe2")]
        public string AD1_PI_PhoneNumber_getValue
        {
            get { return _AD1_PI_PhoneNumber_getValue; }
            set { _AD1_PI_PhoneNumber_getValue = value; }
        }

        string _AD1_PI_PhoneUseType;

        /// <summary>
        /// Gets or sets the value of variable AD1_PI_PhoneUseType.
        /// </summary>
        [TestVariable("8145a800-3ee8-4dd5-a1f3-06e4dc26f3ee")]
        public string AD1_PI_PhoneUseType
        {
            get { return _AD1_PI_PhoneUseType; }
            set { _AD1_PI_PhoneUseType = value; }
        }

        string _AD1_PI_PhoneType;

        /// <summary>
        /// Gets or sets the value of variable AD1_PI_PhoneType.
        /// </summary>
        [TestVariable("c88ba3c1-1550-4ad3-a3bc-283c2b82b1ab")]
        public string AD1_PI_PhoneType
        {
            get { return _AD1_PI_PhoneType; }
            set { _AD1_PI_PhoneType = value; }
        }

        string _AD1_PI_PhoneSource;

        /// <summary>
        /// Gets or sets the value of variable AD1_PI_PhoneSource.
        /// </summary>
        [TestVariable("8739610e-336f-4876-bd92-fcbb39d7f9a5")]
        public string AD1_PI_PhoneSource
        {
            get { return _AD1_PI_PhoneSource; }
            set { _AD1_PI_PhoneSource = value; }
        }

        string _AD1_PI_EmailUseType;

        /// <summary>
        /// Gets or sets the value of variable AD1_PI_EmailUseType.
        /// </summary>
        [TestVariable("89e3a87b-3b52-487f-a1e0-6493fb2f4131")]
        public string AD1_PI_EmailUseType
        {
            get { return _AD1_PI_EmailUseType; }
            set { _AD1_PI_EmailUseType = value; }
        }

        string _AD1_PI_EmailSource;

        /// <summary>
        /// Gets or sets the value of variable AD1_PI_EmailSource.
        /// </summary>
        [TestVariable("1d64c4c2-f0cc-485c-ae6a-7cec64974884")]
        public string AD1_PI_EmailSource
        {
            get { return _AD1_PI_EmailSource; }
            set { _AD1_PI_EmailSource = value; }
        }

        string _AD1_PI_Email;

        /// <summary>
        /// Gets or sets the value of variable AD1_PI_Email.
        /// </summary>
        [TestVariable("915179b5-ce7a-4a87-a1e0-c7f9620e849e")]
        public string AD1_PI_Email
        {
            get { return _AD1_PI_Email; }
            set { _AD1_PI_Email = value; }
        }

        string _Test;

        /// <summary>
        /// Gets or sets the value of variable Test.
        /// </summary>
        [TestVariable("66b85ec6-4d51-4a15-8548-67a42ffbbe1d")]
        public string Test
        {
            get { return _Test; }
            set { _Test = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.Save_Button' at 6;8.", repo.ApplicationUnderTest.Save_ButtonInfo, new RecordItemIndex(0));
            repo.ApplicationUnderTest.Save_Button.Click("6;8");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 5s.", new RecordItemIndex(1));
            Delay.Duration(5000, false);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Enabled='True') on item 'ApplicationUnderTest.Driver_Owner_Different'.", repo.ApplicationUnderTest.Driver_Owner_DifferentInfo, new RecordItemIndex(2));
            Validate.AttributeEqual(repo.ApplicationUnderTest.Driver_Owner_DifferentInfo, "Enabled", "True");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Value='true') on item 'ApplicationUnderTest.Driver_Owner_Different'.", repo.ApplicationUnderTest.Driver_Owner_DifferentInfo, new RecordItemIndex(3));
            Validate.AttributeEqual(repo.ApplicationUnderTest.Driver_Owner_DifferentInfo, "Value", "true");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$AD1_PI_FirstName) on item 'ApplicationUnderTest.AD1_PI_FirstName'.", repo.ApplicationUnderTest.AD1_PI_FirstNameInfo, new RecordItemIndex(4));
            Validate.AttributeEqual(repo.ApplicationUnderTest.AD1_PI_FirstNameInfo, "TagValue", AD1_PI_FirstName);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "User", AD1_PI_FirstName, new RecordItemIndex(5));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$AD1_PI_LastName) on item 'ApplicationUnderTest.AD1_PI_LastName'.", repo.ApplicationUnderTest.AD1_PI_LastNameInfo, new RecordItemIndex(6));
            Validate.AttributeEqual(repo.ApplicationUnderTest.AD1_PI_LastNameInfo, "TagValue", AD1_PI_LastName);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "User", AD1_PI_LastName, new RecordItemIndex(7));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$AD1_PI_POE) on item 'ApplicationUnderTest.AD1_PI_POE'.", repo.ApplicationUnderTest.AD1_PI_POEInfo, new RecordItemIndex(8));
            Validate.AttributeEqual(repo.ApplicationUnderTest.AD1_PI_POEInfo, "TagValue", AD1_PI_POE);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "User", AD1_PI_POE, new RecordItemIndex(9));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$AD1_PI_Address1) on item 'ApplicationUnderTest.AD1_PI_Address1'.", repo.ApplicationUnderTest.AD1_PI_Address1Info, new RecordItemIndex(10));
            Validate.AttributeEqual(repo.ApplicationUnderTest.AD1_PI_Address1Info, "TagValue", AD1_PI_Address1);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "User", AD1_PI_Address1, new RecordItemIndex(11));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$AD1_PI_Address2) on item 'ApplicationUnderTest.AD1_PI_Address2'.", repo.ApplicationUnderTest.AD1_PI_Address2Info, new RecordItemIndex(12));
            Validate.AttributeEqual(repo.ApplicationUnderTest.AD1_PI_Address2Info, "TagValue", AD1_PI_Address2);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "User", AD1_PI_Address2, new RecordItemIndex(13));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$AD1_PI_City) on item 'ApplicationUnderTest.AD1_PI_City'.", repo.ApplicationUnderTest.AD1_PI_CityInfo, new RecordItemIndex(14));
            Validate.AttributeEqual(repo.ApplicationUnderTest.AD1_PI_CityInfo, "TagValue", AD1_PI_City);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "User", AD1_PI_City, new RecordItemIndex(15));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$AD1_PI_State) on item 'ApplicationUnderTest.AD1_PI_State'.", repo.ApplicationUnderTest.AD1_PI_StateInfo, new RecordItemIndex(16));
            Validate.AttributeEqual(repo.ApplicationUnderTest.AD1_PI_StateInfo, "TagValue", AD1_PI_State);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "User", AD1_PI_State, new RecordItemIndex(17));
            
            Report.Screenshot(ReportLevel.Info, "User", "", repo.PegaCaseManagerPortalGoogleChrome.Screenshot_Window, false, new RecordItemIndex(18));
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 500ms.", new RecordItemIndex(19));
            Delay.Duration(500, false);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$AD1_PI_Zip) on item 'ApplicationUnderTest.AD1_PI_Zip'.", repo.ApplicationUnderTest.AD1_PI_ZipInfo, new RecordItemIndex(20));
            Validate.AttributeEqual(repo.ApplicationUnderTest.AD1_PI_ZipInfo, "TagValue", AD1_PI_Zip);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "User", AD1_PI_Zip, new RecordItemIndex(21));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$AD1_PI_BankruptcyCounty) on item 'ApplicationUnderTest.AD1_PI_BankruptcyCounty'.", repo.ApplicationUnderTest.AD1_PI_BankruptcyCountyInfo, new RecordItemIndex(22));
            Validate.AttributeEqual(repo.ApplicationUnderTest.AD1_PI_BankruptcyCountyInfo, "TagValue", AD1_PI_BankruptcyCounty);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "User", AD1_PI_BankruptcyCounty, new RecordItemIndex(23));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$AD1_PI_BankruptcyDistrict) on item 'ApplicationUnderTest.AD1_PI_BankruptcyDistrict'.", repo.ApplicationUnderTest.AD1_PI_BankruptcyDistrictInfo, new RecordItemIndex(24));
            Validate.AttributeEqual(repo.ApplicationUnderTest.AD1_PI_BankruptcyDistrictInfo, "TagValue", AD1_PI_BankruptcyDistrict);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "User", AD1_PI_BankruptcyDistrict, new RecordItemIndex(25));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$AD1_PI_BankruptcyChapter) on item 'ApplicationUnderTest.AD1_PI_BankruptcyChapter'.", repo.ApplicationUnderTest.AD1_PI_BankruptcyChapterInfo, new RecordItemIndex(26));
            Validate.AttributeEqual(repo.ApplicationUnderTest.AD1_PI_BankruptcyChapterInfo, "TagValue", AD1_PI_BankruptcyChapter);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "User", AD1_PI_BankruptcyChapter, new RecordItemIndex(27));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$AD1_PI_BankruptcyCaseNo) on item 'ApplicationUnderTest.AD1_PI_BankruptcyCaseNo'.", repo.ApplicationUnderTest.AD1_PI_BankruptcyCaseNoInfo, new RecordItemIndex(28));
            Validate.AttributeEqual(repo.ApplicationUnderTest.AD1_PI_BankruptcyCaseNoInfo, "TagValue", AD1_PI_BankruptcyCaseNo);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "User", AD1_PI_BankruptcyCaseNo, new RecordItemIndex(29));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$AD1_PI_PhoneUseType) on item 'ApplicationUnderTest.AD1_PI_PhoneUseType'.", repo.ApplicationUnderTest.AD1_PI_PhoneUseTypeInfo, new RecordItemIndex(30));
            Validate.AttributeEqual(repo.ApplicationUnderTest.AD1_PI_PhoneUseTypeInfo, "TagValue", AD1_PI_PhoneUseType);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "User", AD1_PI_PhoneUseType, new RecordItemIndex(31));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$AD1_PI_PhoneType) on item 'ApplicationUnderTest.AD1_PI_PhoneType'.", repo.ApplicationUnderTest.AD1_PI_PhoneTypeInfo, new RecordItemIndex(32));
            Validate.AttributeEqual(repo.ApplicationUnderTest.AD1_PI_PhoneTypeInfo, "TagValue", AD1_PI_PhoneType);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "User", AD1_PI_PhoneType, new RecordItemIndex(33));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$AD1_PI_PhoneSource) on item 'ApplicationUnderTest.AD1_PI_PhoneSource'.", repo.ApplicationUnderTest.AD1_PI_PhoneSourceInfo, new RecordItemIndex(34));
            Validate.AttributeEqual(repo.ApplicationUnderTest.AD1_PI_PhoneSourceInfo, "TagValue", AD1_PI_PhoneSource);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "User", AD1_PI_PhoneSource, new RecordItemIndex(35));
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'TagValue' from item 'ApplicationUnderTest.AD1_PI_PhoneNumber' and assigning its value to variable 'AD1_PI_PhoneNumber_getValue'.", repo.ApplicationUnderTest.AD1_PI_PhoneNumberInfo, new RecordItemIndex(36));
            AD1_PI_PhoneNumber_getValue = repo.ApplicationUnderTest.AD1_PI_PhoneNumber.Element.GetAttributeValueText("TagValue");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$AD1_PI_PhoneNumber_getValue) on item 'ApplicationUnderTest.AD1_PI_PhoneNumber'.", repo.ApplicationUnderTest.AD1_PI_PhoneNumberInfo, new RecordItemIndex(37));
            Validate.AttributeEqual(repo.ApplicationUnderTest.AD1_PI_PhoneNumberInfo, "TagValue", AD1_PI_PhoneNumber_getValue);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "User", AD1_PI_PhoneNumber_getValue, new RecordItemIndex(38));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$AD1_PI_EmailUseType) on item 'ApplicationUnderTest.AD1_PI_EmailUseType'.", repo.ApplicationUnderTest.AD1_PI_EmailUseTypeInfo, new RecordItemIndex(39));
            Validate.AttributeEqual(repo.ApplicationUnderTest.AD1_PI_EmailUseTypeInfo, "TagValue", AD1_PI_EmailUseType);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "User", AD1_PI_EmailUseType, new RecordItemIndex(40));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$AD1_PI_EmailSource) on item 'ApplicationUnderTest.AD1_PI_EmailSource'.", repo.ApplicationUnderTest.AD1_PI_EmailSourceInfo, new RecordItemIndex(41));
            Validate.AttributeEqual(repo.ApplicationUnderTest.AD1_PI_EmailSourceInfo, "TagValue", AD1_PI_EmailSource);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "User", AD1_PI_EmailSource, new RecordItemIndex(42));
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse scroll Vertical by 12000 units.", new RecordItemIndex(43));
            Mouse.ScrollWheel(12000);
            Delay.Milliseconds(500);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.AD1_PI_Email' at Center.", repo.ApplicationUnderTest.AD1_PI_EmailInfo, new RecordItemIndex(44));
            repo.ApplicationUnderTest.AD1_PI_Email.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$AD1_PI_Email) on item 'ApplicationUnderTest.AD1_PI_Email'.", repo.ApplicationUnderTest.AD1_PI_EmailInfo, new RecordItemIndex(45));
            Validate.AttributeEqual(repo.ApplicationUnderTest.AD1_PI_EmailInfo, "TagValue", AD1_PI_Email);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "User", AD1_PI_Email, new RecordItemIndex(46));
            
            Report.Screenshot(ReportLevel.Info, "User", "", repo.PegaCaseManagerPortalGoogleChrome.Screenshot_Window, false, new RecordItemIndex(47));
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.SubmitButton1' at 46;15.", repo.ApplicationUnderTest.SubmitButton1Info, new RecordItemIndex(48));
            repo.ApplicationUnderTest.SubmitButton1.Click("46;15");
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
