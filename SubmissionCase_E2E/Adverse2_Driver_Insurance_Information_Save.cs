///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace SubmissionCase_E2E
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Adverse2_Driver_Insurance_Information_Save recording.
    /// </summary>
    [TestModule("eb3c9d68-5840-48cd-943e-875a708f378b", ModuleType.Recording, 1)]
    public partial class Adverse2_Driver_Insurance_Information_Save : ITestModule
    {
        /// <summary>
        /// Holds an instance of the SubmissionCase_E2ERepository repository.
        /// </summary>
        public static SubmissionCase_E2ERepository repo = SubmissionCase_E2ERepository.Instance;

        static Adverse2_Driver_Insurance_Information_Save instance = new Adverse2_Driver_Insurance_Information_Save();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Adverse2_Driver_Insurance_Information_Save()
        {
            AD2_IL_InsuranceCompany = "";
            AD2_IL_PolicyNumber = "";
            AD2_IL_ClaimNumber = "";
            AD2_IL_ContactName = "";
            AD2_IL_State = "";
            AD2_IL_Address1 = "";
            AD2_IL_Address2 = "";
            AD2_IL_City = "";
            AD2_IL_Zipcode = "";
            AD2_IL_PhoneUseType = "";
            AD2_IL_PhoneType = "";
            AD2_IL_PhoneSource = "";
            AD2_IL_PhoneNumber = "";
            AD2_IL_EmailUseType = "";
            AD2_IL_EmailSource = "";
            AD2_IL_email = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Adverse2_Driver_Insurance_Information_Save Instance
        {
            get { return instance; }
        }

#region Variables

        string _AD2_IL_InsuranceCompany;

        /// <summary>
        /// Gets or sets the value of variable AD2_IL_InsuranceCompany.
        /// </summary>
        [TestVariable("c29fedd4-7bc8-4b2c-887c-d2d506ff5eeb")]
        public string AD2_IL_InsuranceCompany
        {
            get { return _AD2_IL_InsuranceCompany; }
            set { _AD2_IL_InsuranceCompany = value; }
        }

        string _AD2_IL_PolicyNumber;

        /// <summary>
        /// Gets or sets the value of variable AD2_IL_PolicyNumber.
        /// </summary>
        [TestVariable("f63df486-0333-49a3-b0cc-1f0f9f650900")]
        public string AD2_IL_PolicyNumber
        {
            get { return _AD2_IL_PolicyNumber; }
            set { _AD2_IL_PolicyNumber = value; }
        }

        string _AD2_IL_ClaimNumber;

        /// <summary>
        /// Gets or sets the value of variable AD2_IL_ClaimNumber.
        /// </summary>
        [TestVariable("d1e96c20-f436-4d32-8a0c-e2c8a1e3f125")]
        public string AD2_IL_ClaimNumber
        {
            get { return _AD2_IL_ClaimNumber; }
            set { _AD2_IL_ClaimNumber = value; }
        }

        string _AD2_IL_ContactName;

        /// <summary>
        /// Gets or sets the value of variable AD2_IL_ContactName.
        /// </summary>
        [TestVariable("c55c9612-5c7d-453f-b7fa-1201e8fd8772")]
        public string AD2_IL_ContactName
        {
            get { return _AD2_IL_ContactName; }
            set { _AD2_IL_ContactName = value; }
        }

        string _AD2_IL_State;

        /// <summary>
        /// Gets or sets the value of variable AD2_IL_State.
        /// </summary>
        [TestVariable("fce8e14f-22b6-42bc-a27b-df444a9e56ea")]
        public string AD2_IL_State
        {
            get { return _AD2_IL_State; }
            set { _AD2_IL_State = value; }
        }

        string _AD2_IL_Address1;

        /// <summary>
        /// Gets or sets the value of variable AD2_IL_Address1.
        /// </summary>
        [TestVariable("091fb9d1-bff5-4e94-ac36-4dc42f2ea43f")]
        public string AD2_IL_Address1
        {
            get { return _AD2_IL_Address1; }
            set { _AD2_IL_Address1 = value; }
        }

        string _AD2_IL_Address2;

        /// <summary>
        /// Gets or sets the value of variable AD2_IL_Address2.
        /// </summary>
        [TestVariable("cfc542af-2b10-4fd6-abaa-59a214402bb9")]
        public string AD2_IL_Address2
        {
            get { return _AD2_IL_Address2; }
            set { _AD2_IL_Address2 = value; }
        }

        string _AD2_IL_City;

        /// <summary>
        /// Gets or sets the value of variable AD2_IL_City.
        /// </summary>
        [TestVariable("2edb7a2c-57aa-45f1-a9a2-4cfb8ad3bc92")]
        public string AD2_IL_City
        {
            get { return _AD2_IL_City; }
            set { _AD2_IL_City = value; }
        }

        string _AD2_IL_Zipcode;

        /// <summary>
        /// Gets or sets the value of variable AD2_IL_Zipcode.
        /// </summary>
        [TestVariable("3433de23-6275-4fd7-b2dc-f0cb6a995ddd")]
        public string AD2_IL_Zipcode
        {
            get { return _AD2_IL_Zipcode; }
            set { _AD2_IL_Zipcode = value; }
        }

        string _AD2_IL_PhoneUseType;

        /// <summary>
        /// Gets or sets the value of variable AD2_IL_PhoneUseType.
        /// </summary>
        [TestVariable("d22d6f84-6c63-49c9-a435-e64d7d752ea2")]
        public string AD2_IL_PhoneUseType
        {
            get { return _AD2_IL_PhoneUseType; }
            set { _AD2_IL_PhoneUseType = value; }
        }

        string _AD2_IL_PhoneType;

        /// <summary>
        /// Gets or sets the value of variable AD2_IL_PhoneType.
        /// </summary>
        [TestVariable("2e80185f-3ed5-4e77-9afe-4d1a52c46941")]
        public string AD2_IL_PhoneType
        {
            get { return _AD2_IL_PhoneType; }
            set { _AD2_IL_PhoneType = value; }
        }

        string _AD2_IL_PhoneSource;

        /// <summary>
        /// Gets or sets the value of variable AD2_IL_PhoneSource.
        /// </summary>
        [TestVariable("17c1745f-0f65-4f43-b542-020d52bc6a69")]
        public string AD2_IL_PhoneSource
        {
            get { return _AD2_IL_PhoneSource; }
            set { _AD2_IL_PhoneSource = value; }
        }

        string _AD2_IL_PhoneNumber;

        /// <summary>
        /// Gets or sets the value of variable AD2_IL_PhoneNumber.
        /// </summary>
        [TestVariable("3fd46119-ffcb-47e6-8db8-dbaeaf6e47a7")]
        public string AD2_IL_PhoneNumber
        {
            get { return _AD2_IL_PhoneNumber; }
            set { _AD2_IL_PhoneNumber = value; }
        }

        string _AD2_IL_EmailUseType;

        /// <summary>
        /// Gets or sets the value of variable AD2_IL_EmailUseType.
        /// </summary>
        [TestVariable("b27d0c50-87cf-4685-8aaf-d5cb43ec92d3")]
        public string AD2_IL_EmailUseType
        {
            get { return _AD2_IL_EmailUseType; }
            set { _AD2_IL_EmailUseType = value; }
        }

        string _AD2_IL_EmailSource;

        /// <summary>
        /// Gets or sets the value of variable AD2_IL_EmailSource.
        /// </summary>
        [TestVariable("082b0a96-facb-4409-8981-c12cec928a78")]
        public string AD2_IL_EmailSource
        {
            get { return _AD2_IL_EmailSource; }
            set { _AD2_IL_EmailSource = value; }
        }

        string _AD2_IL_email;

        /// <summary>
        /// Gets or sets the value of variable AD2_IL_email.
        /// </summary>
        [TestVariable("e55b5b47-99e1-4e92-9c7f-2fd3ab71cd17")]
        public string AD2_IL_email
        {
            get { return _AD2_IL_email; }
            set { _AD2_IL_email = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.Save_Button' at 6;8.", repo.ApplicationUnderTest.Save_ButtonInfo, new RecordItemIndex(0));
            repo.ApplicationUnderTest.Save_Button.Click("6;8");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 5s.", new RecordItemIndex(1));
            Delay.Duration(5000, false);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$AD2_IL_InsuranceCompany) on item 'ApplicationUnderTest.AD2_IL_CompanyName'.", repo.ApplicationUnderTest.AD2_IL_CompanyNameInfo, new RecordItemIndex(2));
            Validate.AttributeEqual(repo.ApplicationUnderTest.AD2_IL_CompanyNameInfo, "TagValue", AD2_IL_InsuranceCompany);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "User", AD2_IL_InsuranceCompany, new RecordItemIndex(3));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$AD2_IL_PolicyNumber) on item 'ApplicationUnderTest.AD2_IL_PolicyNumber'.", repo.ApplicationUnderTest.AD2_IL_PolicyNumberInfo, new RecordItemIndex(4));
            Validate.AttributeEqual(repo.ApplicationUnderTest.AD2_IL_PolicyNumberInfo, "TagValue", AD2_IL_PolicyNumber);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "User", AD2_IL_PolicyNumber, new RecordItemIndex(5));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$AD2_IL_ClaimNumber) on item 'ApplicationUnderTest.AD2_IL_ClaimNumber'.", repo.ApplicationUnderTest.AD2_IL_ClaimNumberInfo, new RecordItemIndex(6));
            Validate.AttributeEqual(repo.ApplicationUnderTest.AD2_IL_ClaimNumberInfo, "TagValue", AD2_IL_ClaimNumber);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "User", AD2_IL_ClaimNumber, new RecordItemIndex(7));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$AD2_IL_ContactName) on item 'ApplicationUnderTest.AD2_IL_ContactName'.", repo.ApplicationUnderTest.AD2_IL_ContactNameInfo, new RecordItemIndex(8));
            Validate.AttributeEqual(repo.ApplicationUnderTest.AD2_IL_ContactNameInfo, "TagValue", AD2_IL_ContactName);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "User", AD2_IL_ContactName, new RecordItemIndex(9));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$AD2_IL_State) on item 'ApplicationUnderTest.AD2_IL_State'.", repo.ApplicationUnderTest.AD2_IL_StateInfo, new RecordItemIndex(10));
            Validate.AttributeEqual(repo.ApplicationUnderTest.AD2_IL_StateInfo, "TagValue", AD2_IL_State);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "User", AD2_IL_State, new RecordItemIndex(11));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$AD2_IL_Address1) on item 'ApplicationUnderTest.AD2_IL_Address1'.", repo.ApplicationUnderTest.AD2_IL_Address1Info, new RecordItemIndex(12));
            Validate.AttributeEqual(repo.ApplicationUnderTest.AD2_IL_Address1Info, "TagValue", AD2_IL_Address1);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "User", AD2_IL_Address1, new RecordItemIndex(13));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$AD2_IL_Address2) on item 'ApplicationUnderTest.AD2_IL_Address2'.", repo.ApplicationUnderTest.AD2_IL_Address2Info, new RecordItemIndex(14));
            Validate.AttributeEqual(repo.ApplicationUnderTest.AD2_IL_Address2Info, "TagValue", AD2_IL_Address2);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "User", AD2_IL_Address2, new RecordItemIndex(15));
            
            Report.Screenshot(ReportLevel.Info, "User", "", repo.PegaCaseManagerPortalGoogleChrome.Screenshot_Window, false, new RecordItemIndex(16));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$AD2_IL_City) on item 'ApplicationUnderTest.AD2_IL_City'.", repo.ApplicationUnderTest.AD2_IL_CityInfo, new RecordItemIndex(17));
            Validate.AttributeEqual(repo.ApplicationUnderTest.AD2_IL_CityInfo, "TagValue", AD2_IL_City);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "User", AD2_IL_City, new RecordItemIndex(18));
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'TagValue' from item 'ApplicationUnderTest.AD2_IL_Zipcode' and assigning its value to variable 'AD2_IL_Zipcode'.", repo.ApplicationUnderTest.AD2_IL_ZipcodeInfo, new RecordItemIndex(19));
            AD2_IL_Zipcode = repo.ApplicationUnderTest.AD2_IL_Zipcode.Element.GetAttributeValueText("TagValue");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$AD2_IL_Zipcode) on item 'ApplicationUnderTest.AD2_IL_Zipcode'.", repo.ApplicationUnderTest.AD2_IL_ZipcodeInfo, new RecordItemIndex(20));
            Validate.AttributeEqual(repo.ApplicationUnderTest.AD2_IL_ZipcodeInfo, "TagValue", AD2_IL_Zipcode);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "User", "", new RecordItemIndex(21));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$AD2_IL_PhoneUseType) on item 'ApplicationUnderTest.AD2_IL_PhoneUseType'.", repo.ApplicationUnderTest.AD2_IL_PhoneUseTypeInfo, new RecordItemIndex(22));
            Validate.AttributeEqual(repo.ApplicationUnderTest.AD2_IL_PhoneUseTypeInfo, "TagValue", AD2_IL_PhoneUseType);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "User", AD2_IL_PhoneUseType, new RecordItemIndex(23));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$AD2_IL_PhoneType) on item 'ApplicationUnderTest.AD2_IL_PhoneType'.", repo.ApplicationUnderTest.AD2_IL_PhoneTypeInfo, new RecordItemIndex(24));
            Validate.AttributeEqual(repo.ApplicationUnderTest.AD2_IL_PhoneTypeInfo, "TagValue", AD2_IL_PhoneType);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "User", AD2_IL_PhoneType, new RecordItemIndex(25));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$AD2_IL_PhoneSource) on item 'ApplicationUnderTest.AD2_IL_PhoneSource'.", repo.ApplicationUnderTest.AD2_IL_PhoneSourceInfo, new RecordItemIndex(26));
            Validate.AttributeEqual(repo.ApplicationUnderTest.AD2_IL_PhoneSourceInfo, "TagValue", AD2_IL_PhoneSource);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "User", AD2_IL_PhoneSource, new RecordItemIndex(27));
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'TagValue' from item 'ApplicationUnderTest.AD2_IL_PhoneNumber' and assigning its value to variable 'AD2_IL_PhoneNumber'.", repo.ApplicationUnderTest.AD2_IL_PhoneNumberInfo, new RecordItemIndex(28));
            AD2_IL_PhoneNumber = repo.ApplicationUnderTest.AD2_IL_PhoneNumber.Element.GetAttributeValueText("TagValue");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$AD2_IL_PhoneNumber) on item 'ApplicationUnderTest.AD2_IL_PhoneNumber'.", repo.ApplicationUnderTest.AD2_IL_PhoneNumberInfo, new RecordItemIndex(29));
            Validate.AttributeEqual(repo.ApplicationUnderTest.AD2_IL_PhoneNumberInfo, "TagValue", AD2_IL_PhoneNumber);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "User", AD2_IL_PhoneNumber, new RecordItemIndex(30));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$AD2_IL_EmailUseType) on item 'ApplicationUnderTest.AD2_IL_EmailUseType'.", repo.ApplicationUnderTest.AD2_IL_EmailUseTypeInfo, new RecordItemIndex(31));
            Validate.AttributeEqual(repo.ApplicationUnderTest.AD2_IL_EmailUseTypeInfo, "TagValue", AD2_IL_EmailUseType);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "User", AD2_IL_EmailUseType, new RecordItemIndex(32));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$AD2_IL_EmailSource) on item 'ApplicationUnderTest.AD2_IL_EmailSource'.", repo.ApplicationUnderTest.AD2_IL_EmailSourceInfo, new RecordItemIndex(33));
            Validate.AttributeEqual(repo.ApplicationUnderTest.AD2_IL_EmailSourceInfo, "TagValue", AD2_IL_EmailSource);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "User", AD2_IL_EmailSource, new RecordItemIndex(34));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$AD2_IL_email) on item 'ApplicationUnderTest.AD2_IL_email'.", repo.ApplicationUnderTest.AD2_IL_emailInfo, new RecordItemIndex(35));
            Validate.AttributeEqual(repo.ApplicationUnderTest.AD2_IL_emailInfo, "TagValue", AD2_IL_email);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "User", AD2_IL_email, new RecordItemIndex(36));
            
            Report.Screenshot(ReportLevel.Info, "User", "", repo.PegaCaseManagerPortalGoogleChrome.Screenshot_Window, false, new RecordItemIndex(37));
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.SubmitButton1' at 46;15.", repo.ApplicationUnderTest.SubmitButton1Info, new RecordItemIndex(38));
            repo.ApplicationUnderTest.SubmitButton1.Click("46;15");
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
