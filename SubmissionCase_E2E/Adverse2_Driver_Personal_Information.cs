///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace SubmissionCase_E2E
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Adverse2_Driver_Personal_Information recording.
    /// </summary>
    [TestModule("78b8f55d-302f-4853-957c-9bdbff64e82a", ModuleType.Recording, 1)]
    public partial class Adverse2_Driver_Personal_Information : ITestModule
    {
        /// <summary>
        /// Holds an instance of the SubmissionCase_E2ERepository repository.
        /// </summary>
        public static SubmissionCase_E2ERepository repo = SubmissionCase_E2ERepository.Instance;

        static Adverse2_Driver_Personal_Information instance = new Adverse2_Driver_Personal_Information();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Adverse2_Driver_Personal_Information()
        {
            AD2_PI_FirstName = "";
            AD2_PI_LastName = "";
            AD2_PI_POE = "";
            AD2_PI_Address1 = "";
            AD2_PI_Address2 = "";
            AD2_PI_City = "";
            AD2_PI_State = "";
            AD2_PI_Zip = "";
            AD2_PI_BankruptcyCounty = "";
            AD2_PI_BankruptcyDistrict = "";
            AD2_PI_BankruptcyChapter = "";
            AD2_PI_BankruptcyCaseNo = "";
            AD2_PI_UseType = "";
            AD2_PI_PhoneType = "";
            AD2_PI_Source = "";
            AD2_PI_PhoneNumber = "";
            AD2_PI_Email = "";
            AD2_PI_EmailUseType = "";
            AD2_PI_EmailSource = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Adverse2_Driver_Personal_Information Instance
        {
            get { return instance; }
        }

#region Variables

        string _AD2_PI_FirstName;

        /// <summary>
        /// Gets or sets the value of variable AD2_PI_FirstName.
        /// </summary>
        [TestVariable("fd8e16fb-c4be-410a-84db-3b9ba6fc8f70")]
        public string AD2_PI_FirstName
        {
            get { return _AD2_PI_FirstName; }
            set { _AD2_PI_FirstName = value; }
        }

        string _AD2_PI_LastName;

        /// <summary>
        /// Gets or sets the value of variable AD2_PI_LastName.
        /// </summary>
        [TestVariable("be940741-e323-43df-967a-31a3cafb77ea")]
        public string AD2_PI_LastName
        {
            get { return _AD2_PI_LastName; }
            set { _AD2_PI_LastName = value; }
        }

        string _AD2_PI_POE;

        /// <summary>
        /// Gets or sets the value of variable AD2_PI_POE.
        /// </summary>
        [TestVariable("e697b5a4-a7e2-4beb-91bd-4c78b2aef945")]
        public string AD2_PI_POE
        {
            get { return _AD2_PI_POE; }
            set { _AD2_PI_POE = value; }
        }

        string _AD2_PI_Address1;

        /// <summary>
        /// Gets or sets the value of variable AD2_PI_Address1.
        /// </summary>
        [TestVariable("9bcdccea-b103-49c2-a6d1-5dc11b855b2c")]
        public string AD2_PI_Address1
        {
            get { return _AD2_PI_Address1; }
            set { _AD2_PI_Address1 = value; }
        }

        string _AD2_PI_Address2;

        /// <summary>
        /// Gets or sets the value of variable AD2_PI_Address2.
        /// </summary>
        [TestVariable("05784093-0490-403c-bc04-005c6e873929")]
        public string AD2_PI_Address2
        {
            get { return _AD2_PI_Address2; }
            set { _AD2_PI_Address2 = value; }
        }

        string _AD2_PI_City;

        /// <summary>
        /// Gets or sets the value of variable AD2_PI_City.
        /// </summary>
        [TestVariable("a1f386ac-c695-4a17-a5d3-2b8452a85ef3")]
        public string AD2_PI_City
        {
            get { return _AD2_PI_City; }
            set { _AD2_PI_City = value; }
        }

        string _AD2_PI_State;

        /// <summary>
        /// Gets or sets the value of variable AD2_PI_State.
        /// </summary>
        [TestVariable("dadc828e-4b11-4573-810d-77a1afcb98a9")]
        public string AD2_PI_State
        {
            get { return _AD2_PI_State; }
            set { _AD2_PI_State = value; }
        }

        string _AD2_PI_Zip;

        /// <summary>
        /// Gets or sets the value of variable AD2_PI_Zip.
        /// </summary>
        [TestVariable("f24358d6-8a4b-472d-92fc-3319abcce9a8")]
        public string AD2_PI_Zip
        {
            get { return _AD2_PI_Zip; }
            set { _AD2_PI_Zip = value; }
        }

        string _AD2_PI_BankruptcyCounty;

        /// <summary>
        /// Gets or sets the value of variable AD2_PI_BankruptcyCounty.
        /// </summary>
        [TestVariable("9b8d9261-535d-4dfb-85aa-e1b5c920c5db")]
        public string AD2_PI_BankruptcyCounty
        {
            get { return _AD2_PI_BankruptcyCounty; }
            set { _AD2_PI_BankruptcyCounty = value; }
        }

        string _AD2_PI_BankruptcyDistrict;

        /// <summary>
        /// Gets or sets the value of variable AD2_PI_BankruptcyDistrict.
        /// </summary>
        [TestVariable("0f62eaaf-6789-493f-9364-736b4ad83ec5")]
        public string AD2_PI_BankruptcyDistrict
        {
            get { return _AD2_PI_BankruptcyDistrict; }
            set { _AD2_PI_BankruptcyDistrict = value; }
        }

        string _AD2_PI_BankruptcyChapter;

        /// <summary>
        /// Gets or sets the value of variable AD2_PI_BankruptcyChapter.
        /// </summary>
        [TestVariable("9eb9c894-a30b-4c3a-be45-b9eaa57b0064")]
        public string AD2_PI_BankruptcyChapter
        {
            get { return _AD2_PI_BankruptcyChapter; }
            set { _AD2_PI_BankruptcyChapter = value; }
        }

        string _AD2_PI_BankruptcyCaseNo;

        /// <summary>
        /// Gets or sets the value of variable AD2_PI_BankruptcyCaseNo.
        /// </summary>
        [TestVariable("c6532522-4ed1-4be7-983b-428e2735fe0a")]
        public string AD2_PI_BankruptcyCaseNo
        {
            get { return _AD2_PI_BankruptcyCaseNo; }
            set { _AD2_PI_BankruptcyCaseNo = value; }
        }

        string _AD2_PI_UseType;

        /// <summary>
        /// Gets or sets the value of variable AD2_PI_UseType.
        /// </summary>
        [TestVariable("a4cc8d22-8356-40e0-8d7d-92314d865641")]
        public string AD2_PI_UseType
        {
            get { return _AD2_PI_UseType; }
            set { _AD2_PI_UseType = value; }
        }

        string _AD2_PI_PhoneType;

        /// <summary>
        /// Gets or sets the value of variable AD2_PI_PhoneType.
        /// </summary>
        [TestVariable("0d27ac8d-203c-472d-b80f-734e7821396a")]
        public string AD2_PI_PhoneType
        {
            get { return _AD2_PI_PhoneType; }
            set { _AD2_PI_PhoneType = value; }
        }

        string _AD2_PI_Source;

        /// <summary>
        /// Gets or sets the value of variable AD2_PI_Source.
        /// </summary>
        [TestVariable("f938b094-fb34-4f2f-9652-ef8b25f034de")]
        public string AD2_PI_Source
        {
            get { return _AD2_PI_Source; }
            set { _AD2_PI_Source = value; }
        }

        string _AD2_PI_PhoneNumber;

        /// <summary>
        /// Gets or sets the value of variable AD2_PI_PhoneNumber.
        /// </summary>
        [TestVariable("cc342529-ff84-4762-ab22-fcc5647173bc")]
        public string AD2_PI_PhoneNumber
        {
            get { return _AD2_PI_PhoneNumber; }
            set { _AD2_PI_PhoneNumber = value; }
        }

        string _AD2_PI_Email;

        /// <summary>
        /// Gets or sets the value of variable AD2_PI_Email.
        /// </summary>
        [TestVariable("b9b62272-246f-48ad-bfb9-4a4c3a6a5dec")]
        public string AD2_PI_Email
        {
            get { return _AD2_PI_Email; }
            set { _AD2_PI_Email = value; }
        }

        string _AD2_PI_EmailUseType;

        /// <summary>
        /// Gets or sets the value of variable AD2_PI_EmailUseType.
        /// </summary>
        [TestVariable("9c50dc03-e869-453c-9de9-dfef03edffea")]
        public string AD2_PI_EmailUseType
        {
            get { return _AD2_PI_EmailUseType; }
            set { _AD2_PI_EmailUseType = value; }
        }

        string _AD2_PI_EmailSource;

        /// <summary>
        /// Gets or sets the value of variable AD2_PI_EmailSource.
        /// </summary>
        [TestVariable("e0c59b59-5e47-4248-9db5-dfa6c1b735e7")]
        public string AD2_PI_EmailSource
        {
            get { return _AD2_PI_EmailSource; }
            set { _AD2_PI_EmailSource = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Wait", "Waiting 30s to exist. Associated repository item: 'ApplicationUnderTest.AD2_PI_FirstName'", repo.ApplicationUnderTest.AD2_PI_FirstNameInfo, new ActionTimeout(30000), new RecordItemIndex(0));
            repo.ApplicationUnderTest.AD2_PI_FirstNameInfo.WaitForExists(30000);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$AD2_PI_FirstName' with focus on 'ApplicationUnderTest.AD2_PI_FirstName'.", repo.ApplicationUnderTest.AD2_PI_FirstNameInfo, new RecordItemIndex(1));
            repo.ApplicationUnderTest.AD2_PI_FirstName.PressKeys(AD2_PI_FirstName);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$AD2_PI_LastName' with focus on 'ApplicationUnderTest.AD2_PI_LastName'.", repo.ApplicationUnderTest.AD2_PI_LastNameInfo, new RecordItemIndex(2));
            repo.ApplicationUnderTest.AD2_PI_LastName.PressKeys(AD2_PI_LastName);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$AD2_PI_POE' with focus on 'ApplicationUnderTest.AD2_PI_POE'.", repo.ApplicationUnderTest.AD2_PI_POEInfo, new RecordItemIndex(3));
            repo.ApplicationUnderTest.AD2_PI_POE.PressKeys(AD2_PI_POE);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$AD2_PI_Address1' with focus on 'ApplicationUnderTest.AD2_PI_Address1'.", repo.ApplicationUnderTest.AD2_PI_Address1Info, new RecordItemIndex(4));
            repo.ApplicationUnderTest.AD2_PI_Address1.PressKeys(AD2_PI_Address1);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$AD2_PI_Address2' with focus on 'ApplicationUnderTest.AD2_PI_Address2'.", repo.ApplicationUnderTest.AD2_PI_Address2Info, new RecordItemIndex(5));
            repo.ApplicationUnderTest.AD2_PI_Address2.PressKeys(AD2_PI_Address2);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$AD2_PI_City' with focus on 'ApplicationUnderTest.AD2_PI_City'.", repo.ApplicationUnderTest.AD2_PI_CityInfo, new RecordItemIndex(6));
            repo.ApplicationUnderTest.AD2_PI_City.PressKeys(AD2_PI_City);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Set value", "Setting attribute TagValue to '$AD2_PI_State' on item 'ApplicationUnderTest.AD2_PI_State'.", repo.ApplicationUnderTest.AD2_PI_StateInfo, new RecordItemIndex(7));
            repo.ApplicationUnderTest.AD2_PI_State.Element.SetAttributeValue("TagValue", AD2_PI_State);
            Delay.Milliseconds(0);
            
            Report.Screenshot(ReportLevel.Info, "User", "", repo.PegaCaseManagerPortalGoogleChrome.Screenshot_Window, false, new RecordItemIndex(8));
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$AD2_PI_Zip' with focus on 'ApplicationUnderTest.AD2_PI_Zip'.", repo.ApplicationUnderTest.AD2_PI_ZipInfo, new RecordItemIndex(9));
            repo.ApplicationUnderTest.AD2_PI_Zip.PressKeys(AD2_PI_Zip);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Tab' Press.", new RecordItemIndex(10));
            Keyboard.Press(System.Windows.Forms.Keys.Tab, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Space' Press.", new RecordItemIndex(11));
            Keyboard.Press(System.Windows.Forms.Keys.Space, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Tab' Press.", new RecordItemIndex(12));
            Keyboard.Press(System.Windows.Forms.Keys.Tab, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Enter' Press.", new RecordItemIndex(13));
            Keyboard.Press(System.Windows.Forms.Keys.Return, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$AD2_PI_BankruptcyCounty' with focus on 'ApplicationUnderTest.AD2_PI_BankruptcyCounty'.", repo.ApplicationUnderTest.AD2_PI_BankruptcyCountyInfo, new RecordItemIndex(14));
            repo.ApplicationUnderTest.AD2_PI_BankruptcyCounty.PressKeys(AD2_PI_BankruptcyCounty);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$AD2_PI_BankruptcyDistrict' with focus on 'ApplicationUnderTest.AD2_PI_BankruptcyDistrict'.", repo.ApplicationUnderTest.AD2_PI_BankruptcyDistrictInfo, new RecordItemIndex(15));
            repo.ApplicationUnderTest.AD2_PI_BankruptcyDistrict.PressKeys(AD2_PI_BankruptcyDistrict);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$AD2_PI_BankruptcyChapter' with focus on 'ApplicationUnderTest.AD2_PI_BankruptcyChapter'.", repo.ApplicationUnderTest.AD2_PI_BankruptcyChapterInfo, new RecordItemIndex(16));
            repo.ApplicationUnderTest.AD2_PI_BankruptcyChapter.PressKeys(AD2_PI_BankruptcyChapter);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$AD2_PI_BankruptcyCaseNo' with focus on 'ApplicationUnderTest.AD2_PI_BankruptcyCaseNo'.", repo.ApplicationUnderTest.AD2_PI_BankruptcyCaseNoInfo, new RecordItemIndex(17));
            repo.ApplicationUnderTest.AD2_PI_BankruptcyCaseNo.PressKeys(AD2_PI_BankruptcyCaseNo);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Tab' Press.", new RecordItemIndex(18));
            Keyboard.Press(System.Windows.Forms.Keys.Tab, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Enter' Press.", new RecordItemIndex(19));
            Keyboard.Press(System.Windows.Forms.Keys.Return, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Set value", "Setting attribute TagValue to '$AD2_PI_UseType' on item 'ApplicationUnderTest.AD2_PI_UseType'.", repo.ApplicationUnderTest.AD2_PI_UseTypeInfo, new RecordItemIndex(20));
            repo.ApplicationUnderTest.AD2_PI_UseType.Element.SetAttributeValue("TagValue", AD2_PI_UseType);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Set value", "Setting attribute TagValue to '$AD2_PI_PhoneType' on item 'ApplicationUnderTest.AD2_PI_PhoneType'.", repo.ApplicationUnderTest.AD2_PI_PhoneTypeInfo, new RecordItemIndex(21));
            repo.ApplicationUnderTest.AD2_PI_PhoneType.Element.SetAttributeValue("TagValue", AD2_PI_PhoneType);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Set value", "Setting attribute TagValue to '$AD2_PI_Source' on item 'ApplicationUnderTest.AD2_PI_Source'.", repo.ApplicationUnderTest.AD2_PI_SourceInfo, new RecordItemIndex(22));
            repo.ApplicationUnderTest.AD2_PI_Source.Element.SetAttributeValue("TagValue", AD2_PI_Source);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$AD2_PI_PhoneNumber' with focus on 'ApplicationUnderTest.AD2_PI_PhoneNumber'.", repo.ApplicationUnderTest.AD2_PI_PhoneNumberInfo, new RecordItemIndex(23));
            repo.ApplicationUnderTest.AD2_PI_PhoneNumber.PressKeys(AD2_PI_PhoneNumber);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Tab' Press.", new RecordItemIndex(24));
            Keyboard.Press(System.Windows.Forms.Keys.Tab, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Enter' Press.", new RecordItemIndex(25));
            Keyboard.Press(System.Windows.Forms.Keys.Return, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Set value", "Setting attribute TagValue to '$AD2_PI_EmailUseType' on item 'ApplicationUnderTest.AD2_PI_EmailUseType'.", repo.ApplicationUnderTest.AD2_PI_EmailUseTypeInfo, new RecordItemIndex(26));
            repo.ApplicationUnderTest.AD2_PI_EmailUseType.Element.SetAttributeValue("TagValue", AD2_PI_EmailUseType);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Set value", "Setting attribute TagValue to '$AD2_PI_EmailSource' on item 'ApplicationUnderTest.AD2_PI_EmailSource'.", repo.ApplicationUnderTest.AD2_PI_EmailSourceInfo, new RecordItemIndex(27));
            repo.ApplicationUnderTest.AD2_PI_EmailSource.Element.SetAttributeValue("TagValue", AD2_PI_EmailSource);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$AD2_PI_Email' with focus on 'ApplicationUnderTest.AD2_PI_EmailID'.", repo.ApplicationUnderTest.AD2_PI_EmailIDInfo, new RecordItemIndex(28));
            repo.ApplicationUnderTest.AD2_PI_EmailID.PressKeys(AD2_PI_Email);
            Delay.Milliseconds(100);
            
            Report.Screenshot(ReportLevel.Info, "User", "", repo.PegaCaseManagerPortalGoogleChrome.Screenshot_Window, false, new RecordItemIndex(29));
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
