///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace SubmissionCase_E2E
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Adverse1_Owner_Personal_Information recording.
    /// </summary>
    [TestModule("69fb4d72-9230-46f6-aee8-8c0d938f7ad1", ModuleType.Recording, 1)]
    public partial class Adverse1_Owner_Personal_Information : ITestModule
    {
        /// <summary>
        /// Holds an instance of the SubmissionCase_E2ERepository repository.
        /// </summary>
        public static SubmissionCase_E2ERepository repo = SubmissionCase_E2ERepository.Instance;

        static Adverse1_Owner_Personal_Information instance = new Adverse1_Owner_Personal_Information();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Adverse1_Owner_Personal_Information()
        {
            AO_PI_FirstName = "";
            AO_PI_LastName = "";
            AO_PI_BusinessName = "";
            AO_PI_Address1 = "";
            AO_PI_Address2 = "";
            AO_PI_City = "";
            AO_PI_USStateCode = "";
            AO_PI_ZipCode = "";
            AO_PI_BankruptcyCounty = "";
            AO_PI_BankruptcyDistrict = "";
            AO_PI_BankruptcyChapter = "";
            AO_PI_BankruptcyCaseNo = "";
            AO_PI_PhoneUseType = "";
            AO_PI_PhoneType = "";
            AO_PI_PhoneSource = "";
            AO_PI_PhoneNumber = "";
            AO_PI_EmailUseType = "";
            AO_PI_EmailSource = "";
            AO_PI_EmailID = "";
            AO_PI_POE = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Adverse1_Owner_Personal_Information Instance
        {
            get { return instance; }
        }

#region Variables

        string _AO_PI_FirstName;

        /// <summary>
        /// Gets or sets the value of variable AO_PI_FirstName.
        /// </summary>
        [TestVariable("a667de1a-6ceb-446c-8334-30dd28d7070f")]
        public string AO_PI_FirstName
        {
            get { return _AO_PI_FirstName; }
            set { _AO_PI_FirstName = value; }
        }

        string _AO_PI_LastName;

        /// <summary>
        /// Gets or sets the value of variable AO_PI_LastName.
        /// </summary>
        [TestVariable("e077d3bc-6612-4de8-b0ca-ddcc8f28320d")]
        public string AO_PI_LastName
        {
            get { return _AO_PI_LastName; }
            set { _AO_PI_LastName = value; }
        }

        string _AO_PI_BusinessName;

        /// <summary>
        /// Gets or sets the value of variable AO_PI_BusinessName.
        /// </summary>
        [TestVariable("5bf1a283-b6da-440d-a03e-f7bf49d28b22")]
        public string AO_PI_BusinessName
        {
            get { return _AO_PI_BusinessName; }
            set { _AO_PI_BusinessName = value; }
        }

        string _AO_PI_Address1;

        /// <summary>
        /// Gets or sets the value of variable AO_PI_Address1.
        /// </summary>
        [TestVariable("892980d8-842a-4728-aedc-f01144525881")]
        public string AO_PI_Address1
        {
            get { return _AO_PI_Address1; }
            set { _AO_PI_Address1 = value; }
        }

        string _AO_PI_Address2;

        /// <summary>
        /// Gets or sets the value of variable AO_PI_Address2.
        /// </summary>
        [TestVariable("acd1fa95-1a05-4e85-9408-a5ef04a8d97e")]
        public string AO_PI_Address2
        {
            get { return _AO_PI_Address2; }
            set { _AO_PI_Address2 = value; }
        }

        string _AO_PI_City;

        /// <summary>
        /// Gets or sets the value of variable AO_PI_City.
        /// </summary>
        [TestVariable("37edc54b-f770-43d2-8672-72555cb49d6d")]
        public string AO_PI_City
        {
            get { return _AO_PI_City; }
            set { _AO_PI_City = value; }
        }

        string _AO_PI_USStateCode;

        /// <summary>
        /// Gets or sets the value of variable AO_PI_USStateCode.
        /// </summary>
        [TestVariable("399c78bb-9721-4a89-b642-0eec43f0a6d9")]
        public string AO_PI_USStateCode
        {
            get { return _AO_PI_USStateCode; }
            set { _AO_PI_USStateCode = value; }
        }

        string _AO_PI_ZipCode;

        /// <summary>
        /// Gets or sets the value of variable AO_PI_ZipCode.
        /// </summary>
        [TestVariable("479aabe0-705c-46e1-b002-430aad872dd4")]
        public string AO_PI_ZipCode
        {
            get { return _AO_PI_ZipCode; }
            set { _AO_PI_ZipCode = value; }
        }

        string _AO_PI_BankruptcyCounty;

        /// <summary>
        /// Gets or sets the value of variable AO_PI_BankruptcyCounty.
        /// </summary>
        [TestVariable("57709dff-6b02-4181-96d9-510443aa4081")]
        public string AO_PI_BankruptcyCounty
        {
            get { return _AO_PI_BankruptcyCounty; }
            set { _AO_PI_BankruptcyCounty = value; }
        }

        string _AO_PI_BankruptcyDistrict;

        /// <summary>
        /// Gets or sets the value of variable AO_PI_BankruptcyDistrict.
        /// </summary>
        [TestVariable("3d4e51ea-3c68-4249-a429-9c504225b955")]
        public string AO_PI_BankruptcyDistrict
        {
            get { return _AO_PI_BankruptcyDistrict; }
            set { _AO_PI_BankruptcyDistrict = value; }
        }

        string _AO_PI_BankruptcyChapter;

        /// <summary>
        /// Gets or sets the value of variable AO_PI_BankruptcyChapter.
        /// </summary>
        [TestVariable("06087af5-8b6f-4359-b34d-5e58c6a26de2")]
        public string AO_PI_BankruptcyChapter
        {
            get { return _AO_PI_BankruptcyChapter; }
            set { _AO_PI_BankruptcyChapter = value; }
        }

        string _AO_PI_BankruptcyCaseNo;

        /// <summary>
        /// Gets or sets the value of variable AO_PI_BankruptcyCaseNo.
        /// </summary>
        [TestVariable("110d9cd6-1c6f-4117-bf8b-b45589cb1e49")]
        public string AO_PI_BankruptcyCaseNo
        {
            get { return _AO_PI_BankruptcyCaseNo; }
            set { _AO_PI_BankruptcyCaseNo = value; }
        }

        string _AO_PI_PhoneUseType;

        /// <summary>
        /// Gets or sets the value of variable AO_PI_PhoneUseType.
        /// </summary>
        [TestVariable("0a16d5d5-8152-47c2-a4c2-ee6883854ac8")]
        public string AO_PI_PhoneUseType
        {
            get { return _AO_PI_PhoneUseType; }
            set { _AO_PI_PhoneUseType = value; }
        }

        string _AO_PI_PhoneType;

        /// <summary>
        /// Gets or sets the value of variable AO_PI_PhoneType.
        /// </summary>
        [TestVariable("dfcdd06d-214d-47f5-ac24-8c0b554a3e07")]
        public string AO_PI_PhoneType
        {
            get { return _AO_PI_PhoneType; }
            set { _AO_PI_PhoneType = value; }
        }

        string _AO_PI_PhoneSource;

        /// <summary>
        /// Gets or sets the value of variable AO_PI_PhoneSource.
        /// </summary>
        [TestVariable("492d6d9e-3d79-4d51-9c67-853591e4eebb")]
        public string AO_PI_PhoneSource
        {
            get { return _AO_PI_PhoneSource; }
            set { _AO_PI_PhoneSource = value; }
        }

        string _AO_PI_PhoneNumber;

        /// <summary>
        /// Gets or sets the value of variable AO_PI_PhoneNumber.
        /// </summary>
        [TestVariable("2518a765-4773-4ce9-95cb-4477f295aaca")]
        public string AO_PI_PhoneNumber
        {
            get { return _AO_PI_PhoneNumber; }
            set { _AO_PI_PhoneNumber = value; }
        }

        string _AO_PI_EmailUseType;

        /// <summary>
        /// Gets or sets the value of variable AO_PI_EmailUseType.
        /// </summary>
        [TestVariable("c3f9e93b-6fed-404d-923c-44f9313d1fc2")]
        public string AO_PI_EmailUseType
        {
            get { return _AO_PI_EmailUseType; }
            set { _AO_PI_EmailUseType = value; }
        }

        string _AO_PI_EmailSource;

        /// <summary>
        /// Gets or sets the value of variable AO_PI_EmailSource.
        /// </summary>
        [TestVariable("73999a70-7e67-4d08-9c40-1b57a83ea4d8")]
        public string AO_PI_EmailSource
        {
            get { return _AO_PI_EmailSource; }
            set { _AO_PI_EmailSource = value; }
        }

        string _AO_PI_EmailID;

        /// <summary>
        /// Gets or sets the value of variable AO_PI_EmailID.
        /// </summary>
        [TestVariable("f5c1597e-dd0d-4805-b3ee-a82de6093b10")]
        public string AO_PI_EmailID
        {
            get { return _AO_PI_EmailID; }
            set { _AO_PI_EmailID = value; }
        }

        string _AO_PI_POE;

        /// <summary>
        /// Gets or sets the value of variable AO_PI_POE.
        /// </summary>
        [TestVariable("c147d2c1-fc4f-4492-bbc9-dd0a3dec51cc")]
        public string AO_PI_POE
        {
            get { return _AO_PI_POE; }
            set { _AO_PI_POE = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Wait", "Waiting 10s to exist. Associated repository item: 'ApplicationUnderTest.Adverse_Owner_Information_Header'", repo.ApplicationUnderTest.Adverse_Owner_Information_HeaderInfo, new ActionTimeout(10000), new RecordItemIndex(0));
            repo.ApplicationUnderTest.Adverse_Owner_Information_HeaderInfo.WaitForExists(10000);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$AO_PI_BusinessName' with focus on 'ApplicationUnderTest.AO_PI_BusinessName'.", repo.ApplicationUnderTest.AO_PI_BusinessNameInfo, new RecordItemIndex(1));
            repo.ApplicationUnderTest.AO_PI_BusinessName.PressKeys(AO_PI_BusinessName);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$AO_PI_FirstName' with focus on 'ApplicationUnderTest.AO_PI_FirstName'.", repo.ApplicationUnderTest.AO_PI_FirstNameInfo, new RecordItemIndex(2));
            repo.ApplicationUnderTest.AO_PI_FirstName.PressKeys(AO_PI_FirstName);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$AO_PI_LastName' with focus on 'ApplicationUnderTest.AO_PI_LastName'.", repo.ApplicationUnderTest.AO_PI_LastNameInfo, new RecordItemIndex(3));
            repo.ApplicationUnderTest.AO_PI_LastName.PressKeys(AO_PI_LastName);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$AO_PI_POE' with focus on 'ApplicationUnderTest.AO_PI_POE'.", repo.ApplicationUnderTest.AO_PI_POEInfo, new RecordItemIndex(4));
            repo.ApplicationUnderTest.AO_PI_POE.PressKeys(AO_PI_POE);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$AO_PI_Address1' with focus on 'ApplicationUnderTest.AO_PI_Address1'.", repo.ApplicationUnderTest.AO_PI_Address1Info, new RecordItemIndex(5));
            repo.ApplicationUnderTest.AO_PI_Address1.PressKeys(AO_PI_Address1);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$AO_PI_Address2' with focus on 'ApplicationUnderTest.AO_PI_Address2'.", repo.ApplicationUnderTest.AO_PI_Address2Info, new RecordItemIndex(6));
            repo.ApplicationUnderTest.AO_PI_Address2.PressKeys(AO_PI_Address2);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$AO_PI_City' with focus on 'ApplicationUnderTest.AO_PI_City'.", repo.ApplicationUnderTest.AO_PI_CityInfo, new RecordItemIndex(7));
            repo.ApplicationUnderTest.AO_PI_City.PressKeys(AO_PI_City);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Set value", "Setting attribute TagValue to '$AO_PI_USStateCode' on item 'ApplicationUnderTest.AO_PI_USStateCode'.", repo.ApplicationUnderTest.AO_PI_USStateCodeInfo, new RecordItemIndex(8));
            repo.ApplicationUnderTest.AO_PI_USStateCode.Element.SetAttributeValue("TagValue", AO_PI_USStateCode);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$AO_PI_ZipCode' with focus on 'ApplicationUnderTest.AO_PI_ZipCode'.", repo.ApplicationUnderTest.AO_PI_ZipCodeInfo, new RecordItemIndex(9));
            repo.ApplicationUnderTest.AO_PI_ZipCode.PressKeys(AO_PI_ZipCode);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Tab}'.", new RecordItemIndex(10));
            Keyboard.Press("{Tab}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence ' ' with focus on 'ApplicationUnderTest'.", repo.ApplicationUnderTest.SelfInfo, new RecordItemIndex(11));
            repo.ApplicationUnderTest.Self.EnsureVisible();
            Keyboard.Press(" ");
            Delay.Milliseconds(0);
            
            Report.Screenshot(ReportLevel.Info, "User", "", repo.PegaCaseManagerPortalGoogleChrome.Screenshot_Window, false, new RecordItemIndex(12));
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$AO_PI_BankruptcyCounty' with focus on 'ApplicationUnderTest.AO_PI_BankruptcyCounty'.", repo.ApplicationUnderTest.AO_PI_BankruptcyCountyInfo, new RecordItemIndex(13));
            repo.ApplicationUnderTest.AO_PI_BankruptcyCounty.PressKeys(AO_PI_BankruptcyCounty);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$AO_PI_BankruptcyDistrict' with focus on 'ApplicationUnderTest.AO_PI_BankruptcyDistrict'.", repo.ApplicationUnderTest.AO_PI_BankruptcyDistrictInfo, new RecordItemIndex(14));
            repo.ApplicationUnderTest.AO_PI_BankruptcyDistrict.PressKeys(AO_PI_BankruptcyDistrict);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$AO_PI_BankruptcyChapter' with focus on 'ApplicationUnderTest.AO_PI_BankruptcyChapter'.", repo.ApplicationUnderTest.AO_PI_BankruptcyChapterInfo, new RecordItemIndex(15));
            repo.ApplicationUnderTest.AO_PI_BankruptcyChapter.PressKeys(AO_PI_BankruptcyChapter);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$AO_PI_BankruptcyCaseNo' with focus on 'ApplicationUnderTest.AO_PI_BankruptcyCaseNo'.", repo.ApplicationUnderTest.AO_PI_BankruptcyCaseNoInfo, new RecordItemIndex(16));
            repo.ApplicationUnderTest.AO_PI_BankruptcyCaseNo.PressKeys(AO_PI_BankruptcyCaseNo);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Tab}'.", new RecordItemIndex(17));
            Keyboard.Press("{Tab}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Return}'.", new RecordItemIndex(18));
            Keyboard.Press("{Return}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Set value", "Setting attribute TagValue to '$AO_PI_PhoneUseType' on item 'ApplicationUnderTest.AO_PI_PhoneUseType'.", repo.ApplicationUnderTest.AO_PI_PhoneUseTypeInfo, new RecordItemIndex(19));
            repo.ApplicationUnderTest.AO_PI_PhoneUseType.Element.SetAttributeValue("TagValue", AO_PI_PhoneUseType);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Set value", "Setting attribute TagValue to '$AO_PI_PhoneType' on item 'ApplicationUnderTest.AO_PI_PhoneType'.", repo.ApplicationUnderTest.AO_PI_PhoneTypeInfo, new RecordItemIndex(20));
            repo.ApplicationUnderTest.AO_PI_PhoneType.Element.SetAttributeValue("TagValue", AO_PI_PhoneType);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Set value", "Setting attribute TagValue to '$AO_PI_PhoneSource' on item 'ApplicationUnderTest.AO_PI_PhoneSource'.", repo.ApplicationUnderTest.AO_PI_PhoneSourceInfo, new RecordItemIndex(21));
            repo.ApplicationUnderTest.AO_PI_PhoneSource.Element.SetAttributeValue("TagValue", AO_PI_PhoneSource);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$AO_PI_PhoneNumber' with focus on 'ApplicationUnderTest.AO_PI_PhoneNumber'.", repo.ApplicationUnderTest.AO_PI_PhoneNumberInfo, new RecordItemIndex(22));
            repo.ApplicationUnderTest.AO_PI_PhoneNumber.PressKeys(AO_PI_PhoneNumber);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Tab' Press.", new RecordItemIndex(23));
            Keyboard.Press(System.Windows.Forms.Keys.Tab, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Return}'.", new RecordItemIndex(24));
            Keyboard.Press("{Return}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 5s to exist. Associated repository item: 'ApplicationUnderTest.AO_PI_EmailUseType'", repo.ApplicationUnderTest.AO_PI_EmailUseTypeInfo, new ActionTimeout(5000), new RecordItemIndex(25));
            repo.ApplicationUnderTest.AO_PI_EmailUseTypeInfo.WaitForExists(5000);
            
            Report.Log(ReportLevel.Info, "Set value", "Setting attribute TagValue to '$AO_PI_EmailUseType' on item 'ApplicationUnderTest.AO_PI_EmailUseType'.", repo.ApplicationUnderTest.AO_PI_EmailUseTypeInfo, new RecordItemIndex(26));
            repo.ApplicationUnderTest.AO_PI_EmailUseType.Element.SetAttributeValue("TagValue", AO_PI_EmailUseType);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Set value", "Setting attribute TagValue to '$AO_PI_EmailSource' on item 'ApplicationUnderTest.AO_PI_EmailSource'.", repo.ApplicationUnderTest.AO_PI_EmailSourceInfo, new RecordItemIndex(27));
            repo.ApplicationUnderTest.AO_PI_EmailSource.Element.SetAttributeValue("TagValue", AO_PI_EmailSource);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Set value", "Setting attribute TagValue to '$AO_PI_EmailID' on item 'ApplicationUnderTest.AO_PI_EmailID'.", repo.ApplicationUnderTest.AO_PI_EmailIDInfo, new RecordItemIndex(28));
            repo.ApplicationUnderTest.AO_PI_EmailID.Element.SetAttributeValue("TagValue", AO_PI_EmailID);
            Delay.Milliseconds(0);
            
            Report.Screenshot(ReportLevel.Info, "User", "", repo.PegaCaseManagerPortalGoogleChrome.Screenshot_Window, false, new RecordItemIndex(29));
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
