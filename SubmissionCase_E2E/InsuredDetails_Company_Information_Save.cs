///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace SubmissionCase_E2E
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The InsuredDetails_Company_Information_Save recording.
    /// </summary>
    [TestModule("72712ae6-f262-4cd7-b276-eeb68e285131", ModuleType.Recording, 1)]
    public partial class InsuredDetails_Company_Information_Save : ITestModule
    {
        /// <summary>
        /// Holds an instance of the SubmissionCase_E2ERepository repository.
        /// </summary>
        public static SubmissionCase_E2ERepository repo = SubmissionCase_E2ERepository.Instance;

        static InsuredDetails_Company_Information_Save instance = new InsuredDetails_Company_Information_Save();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public InsuredDetails_Company_Information_Save()
        {
            ID_CI_CompName = "";
            ID_CI_PolicyNumber = "";
            ID_CI_ClaimNumber = "";
            ID_CI_ContactNumber = "";
            ID_CI_State = "";
            ID_CI_Address1 = "";
            ID_CI_Address2 = "";
            ID_CI_City = "";
            ID_CI_Zip = "";
            ID_CI_UseType = "";
            ID_CI_PhoneType = "";
            ID_CI_Source = "";
            ID_CI_PhoneNumber = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static InsuredDetails_Company_Information_Save Instance
        {
            get { return instance; }
        }

#region Variables

        string _ID_CI_CompName;

        /// <summary>
        /// Gets or sets the value of variable ID_CI_CompName.
        /// </summary>
        [TestVariable("bff58c5d-d6b6-4727-9987-a7f8066f7316")]
        public string ID_CI_CompName
        {
            get { return _ID_CI_CompName; }
            set { _ID_CI_CompName = value; }
        }

        string _ID_CI_PolicyNumber;

        /// <summary>
        /// Gets or sets the value of variable ID_CI_PolicyNumber.
        /// </summary>
        [TestVariable("75f56afb-c7b1-4bb0-ad8e-06ec1563e5fd")]
        public string ID_CI_PolicyNumber
        {
            get { return _ID_CI_PolicyNumber; }
            set { _ID_CI_PolicyNumber = value; }
        }

        string _ID_CI_ClaimNumber;

        /// <summary>
        /// Gets or sets the value of variable ID_CI_ClaimNumber.
        /// </summary>
        [TestVariable("adc89a13-0c9c-460d-ac85-d4b65bb4ba57")]
        public string ID_CI_ClaimNumber
        {
            get { return _ID_CI_ClaimNumber; }
            set { _ID_CI_ClaimNumber = value; }
        }

        string _ID_CI_ContactNumber;

        /// <summary>
        /// Gets or sets the value of variable ID_CI_ContactNumber.
        /// </summary>
        [TestVariable("341e72e2-1262-41a2-9b49-a1de0b1670cf")]
        public string ID_CI_ContactNumber
        {
            get { return _ID_CI_ContactNumber; }
            set { _ID_CI_ContactNumber = value; }
        }

        string _ID_CI_State;

        /// <summary>
        /// Gets or sets the value of variable ID_CI_State.
        /// </summary>
        [TestVariable("9faa562a-e510-4b5b-9158-ddd54bdb80f5")]
        public string ID_CI_State
        {
            get { return _ID_CI_State; }
            set { _ID_CI_State = value; }
        }

        string _ID_CI_Address1;

        /// <summary>
        /// Gets or sets the value of variable ID_CI_Address1.
        /// </summary>
        [TestVariable("c054e5cd-0141-487e-8f9c-4046b09f2cec")]
        public string ID_CI_Address1
        {
            get { return _ID_CI_Address1; }
            set { _ID_CI_Address1 = value; }
        }

        string _ID_CI_Address2;

        /// <summary>
        /// Gets or sets the value of variable ID_CI_Address2.
        /// </summary>
        [TestVariable("fa022b4b-ec08-4fab-ad84-3a42a8e4c842")]
        public string ID_CI_Address2
        {
            get { return _ID_CI_Address2; }
            set { _ID_CI_Address2 = value; }
        }

        string _ID_CI_City;

        /// <summary>
        /// Gets or sets the value of variable ID_CI_City.
        /// </summary>
        [TestVariable("ba52a36f-336a-4b30-ae15-8b6e2b09ba65")]
        public string ID_CI_City
        {
            get { return _ID_CI_City; }
            set { _ID_CI_City = value; }
        }

        string _ID_CI_Zip;

        /// <summary>
        /// Gets or sets the value of variable ID_CI_Zip.
        /// </summary>
        [TestVariable("3a1ffd03-43d1-4e94-983d-4aa4d0f72406")]
        public string ID_CI_Zip
        {
            get { return _ID_CI_Zip; }
            set { _ID_CI_Zip = value; }
        }

        string _ID_CI_UseType;

        /// <summary>
        /// Gets or sets the value of variable ID_CI_UseType.
        /// </summary>
        [TestVariable("debd616f-57e0-45da-bd36-5cef11c2e5db")]
        public string ID_CI_UseType
        {
            get { return _ID_CI_UseType; }
            set { _ID_CI_UseType = value; }
        }

        string _ID_CI_PhoneType;

        /// <summary>
        /// Gets or sets the value of variable ID_CI_PhoneType.
        /// </summary>
        [TestVariable("e87092dc-37db-4d97-af15-677fd2d0a881")]
        public string ID_CI_PhoneType
        {
            get { return _ID_CI_PhoneType; }
            set { _ID_CI_PhoneType = value; }
        }

        string _ID_CI_Source;

        /// <summary>
        /// Gets or sets the value of variable ID_CI_Source.
        /// </summary>
        [TestVariable("660d6df7-fad1-494b-966c-03a2f4d53897")]
        public string ID_CI_Source
        {
            get { return _ID_CI_Source; }
            set { _ID_CI_Source = value; }
        }

        string _ID_CI_PhoneNumber;

        /// <summary>
        /// Gets or sets the value of variable ID_CI_PhoneNumber.
        /// </summary>
        [TestVariable("04ab7530-aa65-4a61-8d65-5f832fa23daa")]
        public string ID_CI_PhoneNumber
        {
            get { return _ID_CI_PhoneNumber; }
            set { _ID_CI_PhoneNumber = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Delay", "Waiting for 5s.", new RecordItemIndex(0));
            Delay.Duration(5000, false);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.Save_Button' at 6;8.", repo.ApplicationUnderTest.Save_ButtonInfo, new RecordItemIndex(1));
            repo.ApplicationUnderTest.Save_Button.Click("6;8");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 5s.", new RecordItemIndex(2));
            Delay.Duration(5000, false);
            
            //Report.Log(ReportLevel.Info, "Wait", "Waiting 10s to exist. Associated repository item: 'ApplicationUnderTest.ID_CI_Header'", repo.ApplicationUnderTest.ID_CI_HeaderInfo, new ActionTimeout(10000), new RecordItemIndex(3));
            //repo.ApplicationUnderTest.ID_CI_HeaderInfo.WaitForExists(10000);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 5s.", new RecordItemIndex(4));
            Delay.Duration(5000, false);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$ID_CI_CompName) on item 'ApplicationUnderTest.ID_CI_Underwriting_CompName'.", repo.ApplicationUnderTest.ID_CI_Underwriting_CompNameInfo, new RecordItemIndex(5));
            Validate.AttributeEqual(repo.ApplicationUnderTest.ID_CI_Underwriting_CompNameInfo, "TagValue", ID_CI_CompName);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "User", ID_CI_CompName, new RecordItemIndex(6));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$ID_CI_PolicyNumber) on item 'ApplicationUnderTest.ID_CI_PolicyNumber'.", repo.ApplicationUnderTest.ID_CI_PolicyNumberInfo, new RecordItemIndex(7));
            Validate.AttributeEqual(repo.ApplicationUnderTest.ID_CI_PolicyNumberInfo, "TagValue", ID_CI_PolicyNumber);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "User", ID_CI_PolicyNumber, new RecordItemIndex(8));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$ID_CI_ContactNumber) on item 'ApplicationUnderTest.ID_CI_ContactNumber'.", repo.ApplicationUnderTest.ID_CI_ContactNumberInfo, new RecordItemIndex(9));
            Validate.AttributeEqual(repo.ApplicationUnderTest.ID_CI_ContactNumberInfo, "TagValue", ID_CI_ContactNumber);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "User", ID_CI_ContactNumber, new RecordItemIndex(10));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$ID_CI_State) on item 'ApplicationUnderTest.ID_CI_State'.", repo.ApplicationUnderTest.ID_CI_StateInfo, new RecordItemIndex(11));
            Validate.AttributeEqual(repo.ApplicationUnderTest.ID_CI_StateInfo, "TagValue", ID_CI_State);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "User", ID_CI_State, new RecordItemIndex(12));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$ID_CI_Address1) on item 'ApplicationUnderTest.ID_CI_Address1'.", repo.ApplicationUnderTest.ID_CI_Address1Info, new RecordItemIndex(13));
            Validate.AttributeEqual(repo.ApplicationUnderTest.ID_CI_Address1Info, "TagValue", ID_CI_Address1);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "User", ID_CI_Address1, new RecordItemIndex(14));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$ID_CI_Address2) on item 'ApplicationUnderTest.ID_CI_Address2'.", repo.ApplicationUnderTest.ID_CI_Address2Info, new RecordItemIndex(15));
            Validate.AttributeEqual(repo.ApplicationUnderTest.ID_CI_Address2Info, "TagValue", ID_CI_Address2);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "User", ID_CI_Address2, new RecordItemIndex(16));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$ID_CI_City) on item 'ApplicationUnderTest.ID_CI_City'.", repo.ApplicationUnderTest.ID_CI_CityInfo, new RecordItemIndex(17));
            Validate.AttributeEqual(repo.ApplicationUnderTest.ID_CI_CityInfo, "TagValue", ID_CI_City);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "User", ID_CI_City, new RecordItemIndex(18));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$ID_CI_Zip) on item 'ApplicationUnderTest.ID_CI_Zip'.", repo.ApplicationUnderTest.ID_CI_ZipInfo, new RecordItemIndex(19));
            Validate.AttributeEqual(repo.ApplicationUnderTest.ID_CI_ZipInfo, "TagValue", ID_CI_Zip);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "User", ID_CI_Zip, new RecordItemIndex(20));
            
            Report.Screenshot(ReportLevel.Info, "User", "", repo.PegaCaseManagerPortalGoogleChrome.Screenshot_Window, false, new RecordItemIndex(21));
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'TagValue' from item 'ApplicationUnderTest.ID_CI_UseType' and assigning its value to variable 'ID_CI_UseType'.", repo.ApplicationUnderTest.ID_CI_UseTypeInfo, new RecordItemIndex(22));
            ID_CI_UseType = repo.ApplicationUnderTest.ID_CI_UseType.Element.GetAttributeValueText("TagValue");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$ID_CI_UseType) on item 'ApplicationUnderTest.ID_CI_UseType'.", repo.ApplicationUnderTest.ID_CI_UseTypeInfo, new RecordItemIndex(23));
            Validate.AttributeEqual(repo.ApplicationUnderTest.ID_CI_UseTypeInfo, "TagValue", ID_CI_UseType);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "User", ID_CI_UseType, new RecordItemIndex(24));
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'TagValue' from item 'ApplicationUnderTest.ID_CI_PhoneType' and assigning its value to variable 'ID_CI_PhoneType'.", repo.ApplicationUnderTest.ID_CI_PhoneTypeInfo, new RecordItemIndex(25));
            ID_CI_PhoneType = repo.ApplicationUnderTest.ID_CI_PhoneType.Element.GetAttributeValueText("TagValue");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "User", ID_CI_PhoneType, new RecordItemIndex(26));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$ID_CI_PhoneType) on item 'ApplicationUnderTest.ID_CI_PhoneType'.", repo.ApplicationUnderTest.ID_CI_PhoneTypeInfo, new RecordItemIndex(27));
            Validate.AttributeEqual(repo.ApplicationUnderTest.ID_CI_PhoneTypeInfo, "TagValue", ID_CI_PhoneType);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'TagValue' from item 'ApplicationUnderTest.ID_CI_Source' and assigning its value to variable 'ID_CI_Source'.", repo.ApplicationUnderTest.ID_CI_SourceInfo, new RecordItemIndex(28));
            ID_CI_Source = repo.ApplicationUnderTest.ID_CI_Source.Element.GetAttributeValueText("TagValue");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "User", ID_CI_Source, new RecordItemIndex(29));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$ID_CI_Source) on item 'ApplicationUnderTest.ID_CI_Source'.", repo.ApplicationUnderTest.ID_CI_SourceInfo, new RecordItemIndex(30));
            Validate.AttributeEqual(repo.ApplicationUnderTest.ID_CI_SourceInfo, "TagValue", ID_CI_Source);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'TagValue' from item 'ApplicationUnderTest.ID_CI_PhoneNumber' and assigning its value to variable 'ID_CI_PhoneNumber'.", repo.ApplicationUnderTest.ID_CI_PhoneNumberInfo, new RecordItemIndex(31));
            ID_CI_PhoneNumber = repo.ApplicationUnderTest.ID_CI_PhoneNumber.Element.GetAttributeValueText("TagValue");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "User", ID_CI_PhoneNumber, new RecordItemIndex(32));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$ID_CI_PhoneNumber) on item 'ApplicationUnderTest.ID_CI_PhoneNumber'.", repo.ApplicationUnderTest.ID_CI_PhoneNumberInfo, new RecordItemIndex(33));
            Validate.AttributeEqual(repo.ApplicationUnderTest.ID_CI_PhoneNumberInfo, "TagValue", ID_CI_PhoneNumber);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'TagValue' from item 'ApplicationUnderTest.ID_CI_EmailUseType' and assigning its value to variable 'ID_CI_PhoneNumber'.", repo.ApplicationUnderTest.ID_CI_EmailUseTypeInfo, new RecordItemIndex(34));
            ID_CI_PhoneNumber = repo.ApplicationUnderTest.ID_CI_EmailUseType.Element.GetAttributeValueText("TagValue");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "User", ID_CI_PhoneNumber, new RecordItemIndex(35));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$ID_CI_PhoneNumber) on item 'ApplicationUnderTest.ID_CI_EmailUseType'.", repo.ApplicationUnderTest.ID_CI_EmailUseTypeInfo, new RecordItemIndex(36));
            Validate.AttributeEqual(repo.ApplicationUnderTest.ID_CI_EmailUseTypeInfo, "TagValue", ID_CI_PhoneNumber);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'TagValue' from item 'ApplicationUnderTest.ID_CI_EmailSource' and assigning its value to variable 'ID_CI_PhoneNumber'.", repo.ApplicationUnderTest.ID_CI_EmailSourceInfo, new RecordItemIndex(37));
            ID_CI_PhoneNumber = repo.ApplicationUnderTest.ID_CI_EmailSource.Element.GetAttributeValueText("TagValue");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "User", ID_CI_PhoneNumber, new RecordItemIndex(38));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$ID_CI_PhoneNumber) on item 'ApplicationUnderTest.ID_CI_EmailSource'.", repo.ApplicationUnderTest.ID_CI_EmailSourceInfo, new RecordItemIndex(39));
            Validate.AttributeEqual(repo.ApplicationUnderTest.ID_CI_EmailSourceInfo, "TagValue", ID_CI_PhoneNumber);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'TagValue' from item 'ApplicationUnderTest.ID_CI_EmailID' and assigning its value to variable 'ID_CI_PhoneNumber'.", repo.ApplicationUnderTest.ID_CI_EmailIDInfo, new RecordItemIndex(40));
            ID_CI_PhoneNumber = repo.ApplicationUnderTest.ID_CI_EmailID.Element.GetAttributeValueText("TagValue");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "User", ID_CI_PhoneNumber, new RecordItemIndex(41));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$ID_CI_PhoneNumber) on item 'ApplicationUnderTest.ID_CI_EmailID'.", repo.ApplicationUnderTest.ID_CI_EmailIDInfo, new RecordItemIndex(42));
            Validate.AttributeEqual(repo.ApplicationUnderTest.ID_CI_EmailIDInfo, "TagValue", ID_CI_PhoneNumber);
            Delay.Milliseconds(100);
            
            Report.Screenshot(ReportLevel.Info, "User", "", repo.PegaCaseManagerPortalGoogleChrome.Screenshot_Window, false, new RecordItemIndex(43));
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.Submit_5' at 52;15.", repo.ApplicationUnderTest.Submit_5Info, new RecordItemIndex(44));
            repo.ApplicationUnderTest.Submit_5.Click("52;15");
            Delay.Milliseconds(200);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
