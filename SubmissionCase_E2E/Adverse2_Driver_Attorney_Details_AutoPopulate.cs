///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace SubmissionCase_E2E
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Adverse2_Driver_Attorney_Details_AutoPopulate recording.
    /// </summary>
    [TestModule("5a14a422-5b2d-4179-9463-ef70ebe1b7cd", ModuleType.Recording, 1)]
    public partial class Adverse2_Driver_Attorney_Details_AutoPopulate : ITestModule
    {
        /// <summary>
        /// Holds an instance of the SubmissionCase_E2ERepository repository.
        /// </summary>
        public static SubmissionCase_E2ERepository repo = SubmissionCase_E2ERepository.Instance;

        static Adverse2_Driver_Attorney_Details_AutoPopulate instance = new Adverse2_Driver_Attorney_Details_AutoPopulate();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Adverse2_Driver_Attorney_Details_AutoPopulate()
        {
            AD2_Search_Attorney = "";
            AD2_AD_UseType = "";
            AD2_AD_PhoneType = "";
            AD2_AD_Source = "";
            AD2_AD_EmailUseType = "";
            AD2_AD_EmailSource = "";
            AD2_Attorney_RepDate = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Adverse2_Driver_Attorney_Details_AutoPopulate Instance
        {
            get { return instance; }
        }

#region Variables

        string _AD2_Search_Attorney;

        /// <summary>
        /// Gets or sets the value of variable AD2_Search_Attorney.
        /// </summary>
        [TestVariable("2baa94d9-83d8-4cdf-9900-dc6367826c34")]
        public string AD2_Search_Attorney
        {
            get { return _AD2_Search_Attorney; }
            set { _AD2_Search_Attorney = value; }
        }

        string _AD2_AD_UseType;

        /// <summary>
        /// Gets or sets the value of variable AD2_AD_UseType.
        /// </summary>
        [TestVariable("fd666ba0-6f5e-4b88-942a-0a0019a13cc8")]
        public string AD2_AD_UseType
        {
            get { return _AD2_AD_UseType; }
            set { _AD2_AD_UseType = value; }
        }

        string _AD2_AD_PhoneType;

        /// <summary>
        /// Gets or sets the value of variable AD2_AD_PhoneType.
        /// </summary>
        [TestVariable("30325017-129b-4489-87c8-776e25ebfd6e")]
        public string AD2_AD_PhoneType
        {
            get { return _AD2_AD_PhoneType; }
            set { _AD2_AD_PhoneType = value; }
        }

        string _AD2_AD_Source;

        /// <summary>
        /// Gets or sets the value of variable AD2_AD_Source.
        /// </summary>
        [TestVariable("71800a98-5b8b-4c1c-86c0-c7a6367b57db")]
        public string AD2_AD_Source
        {
            get { return _AD2_AD_Source; }
            set { _AD2_AD_Source = value; }
        }

        string _AD2_AD_EmailUseType;

        /// <summary>
        /// Gets or sets the value of variable AD2_AD_EmailUseType.
        /// </summary>
        [TestVariable("6fef83d5-45ca-4ecb-80c8-74c404d881ec")]
        public string AD2_AD_EmailUseType
        {
            get { return _AD2_AD_EmailUseType; }
            set { _AD2_AD_EmailUseType = value; }
        }

        string _AD2_AD_EmailSource;

        /// <summary>
        /// Gets or sets the value of variable AD2_AD_EmailSource.
        /// </summary>
        [TestVariable("14c2a2cd-703b-49ab-a9fb-22736a27a2e8")]
        public string AD2_AD_EmailSource
        {
            get { return _AD2_AD_EmailSource; }
            set { _AD2_AD_EmailSource = value; }
        }

        string _AD2_Attorney_RepDate;

        /// <summary>
        /// Gets or sets the value of variable AD2_Attorney_RepDate.
        /// </summary>
        [TestVariable("d67efcc6-c26b-435a-84da-29f640cfc505")]
        public string AD2_Attorney_RepDate
        {
            get { return _AD2_Attorney_RepDate; }
            set { _AD2_Attorney_RepDate = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Wait", "Waiting 10s to exist. Associated repository item: 'ApplicationUnderTest.AD2_SearchAttorney'", repo.ApplicationUnderTest.AD2_SearchAttorneyInfo, new ActionTimeout(10000), new RecordItemIndex(0));
            repo.ApplicationUnderTest.AD2_SearchAttorneyInfo.WaitForExists(10000);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.AD2_SearchAttorney' at 175;17.", repo.ApplicationUnderTest.AD2_SearchAttorneyInfo, new RecordItemIndex(1));
            repo.ApplicationUnderTest.AD2_SearchAttorney.Click("175;17");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Down}' with focus on 'ApplicationUnderTest.AD2_SearchAttorney'.", repo.ApplicationUnderTest.AD2_SearchAttorneyInfo, new RecordItemIndex(2));
            repo.ApplicationUnderTest.AD2_SearchAttorney.PressKeys("{Down}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 5s to exist. Associated repository item: 'ApplicationUnderTest.Select_Attorney'", repo.ApplicationUnderTest.Select_AttorneyInfo, new ActionTimeout(5000), new RecordItemIndex(3));
            repo.ApplicationUnderTest.Select_AttorneyInfo.WaitForExists(5000);
            
            Report.Log(ReportLevel.Info, "Set value", "Setting attribute TagValue to '$AD2_Search_Attorney' on item 'ApplicationUnderTest.AD2_SearchAttorney'.", repo.ApplicationUnderTest.AD2_SearchAttorneyInfo, new RecordItemIndex(4));
            repo.ApplicationUnderTest.AD2_SearchAttorney.Element.SetAttributeValue("TagValue", AD2_Search_Attorney);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 1s.", new RecordItemIndex(5));
            Delay.Duration(1000, false);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Return}' with focus on 'ApplicationUnderTest.AD2_SearchAttorney'.", repo.ApplicationUnderTest.AD2_SearchAttorneyInfo, new RecordItemIndex(6));
            repo.ApplicationUnderTest.AD2_SearchAttorney.PressKeys("{Return}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Tab}'.", new RecordItemIndex(7));
            Keyboard.Press("{Tab}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Set value", "Setting attribute TagValue to '$AD2_AD_UseType' on item 'ApplicationUnderTest.AD2_AD_UseType'.", repo.ApplicationUnderTest.AD2_AD_UseTypeInfo, new RecordItemIndex(8));
            repo.ApplicationUnderTest.AD2_AD_UseType.Element.SetAttributeValue("TagValue", AD2_AD_UseType);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Set value", "Setting attribute TagValue to '$AD2_AD_PhoneType' on item 'ApplicationUnderTest.AD2_AD_PhoneType'.", repo.ApplicationUnderTest.AD2_AD_PhoneTypeInfo, new RecordItemIndex(9));
            repo.ApplicationUnderTest.AD2_AD_PhoneType.Element.SetAttributeValue("TagValue", AD2_AD_PhoneType);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Set value", "Setting attribute TagValue to '$AD2_AD_Source' on item 'ApplicationUnderTest.AD2_AD_Source'.", repo.ApplicationUnderTest.AD2_AD_SourceInfo, new RecordItemIndex(10));
            repo.ApplicationUnderTest.AD2_AD_Source.Element.SetAttributeValue("TagValue", AD2_AD_Source);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Set value", "Setting attribute TagValue to '$AD2_AD_EmailUseType' on item 'ApplicationUnderTest.AD2_AD_EmailUseType'.", repo.ApplicationUnderTest.AD2_AD_EmailUseTypeInfo, new RecordItemIndex(11));
            repo.ApplicationUnderTest.AD2_AD_EmailUseType.Element.SetAttributeValue("TagValue", AD2_AD_EmailUseType);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Set value", "Setting attribute TagValue to '$AD2_AD_EmailSource' on item 'ApplicationUnderTest.AD2_AD_EmailSource'.", repo.ApplicationUnderTest.AD2_AD_EmailSourceInfo, new RecordItemIndex(12));
            repo.ApplicationUnderTest.AD2_AD_EmailSource.Element.SetAttributeValue("TagValue", AD2_AD_EmailSource);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 5s to exist. Associated repository item: 'ApplicationUnderTest.AD2_Attorney_RepDate'", repo.ApplicationUnderTest.AD2_Attorney_RepDateInfo, new ActionTimeout(5000), new RecordItemIndex(13));
            repo.ApplicationUnderTest.AD2_Attorney_RepDateInfo.WaitForExists(5000);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$AD2_Attorney_RepDate' with focus on 'ApplicationUnderTest.AD2_Attorney_RepDate'.", repo.ApplicationUnderTest.AD2_Attorney_RepDateInfo, new RecordItemIndex(14));
            repo.ApplicationUnderTest.AD2_Attorney_RepDate.PressKeys(AD2_Attorney_RepDate);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Tab' Press.", new RecordItemIndex(15));
            Keyboard.Press(System.Windows.Forms.Keys.Tab, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
