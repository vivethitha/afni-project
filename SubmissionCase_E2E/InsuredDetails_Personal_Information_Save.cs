///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace SubmissionCase_E2E
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The InsuredDetails_Personal_Information_Save recording.
    /// </summary>
    [TestModule("9f6ad45f-2361-4c18-be56-25b734d586b4", ModuleType.Recording, 1)]
    public partial class InsuredDetails_Personal_Information_Save : ITestModule
    {
        /// <summary>
        /// Holds an instance of the SubmissionCase_E2ERepository repository.
        /// </summary>
        public static SubmissionCase_E2ERepository repo = SubmissionCase_E2ERepository.Instance;

        static InsuredDetails_Personal_Information_Save instance = new InsuredDetails_Personal_Information_Save();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public InsuredDetails_Personal_Information_Save()
        {
            ID_PI_FirstName = "";
            ID_PI_LastName = "";
            ID_PI_Address1 = "";
            ID_PI_Address2 = "";
            ID_PI_City = "";
            ID_PI_State = "";
            ID_PI_Zip = "30000-6001";
            ID_PI_DOB = "";
            ID_PI_UseType = "";
            ID_PI_PhoneType = "";
            ID_PI_Source = "";
            ID_PI_PhoneNumber = "";
            ID_PI_EmailUseType = "";
            ID_PI_EmailSource = "";
            ID_PI_EmailID = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static InsuredDetails_Personal_Information_Save Instance
        {
            get { return instance; }
        }

#region Variables

        string _ID_PI_FirstName;

        /// <summary>
        /// Gets or sets the value of variable ID_PI_FirstName.
        /// </summary>
        [TestVariable("593ee0c8-46f5-44c1-8634-3d96c0bb49f7")]
        public string ID_PI_FirstName
        {
            get { return _ID_PI_FirstName; }
            set { _ID_PI_FirstName = value; }
        }

        string _ID_PI_LastName;

        /// <summary>
        /// Gets or sets the value of variable ID_PI_LastName.
        /// </summary>
        [TestVariable("80641088-2da3-49ee-af78-443f9de459b5")]
        public string ID_PI_LastName
        {
            get { return _ID_PI_LastName; }
            set { _ID_PI_LastName = value; }
        }

        string _ID_PI_Address1;

        /// <summary>
        /// Gets or sets the value of variable ID_PI_Address1.
        /// </summary>
        [TestVariable("043a74e9-3517-4d1b-bc6f-8ca753af6f20")]
        public string ID_PI_Address1
        {
            get { return _ID_PI_Address1; }
            set { _ID_PI_Address1 = value; }
        }

        string _ID_PI_Address2;

        /// <summary>
        /// Gets or sets the value of variable ID_PI_Address2.
        /// </summary>
        [TestVariable("98c47dad-4ff8-41f1-890b-6a5500df956c")]
        public string ID_PI_Address2
        {
            get { return _ID_PI_Address2; }
            set { _ID_PI_Address2 = value; }
        }

        string _ID_PI_City;

        /// <summary>
        /// Gets or sets the value of variable ID_PI_City.
        /// </summary>
        [TestVariable("bd7e57b0-2389-4ba4-97cd-3749343a313a")]
        public string ID_PI_City
        {
            get { return _ID_PI_City; }
            set { _ID_PI_City = value; }
        }

        string _ID_PI_State;

        /// <summary>
        /// Gets or sets the value of variable ID_PI_State.
        /// </summary>
        [TestVariable("3fa748a7-086f-4e92-977f-ab29498599ee")]
        public string ID_PI_State
        {
            get { return _ID_PI_State; }
            set { _ID_PI_State = value; }
        }

        string _ID_PI_Zip;

        /// <summary>
        /// Gets or sets the value of variable ID_PI_Zip.
        /// </summary>
        [TestVariable("b31a30a0-7f60-4e12-b6ae-af1d4df4d8ac")]
        public string ID_PI_Zip
        {
            get { return _ID_PI_Zip; }
            set { _ID_PI_Zip = value; }
        }

        string _ID_PI_DOB;

        /// <summary>
        /// Gets or sets the value of variable ID_PI_DOB.
        /// </summary>
        [TestVariable("98355d64-486b-4c95-97e2-7fdb5e856dbd")]
        public string ID_PI_DOB
        {
            get { return _ID_PI_DOB; }
            set { _ID_PI_DOB = value; }
        }

        string _ID_PI_UseType;

        /// <summary>
        /// Gets or sets the value of variable ID_PI_UseType.
        /// </summary>
        [TestVariable("4d58f93b-2b0e-4ea4-a049-2c60c11e5054")]
        public string ID_PI_UseType
        {
            get { return _ID_PI_UseType; }
            set { _ID_PI_UseType = value; }
        }

        string _ID_PI_PhoneType;

        /// <summary>
        /// Gets or sets the value of variable ID_PI_PhoneType.
        /// </summary>
        [TestVariable("5db14dc6-b20e-412a-be44-3f8aed16fe1d")]
        public string ID_PI_PhoneType
        {
            get { return _ID_PI_PhoneType; }
            set { _ID_PI_PhoneType = value; }
        }

        string _ID_PI_Source;

        /// <summary>
        /// Gets or sets the value of variable ID_PI_Source.
        /// </summary>
        [TestVariable("a2666bf6-5ea9-4741-ace5-d97535916627")]
        public string ID_PI_Source
        {
            get { return _ID_PI_Source; }
            set { _ID_PI_Source = value; }
        }

        string _ID_PI_PhoneNumber;

        /// <summary>
        /// Gets or sets the value of variable ID_PI_PhoneNumber.
        /// </summary>
        [TestVariable("aadef7ef-67c8-4126-904a-1c1c3b1d4a1f")]
        public string ID_PI_PhoneNumber
        {
            get { return _ID_PI_PhoneNumber; }
            set { _ID_PI_PhoneNumber = value; }
        }

        string _ID_PI_EmailUseType;

        /// <summary>
        /// Gets or sets the value of variable ID_PI_EmailUseType.
        /// </summary>
        [TestVariable("34682a3c-de15-49e6-980d-d19a85caa8e2")]
        public string ID_PI_EmailUseType
        {
            get { return _ID_PI_EmailUseType; }
            set { _ID_PI_EmailUseType = value; }
        }

        string _ID_PI_EmailSource;

        /// <summary>
        /// Gets or sets the value of variable ID_PI_EmailSource.
        /// </summary>
        [TestVariable("7509ae38-646d-44e2-9a81-ec9bd6ce0475")]
        public string ID_PI_EmailSource
        {
            get { return _ID_PI_EmailSource; }
            set { _ID_PI_EmailSource = value; }
        }

        string _ID_PI_EmailID;

        /// <summary>
        /// Gets or sets the value of variable ID_PI_EmailID.
        /// </summary>
        [TestVariable("393a29f5-787b-4cc8-8114-278158332778")]
        public string ID_PI_EmailID
        {
            get { return _ID_PI_EmailID; }
            set { _ID_PI_EmailID = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.Save_Button' at 6;8.", repo.ApplicationUnderTest.Save_ButtonInfo, new RecordItemIndex(0));
            repo.ApplicationUnderTest.Save_Button.Click("6;8");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 5s.", new RecordItemIndex(1));
            Delay.Duration(5000, false);
            
            //Report.Log(ReportLevel.Info, "Wait", "Waiting 10s to exist. Associated repository item: 'ApplicationUnderTest.AgentDetails_Header'", repo.ApplicationUnderTest.AgentDetails_HeaderInfo, new ActionTimeout(10000), new RecordItemIndex(2));
            //repo.ApplicationUnderTest.AgentDetails_HeaderInfo.WaitForExists(10000);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$ID_PI_FirstName) on item 'ApplicationUnderTest.ID_PI_FirstName'.", repo.ApplicationUnderTest.ID_PI_FirstNameInfo, new RecordItemIndex(3));
            Validate.AttributeEqual(repo.ApplicationUnderTest.ID_PI_FirstNameInfo, "TagValue", ID_PI_FirstName);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "User", ID_PI_FirstName, new RecordItemIndex(4));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$ID_PI_LastName) on item 'ApplicationUnderTest.ID_PI_LastName'.", repo.ApplicationUnderTest.ID_PI_LastNameInfo, new RecordItemIndex(5));
            Validate.AttributeEqual(repo.ApplicationUnderTest.ID_PI_LastNameInfo, "TagValue", ID_PI_LastName);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "User", ID_PI_LastName, new RecordItemIndex(6));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$ID_PI_Address1) on item 'ApplicationUnderTest.ID_PI_Address1'.", repo.ApplicationUnderTest.ID_PI_Address1Info, new RecordItemIndex(7));
            Validate.AttributeEqual(repo.ApplicationUnderTest.ID_PI_Address1Info, "TagValue", ID_PI_Address1);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "User", ID_PI_Address1, new RecordItemIndex(8));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$ID_PI_Address2) on item 'ApplicationUnderTest.ID_PI_Address2'.", repo.ApplicationUnderTest.ID_PI_Address2Info, new RecordItemIndex(9));
            Validate.AttributeEqual(repo.ApplicationUnderTest.ID_PI_Address2Info, "TagValue", ID_PI_Address2);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "User", ID_PI_Address2, new RecordItemIndex(10));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$ID_PI_City) on item 'ApplicationUnderTest.ID_PI_City'.", repo.ApplicationUnderTest.ID_PI_CityInfo, new RecordItemIndex(11));
            Validate.AttributeEqual(repo.ApplicationUnderTest.ID_PI_CityInfo, "TagValue", ID_PI_City);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "User", ID_PI_City, new RecordItemIndex(12));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$ID_PI_State) on item 'ApplicationUnderTest.ID_PI_State'.", repo.ApplicationUnderTest.ID_PI_StateInfo, new RecordItemIndex(13));
            Validate.AttributeEqual(repo.ApplicationUnderTest.ID_PI_StateInfo, "TagValue", ID_PI_State);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "User", ID_PI_State, new RecordItemIndex(14));
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'TagValue' from item 'ApplicationUnderTest.ID_PI_Zip' and assigning its value to variable 'ID_PI_Zip'.", repo.ApplicationUnderTest.ID_PI_ZipInfo, new RecordItemIndex(15));
            ID_PI_Zip = repo.ApplicationUnderTest.ID_PI_Zip.Element.GetAttributeValueText("TagValue");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$ID_PI_Zip) on item 'ApplicationUnderTest.ID_PI_Zip'.", repo.ApplicationUnderTest.ID_PI_ZipInfo, new RecordItemIndex(16));
            Validate.AttributeEqual(repo.ApplicationUnderTest.ID_PI_ZipInfo, "TagValue", ID_PI_Zip);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "User", ID_PI_Zip, new RecordItemIndex(17));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$ID_PI_DOB) on item 'ApplicationUnderTest.ID_PI_DOB'.", repo.ApplicationUnderTest.ID_PI_DOBInfo, new RecordItemIndex(18));
            Validate.AttributeEqual(repo.ApplicationUnderTest.ID_PI_DOBInfo, "TagValue", ID_PI_DOB);
            Delay.Milliseconds(100);
            
            Report.Screenshot(ReportLevel.Info, "User", ID_PI_DOB, repo.PegaCaseManagerPortalGoogleChrome.Screenshot_Window, false, new RecordItemIndex(19));
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'TagValue' from item 'ApplicationUnderTest.ID_PI_UseType' and assigning its value to variable 'ID_PI_UseType'.", repo.ApplicationUnderTest.ID_PI_UseTypeInfo, new RecordItemIndex(20));
            ID_PI_UseType = repo.ApplicationUnderTest.ID_PI_UseType.Element.GetAttributeValueText("TagValue");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$ID_PI_UseType) on item 'ApplicationUnderTest.ID_PI_UseType'.", repo.ApplicationUnderTest.ID_PI_UseTypeInfo, new RecordItemIndex(21));
            Validate.AttributeEqual(repo.ApplicationUnderTest.ID_PI_UseTypeInfo, "TagValue", ID_PI_UseType);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "User", ID_PI_UseType, new RecordItemIndex(22));
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'TagValue' from item 'ApplicationUnderTest.ID_PI_PhoneType' and assigning its value to variable 'ID_PI_PhoneType'.", repo.ApplicationUnderTest.ID_PI_PhoneTypeInfo, new RecordItemIndex(23));
            ID_PI_PhoneType = repo.ApplicationUnderTest.ID_PI_PhoneType.Element.GetAttributeValueText("TagValue");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$ID_PI_PhoneType) on item 'ApplicationUnderTest.ID_PI_PhoneType'.", repo.ApplicationUnderTest.ID_PI_PhoneTypeInfo, new RecordItemIndex(24));
            Validate.AttributeEqual(repo.ApplicationUnderTest.ID_PI_PhoneTypeInfo, "TagValue", ID_PI_PhoneType);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "User", ID_PI_PhoneType, new RecordItemIndex(25));
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'TagValue' from item 'ApplicationUnderTest.ID_PI_Source' and assigning its value to variable 'ID_PI_Source'.", repo.ApplicationUnderTest.ID_PI_SourceInfo, new RecordItemIndex(26));
            ID_PI_Source = repo.ApplicationUnderTest.ID_PI_Source.Element.GetAttributeValueText("TagValue");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$ID_PI_Source) on item 'ApplicationUnderTest.ID_PI_Source'.", repo.ApplicationUnderTest.ID_PI_SourceInfo, new RecordItemIndex(27));
            Validate.AttributeEqual(repo.ApplicationUnderTest.ID_PI_SourceInfo, "TagValue", ID_PI_Source);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "User", ID_PI_Source, new RecordItemIndex(28));
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'TagValue' from item 'ApplicationUnderTest.ID_PI_PhoneNumber' and assigning its value to variable 'ID_PI_PhoneNumber'.", repo.ApplicationUnderTest.ID_PI_PhoneNumberInfo, new RecordItemIndex(29));
            ID_PI_PhoneNumber = repo.ApplicationUnderTest.ID_PI_PhoneNumber.Element.GetAttributeValueText("TagValue");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$ID_PI_PhoneNumber) on item 'ApplicationUnderTest.ID_PI_PhoneNumber'.", repo.ApplicationUnderTest.ID_PI_PhoneNumberInfo, new RecordItemIndex(30));
            Validate.AttributeEqual(repo.ApplicationUnderTest.ID_PI_PhoneNumberInfo, "TagValue", ID_PI_PhoneNumber);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "User", ID_PI_PhoneNumber, new RecordItemIndex(31));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$ID_PI_EmailUseType) on item 'ApplicationUnderTest.ID_PI_EmailUseType'.", repo.ApplicationUnderTest.ID_PI_EmailUseTypeInfo, new RecordItemIndex(32));
            Validate.AttributeEqual(repo.ApplicationUnderTest.ID_PI_EmailUseTypeInfo, "TagValue", ID_PI_EmailUseType);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "User", ID_PI_EmailUseType, new RecordItemIndex(33));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$ID_PI_EmailSource) on item 'ApplicationUnderTest.ID_PI_EmailSource'.", repo.ApplicationUnderTest.ID_PI_EmailSourceInfo, new RecordItemIndex(34));
            Validate.AttributeEqual(repo.ApplicationUnderTest.ID_PI_EmailSourceInfo, "TagValue", ID_PI_EmailSource);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "User", ID_PI_EmailSource, new RecordItemIndex(35));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$ID_PI_EmailID) on item 'ApplicationUnderTest.ID_PI_EmailID'.", repo.ApplicationUnderTest.ID_PI_EmailIDInfo, new RecordItemIndex(36));
            Validate.AttributeEqual(repo.ApplicationUnderTest.ID_PI_EmailIDInfo, "TagValue", ID_PI_EmailID);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "User", ID_PI_EmailID, new RecordItemIndex(37));
            
            Report.Screenshot(ReportLevel.Info, "User", "", repo.PegaCaseManagerPortalGoogleChrome.Screenshot_Window, false, new RecordItemIndex(38));
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.Submit_5' at 47;10.", repo.ApplicationUnderTest.Submit_5Info, new RecordItemIndex(39));
            repo.ApplicationUnderTest.Submit_5.Click("47;10");
            Delay.Milliseconds(200);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
