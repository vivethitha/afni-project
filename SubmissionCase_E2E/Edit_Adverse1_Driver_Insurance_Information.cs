///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace SubmissionCase_E2E
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Edit_Adverse1_Driver_Insurance_Information recording.
    /// </summary>
    [TestModule("3d52f048-697b-459b-aca6-eb88e78a1827", ModuleType.Recording, 1)]
    public partial class Edit_Adverse1_Driver_Insurance_Information : ITestModule
    {
        /// <summary>
        /// Holds an instance of the SubmissionCase_E2ERepository repository.
        /// </summary>
        public static SubmissionCase_E2ERepository repo = SubmissionCase_E2ERepository.Instance;

        static Edit_Adverse1_Driver_Insurance_Information instance = new Edit_Adverse1_Driver_Insurance_Information();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Edit_Adverse1_Driver_Insurance_Information()
        {
            AD1_LI_CompanyName = "";
            AD1_LI_PolicyNumber = "";
            AD1_LI_ClaimNumber = "";
            AD1_LI_ContactName = "";
            AD1_LI_USStateCode = "";
            AD1_LI_Address1 = "";
            AD1_LI_Address2 = "";
            AD1_LI_City = "";
            AD1_LI_ZipCode = "";
            AD1_LI_PhoneUseType_getValue = "";
            AD1_LI_PhoneType_getValue = "";
            AD1_LI_PhoneSource_getValue = "";
            AD1_LI_PhoneNumber_getValue = "";
            AD1_LI_EmailUseType_getValue = "";
            AD1_LI_EmailSource_getValue = "";
            AD1_LI_Email_getValue = "";
            Edit_AD1_LI_ClaimNumber = "Edit_AD1_LI_ClaimNumber";
            Edit_AD1_LI_ContactName = "Edit_AD1_LI_ContactName";
            Edit_AD1_LI_USStateCode = "Edit_AD1_LI_USStateCode";
            Edit_AD1_LI_Address1 = "Edit_AD1_LI_Address1";
            Edit_AD1_LI_Address2 = "Edit_AD1_LI_Address2";
            Edit_AD1_LI_City = "Edit_AD1_LI_City";
            Edit_AD1_LI_ZipCode = "Edit_AD1_LI_ZipCode";
            Edit_AD1_LI_PhoneUseType_getValue = "Edit_AD1_LI_PhoneUseType_getValue";
            Edit_AD1_LI_PhoneType_getValue = "Edit_AD1_LI_PhoneType_getValue";
            Edit_AD1_LI_PhoneSource_getValue = "Edit_AD1_LI_PhoneSource_getValue";
            Edit_AD1_LI_PhoneNumber_getValue = "Edit_AD1_LI_PhoneNumber_getValue";
            Edit_AD1_LI_EmailUseType_getValue = "Edit_AD1_LI_EmailUseType_getValue";
            Edit_AD1_LI_EmailSource_getValue = "Edit_AD1_LI_EmailSource_getValue";
            Edit_AD1_LI_Email_getValue = "Edit_AD1_LI_Email_getValue";
            Edit_AD1_LI_CompanyName = "Edit_AD1_LI_CompanyName";
            Edit_AD1_LI_PolicyNumber = "Edit_AD1_LI_PolicyNumber";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Edit_Adverse1_Driver_Insurance_Information Instance
        {
            get { return instance; }
        }

#region Variables

        string _AD1_LI_CompanyName;

        /// <summary>
        /// Gets or sets the value of variable AD1_LI_CompanyName.
        /// </summary>
        [TestVariable("5c22e8f8-b897-4d6a-a9f7-d60550f457a8")]
        public string AD1_LI_CompanyName
        {
            get { return _AD1_LI_CompanyName; }
            set { _AD1_LI_CompanyName = value; }
        }

        string _AD1_LI_PolicyNumber;

        /// <summary>
        /// Gets or sets the value of variable AD1_LI_PolicyNumber.
        /// </summary>
        [TestVariable("e0528e5a-312e-4918-9118-8e3401dc48a6")]
        public string AD1_LI_PolicyNumber
        {
            get { return _AD1_LI_PolicyNumber; }
            set { _AD1_LI_PolicyNumber = value; }
        }

        string _AD1_LI_ClaimNumber;

        /// <summary>
        /// Gets or sets the value of variable AD1_LI_ClaimNumber.
        /// </summary>
        [TestVariable("a3ac4808-3f06-4dbe-91a1-9b0f2ec33695")]
        public string AD1_LI_ClaimNumber
        {
            get { return _AD1_LI_ClaimNumber; }
            set { _AD1_LI_ClaimNumber = value; }
        }

        string _AD1_LI_ContactName;

        /// <summary>
        /// Gets or sets the value of variable AD1_LI_ContactName.
        /// </summary>
        [TestVariable("058d579d-43d9-41be-aebe-9027e324fee2")]
        public string AD1_LI_ContactName
        {
            get { return _AD1_LI_ContactName; }
            set { _AD1_LI_ContactName = value; }
        }

        string _AD1_LI_USStateCode;

        /// <summary>
        /// Gets or sets the value of variable AD1_LI_USStateCode.
        /// </summary>
        [TestVariable("2fabf3df-688c-4971-afe6-c42b70359401")]
        public string AD1_LI_USStateCode
        {
            get { return _AD1_LI_USStateCode; }
            set { _AD1_LI_USStateCode = value; }
        }

        string _AD1_LI_Address1;

        /// <summary>
        /// Gets or sets the value of variable AD1_LI_Address1.
        /// </summary>
        [TestVariable("de5a9585-c5bb-4aa8-aa7c-f0cbb09fd3e2")]
        public string AD1_LI_Address1
        {
            get { return _AD1_LI_Address1; }
            set { _AD1_LI_Address1 = value; }
        }

        string _AD1_LI_Address2;

        /// <summary>
        /// Gets or sets the value of variable AD1_LI_Address2.
        /// </summary>
        [TestVariable("84ad7de5-f243-4f8e-9af1-0f8c583739e4")]
        public string AD1_LI_Address2
        {
            get { return _AD1_LI_Address2; }
            set { _AD1_LI_Address2 = value; }
        }

        string _AD1_LI_City;

        /// <summary>
        /// Gets or sets the value of variable AD1_LI_City.
        /// </summary>
        [TestVariable("94234bac-fd72-404d-a26d-155aac5d4f30")]
        public string AD1_LI_City
        {
            get { return _AD1_LI_City; }
            set { _AD1_LI_City = value; }
        }

        string _AD1_LI_ZipCode;

        /// <summary>
        /// Gets or sets the value of variable AD1_LI_ZipCode.
        /// </summary>
        [TestVariable("0f2355b5-3174-44b1-b333-c5688db91b13")]
        public string AD1_LI_ZipCode
        {
            get { return _AD1_LI_ZipCode; }
            set { _AD1_LI_ZipCode = value; }
        }

        string _AD1_LI_PhoneUseType_getValue;

        /// <summary>
        /// Gets or sets the value of variable AD1_LI_PhoneUseType_getValue.
        /// </summary>
        [TestVariable("4756e5d9-46d7-4cda-bdc9-4ac33f8502d5")]
        public string AD1_LI_PhoneUseType_getValue
        {
            get { return _AD1_LI_PhoneUseType_getValue; }
            set { _AD1_LI_PhoneUseType_getValue = value; }
        }

        string _AD1_LI_PhoneType_getValue;

        /// <summary>
        /// Gets or sets the value of variable AD1_LI_PhoneType_getValue.
        /// </summary>
        [TestVariable("ccbb6339-4ace-4823-b8af-806c1ee5dea7")]
        public string AD1_LI_PhoneType_getValue
        {
            get { return _AD1_LI_PhoneType_getValue; }
            set { _AD1_LI_PhoneType_getValue = value; }
        }

        string _AD1_LI_PhoneSource_getValue;

        /// <summary>
        /// Gets or sets the value of variable AD1_LI_PhoneSource_getValue.
        /// </summary>
        [TestVariable("8f53d22f-d26c-4963-9da5-3f54c5650ef7")]
        public string AD1_LI_PhoneSource_getValue
        {
            get { return _AD1_LI_PhoneSource_getValue; }
            set { _AD1_LI_PhoneSource_getValue = value; }
        }

        string _AD1_LI_PhoneNumber_getValue;

        /// <summary>
        /// Gets or sets the value of variable AD1_LI_PhoneNumber_getValue.
        /// </summary>
        [TestVariable("8e3f6ac4-d75f-4521-9329-da8adf20451d")]
        public string AD1_LI_PhoneNumber_getValue
        {
            get { return _AD1_LI_PhoneNumber_getValue; }
            set { _AD1_LI_PhoneNumber_getValue = value; }
        }

        string _AD1_LI_EmailUseType_getValue;

        /// <summary>
        /// Gets or sets the value of variable AD1_LI_EmailUseType_getValue.
        /// </summary>
        [TestVariable("6c591f2c-5536-481d-94b3-584490765bb3")]
        public string AD1_LI_EmailUseType_getValue
        {
            get { return _AD1_LI_EmailUseType_getValue; }
            set { _AD1_LI_EmailUseType_getValue = value; }
        }

        string _AD1_LI_EmailSource_getValue;

        /// <summary>
        /// Gets or sets the value of variable AD1_LI_EmailSource_getValue.
        /// </summary>
        [TestVariable("22ea80a2-1922-4f30-98fb-44c8761d8b2b")]
        public string AD1_LI_EmailSource_getValue
        {
            get { return _AD1_LI_EmailSource_getValue; }
            set { _AD1_LI_EmailSource_getValue = value; }
        }

        string _AD1_LI_Email_getValue;

        /// <summary>
        /// Gets or sets the value of variable AD1_LI_Email_getValue.
        /// </summary>
        [TestVariable("dc9be23c-4fae-4ddf-8aec-350692d3a6a8")]
        public string AD1_LI_Email_getValue
        {
            get { return _AD1_LI_Email_getValue; }
            set { _AD1_LI_Email_getValue = value; }
        }

        string _Edit_AD1_LI_ClaimNumber;

        /// <summary>
        /// Gets or sets the value of variable Edit_AD1_LI_ClaimNumber.
        /// </summary>
        [TestVariable("d6d7cd44-fff5-46c6-80f7-3afc7ab43945")]
        public string Edit_AD1_LI_ClaimNumber
        {
            get { return _Edit_AD1_LI_ClaimNumber; }
            set { _Edit_AD1_LI_ClaimNumber = value; }
        }

        string _Edit_AD1_LI_ContactName;

        /// <summary>
        /// Gets or sets the value of variable Edit_AD1_LI_ContactName.
        /// </summary>
        [TestVariable("278a3d71-3566-4ece-acb4-8c280eb9eeaa")]
        public string Edit_AD1_LI_ContactName
        {
            get { return _Edit_AD1_LI_ContactName; }
            set { _Edit_AD1_LI_ContactName = value; }
        }

        string _Edit_AD1_LI_USStateCode;

        /// <summary>
        /// Gets or sets the value of variable Edit_AD1_LI_USStateCode.
        /// </summary>
        [TestVariable("b0308140-1f18-496e-a154-2d47a5088c70")]
        public string Edit_AD1_LI_USStateCode
        {
            get { return _Edit_AD1_LI_USStateCode; }
            set { _Edit_AD1_LI_USStateCode = value; }
        }

        string _Edit_AD1_LI_Address1;

        /// <summary>
        /// Gets or sets the value of variable Edit_AD1_LI_Address1.
        /// </summary>
        [TestVariable("d2c1435c-f152-4078-ba51-8ba94a0cd4b8")]
        public string Edit_AD1_LI_Address1
        {
            get { return _Edit_AD1_LI_Address1; }
            set { _Edit_AD1_LI_Address1 = value; }
        }

        string _Edit_AD1_LI_Address2;

        /// <summary>
        /// Gets or sets the value of variable Edit_AD1_LI_Address2.
        /// </summary>
        [TestVariable("8d685813-e3d0-43be-948f-00e2a930b810")]
        public string Edit_AD1_LI_Address2
        {
            get { return _Edit_AD1_LI_Address2; }
            set { _Edit_AD1_LI_Address2 = value; }
        }

        string _Edit_AD1_LI_City;

        /// <summary>
        /// Gets or sets the value of variable Edit_AD1_LI_City.
        /// </summary>
        [TestVariable("da00facf-ea9a-48c2-bf58-33edab0e834c")]
        public string Edit_AD1_LI_City
        {
            get { return _Edit_AD1_LI_City; }
            set { _Edit_AD1_LI_City = value; }
        }

        string _Edit_AD1_LI_ZipCode;

        /// <summary>
        /// Gets or sets the value of variable Edit_AD1_LI_ZipCode.
        /// </summary>
        [TestVariable("3e058c5a-7029-4dbc-a12c-aee1c0c6ea3a")]
        public string Edit_AD1_LI_ZipCode
        {
            get { return _Edit_AD1_LI_ZipCode; }
            set { _Edit_AD1_LI_ZipCode = value; }
        }

        string _Edit_AD1_LI_PhoneUseType_getValue;

        /// <summary>
        /// Gets or sets the value of variable Edit_AD1_LI_PhoneUseType_getValue.
        /// </summary>
        [TestVariable("5eabca49-5155-4679-8d23-9b9db7c3d30a")]
        public string Edit_AD1_LI_PhoneUseType_getValue
        {
            get { return _Edit_AD1_LI_PhoneUseType_getValue; }
            set { _Edit_AD1_LI_PhoneUseType_getValue = value; }
        }

        string _Edit_AD1_LI_PhoneType_getValue;

        /// <summary>
        /// Gets or sets the value of variable Edit_AD1_LI_PhoneType_getValue.
        /// </summary>
        [TestVariable("f2b4897a-0e66-4e14-88d3-5865769b0b19")]
        public string Edit_AD1_LI_PhoneType_getValue
        {
            get { return _Edit_AD1_LI_PhoneType_getValue; }
            set { _Edit_AD1_LI_PhoneType_getValue = value; }
        }

        string _Edit_AD1_LI_PhoneSource_getValue;

        /// <summary>
        /// Gets or sets the value of variable Edit_AD1_LI_PhoneSource_getValue.
        /// </summary>
        [TestVariable("a6ab299f-1594-4d7a-8743-5c079027c315")]
        public string Edit_AD1_LI_PhoneSource_getValue
        {
            get { return _Edit_AD1_LI_PhoneSource_getValue; }
            set { _Edit_AD1_LI_PhoneSource_getValue = value; }
        }

        string _Edit_AD1_LI_PhoneNumber_getValue;

        /// <summary>
        /// Gets or sets the value of variable Edit_AD1_LI_PhoneNumber_getValue.
        /// </summary>
        [TestVariable("a779494b-7515-47fe-b7ed-2010825afa05")]
        public string Edit_AD1_LI_PhoneNumber_getValue
        {
            get { return _Edit_AD1_LI_PhoneNumber_getValue; }
            set { _Edit_AD1_LI_PhoneNumber_getValue = value; }
        }

        string _Edit_AD1_LI_EmailUseType_getValue;

        /// <summary>
        /// Gets or sets the value of variable Edit_AD1_LI_EmailUseType_getValue.
        /// </summary>
        [TestVariable("ab9c5905-4e5c-42b1-8fb7-d0b19695b7c0")]
        public string Edit_AD1_LI_EmailUseType_getValue
        {
            get { return _Edit_AD1_LI_EmailUseType_getValue; }
            set { _Edit_AD1_LI_EmailUseType_getValue = value; }
        }

        string _Edit_AD1_LI_EmailSource_getValue;

        /// <summary>
        /// Gets or sets the value of variable Edit_AD1_LI_EmailSource_getValue.
        /// </summary>
        [TestVariable("903d1625-b8a0-4371-a77e-04729cc1d26a")]
        public string Edit_AD1_LI_EmailSource_getValue
        {
            get { return _Edit_AD1_LI_EmailSource_getValue; }
            set { _Edit_AD1_LI_EmailSource_getValue = value; }
        }

        string _Edit_AD1_LI_Email_getValue;

        /// <summary>
        /// Gets or sets the value of variable Edit_AD1_LI_Email_getValue.
        /// </summary>
        [TestVariable("dcde2288-ca7b-4076-b841-064bee11aecf")]
        public string Edit_AD1_LI_Email_getValue
        {
            get { return _Edit_AD1_LI_Email_getValue; }
            set { _Edit_AD1_LI_Email_getValue = value; }
        }

        string _Edit_AD1_LI_CompanyName;

        /// <summary>
        /// Gets or sets the value of variable Edit_AD1_LI_CompanyName.
        /// </summary>
        [TestVariable("b84fcb54-7abd-4557-a0da-d7e6611003a3")]
        public string Edit_AD1_LI_CompanyName
        {
            get { return _Edit_AD1_LI_CompanyName; }
            set { _Edit_AD1_LI_CompanyName = value; }
        }

        string _Edit_AD1_LI_PolicyNumber;

        /// <summary>
        /// Gets or sets the value of variable Edit_AD1_LI_PolicyNumber.
        /// </summary>
        [TestVariable("84115ec2-4b5b-4b12-b1b0-5a40bc6202b5")]
        public string Edit_AD1_LI_PolicyNumber
        {
            get { return _Edit_AD1_LI_PolicyNumber; }
            set { _Edit_AD1_LI_PolicyNumber = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.InsuranceInformation' at 80;21.", repo.ApplicationUnderTest.InsuranceInformationInfo, new RecordItemIndex(0));
            repo.ApplicationUnderTest.InsuranceInformation.Click("80;21");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$AD1_LI_CompanyName) on item 'ApplicationUnderTest.AD1_LI_CompanyName'.", repo.ApplicationUnderTest.AD1_LI_CompanyNameInfo, new RecordItemIndex(1));
            Validate.AttributeEqual(repo.ApplicationUnderTest.AD1_LI_CompanyNameInfo, "TagValue", AD1_LI_CompanyName);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "User", AD1_LI_CompanyName, new RecordItemIndex(2));
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Ctrl+A' Press.", new RecordItemIndex(3));
            Keyboard.Press(System.Windows.Forms.Keys.A | System.Windows.Forms.Keys.Control, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Delete' Press.", new RecordItemIndex(4));
            Keyboard.Press(System.Windows.Forms.Keys.Delete, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Edit_AD1_LI_CompanyName' with focus on 'ApplicationUnderTest.AD1_LI_CompanyName'.", repo.ApplicationUnderTest.AD1_LI_CompanyNameInfo, new RecordItemIndex(5));
            repo.ApplicationUnderTest.AD1_LI_CompanyName.PressKeys(Edit_AD1_LI_CompanyName);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "User", Edit_AD1_LI_CompanyName, new RecordItemIndex(6));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$AD1_LI_PolicyNumber) on item 'ApplicationUnderTest.AD1_LI_PolicyNumber'.", repo.ApplicationUnderTest.AD1_LI_PolicyNumberInfo, new RecordItemIndex(7));
            Validate.AttributeEqual(repo.ApplicationUnderTest.AD1_LI_PolicyNumberInfo, "TagValue", AD1_LI_PolicyNumber);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "User", AD1_LI_PolicyNumber, new RecordItemIndex(8));
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Ctrl+A' Press.", new RecordItemIndex(9));
            Keyboard.Press(System.Windows.Forms.Keys.A | System.Windows.Forms.Keys.Control, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Delete' Press.", new RecordItemIndex(10));
            Keyboard.Press(System.Windows.Forms.Keys.Delete, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Edit_AD1_LI_PolicyNumber' with focus on 'ApplicationUnderTest.AD1_LI_PolicyNumber'.", repo.ApplicationUnderTest.AD1_LI_PolicyNumberInfo, new RecordItemIndex(11));
            repo.ApplicationUnderTest.AD1_LI_PolicyNumber.PressKeys(Edit_AD1_LI_PolicyNumber);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "User", Edit_AD1_LI_PolicyNumber, new RecordItemIndex(12));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$AD1_LI_ClaimNumber) on item 'ApplicationUnderTest.AD1_LI_ClaimNumber'.", repo.ApplicationUnderTest.AD1_LI_ClaimNumberInfo, new RecordItemIndex(13));
            Validate.AttributeEqual(repo.ApplicationUnderTest.AD1_LI_ClaimNumberInfo, "TagValue", AD1_LI_ClaimNumber);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "User", AD1_LI_ClaimNumber, new RecordItemIndex(14));
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Ctrl+A' Press.", new RecordItemIndex(15));
            Keyboard.Press(System.Windows.Forms.Keys.A | System.Windows.Forms.Keys.Control, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Delete' Press.", new RecordItemIndex(16));
            Keyboard.Press(System.Windows.Forms.Keys.Delete, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Edit_AD1_LI_ClaimNumber' with focus on 'ApplicationUnderTest.AD1_LI_ClaimNumber'.", repo.ApplicationUnderTest.AD1_LI_ClaimNumberInfo, new RecordItemIndex(17));
            repo.ApplicationUnderTest.AD1_LI_ClaimNumber.PressKeys(Edit_AD1_LI_ClaimNumber);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "User", Edit_AD1_LI_ClaimNumber, new RecordItemIndex(18));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$AD1_LI_ContactName) on item 'ApplicationUnderTest.AD1_LI_ContactName'.", repo.ApplicationUnderTest.AD1_LI_ContactNameInfo, new RecordItemIndex(19));
            Validate.AttributeEqual(repo.ApplicationUnderTest.AD1_LI_ContactNameInfo, "TagValue", AD1_LI_ContactName);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "User", AD1_LI_ContactName, new RecordItemIndex(20));
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Ctrl+A' Press.", new RecordItemIndex(21));
            Keyboard.Press(System.Windows.Forms.Keys.A | System.Windows.Forms.Keys.Control, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Delete' Press.", new RecordItemIndex(22));
            Keyboard.Press(System.Windows.Forms.Keys.Delete, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Edit_AD1_LI_ContactName' with focus on 'ApplicationUnderTest.AD1_LI_ContactName'.", repo.ApplicationUnderTest.AD1_LI_ContactNameInfo, new RecordItemIndex(23));
            repo.ApplicationUnderTest.AD1_LI_ContactName.PressKeys(Edit_AD1_LI_ContactName);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "User", Edit_AD1_LI_ContactName, new RecordItemIndex(24));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$AD1_LI_USStateCode) on item 'ApplicationUnderTest.AD1_LI_USStateCode'.", repo.ApplicationUnderTest.AD1_LI_USStateCodeInfo, new RecordItemIndex(25));
            Validate.AttributeEqual(repo.ApplicationUnderTest.AD1_LI_USStateCodeInfo, "TagValue", AD1_LI_USStateCode);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "User", AD1_LI_USStateCode, new RecordItemIndex(26));
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Ctrl+A' Press.", new RecordItemIndex(27));
            Keyboard.Press(System.Windows.Forms.Keys.A | System.Windows.Forms.Keys.Control, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Delete' Press.", new RecordItemIndex(28));
            Keyboard.Press(System.Windows.Forms.Keys.Delete, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Set value", "Setting attribute TagValue to '$Edit_AD1_LI_USStateCode' on item 'ApplicationUnderTest.AD1_LI_USStateCode'.", repo.ApplicationUnderTest.AD1_LI_USStateCodeInfo, new RecordItemIndex(29));
            repo.ApplicationUnderTest.AD1_LI_USStateCode.Element.SetAttributeValue("TagValue", Edit_AD1_LI_USStateCode);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "User", Edit_AD1_LI_USStateCode, new RecordItemIndex(30));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$AD1_LI_Address1) on item 'ApplicationUnderTest.AD1_LI_Address1'.", repo.ApplicationUnderTest.AD1_LI_Address1Info, new RecordItemIndex(31));
            Validate.AttributeEqual(repo.ApplicationUnderTest.AD1_LI_Address1Info, "TagValue", AD1_LI_Address1);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "User", AD1_LI_Address1, new RecordItemIndex(32));
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Ctrl+A' Press.", new RecordItemIndex(33));
            Keyboard.Press(System.Windows.Forms.Keys.A | System.Windows.Forms.Keys.Control, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Delete' Press.", new RecordItemIndex(34));
            Keyboard.Press(System.Windows.Forms.Keys.Delete, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Edit_AD1_LI_Address1' with focus on 'ApplicationUnderTest.AD1_LI_Address1'.", repo.ApplicationUnderTest.AD1_LI_Address1Info, new RecordItemIndex(35));
            repo.ApplicationUnderTest.AD1_LI_Address1.PressKeys(Edit_AD1_LI_Address1);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "User", Edit_AD1_LI_Address1, new RecordItemIndex(36));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$AD1_LI_Address2) on item 'ApplicationUnderTest.AD1_LI_Address2'.", repo.ApplicationUnderTest.AD1_LI_Address2Info, new RecordItemIndex(37));
            Validate.AttributeEqual(repo.ApplicationUnderTest.AD1_LI_Address2Info, "TagValue", AD1_LI_Address2);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "User", AD1_LI_Address2, new RecordItemIndex(38));
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Ctrl+A' Press.", new RecordItemIndex(39));
            Keyboard.Press(System.Windows.Forms.Keys.A | System.Windows.Forms.Keys.Control, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Delete' Press.", new RecordItemIndex(40));
            Keyboard.Press(System.Windows.Forms.Keys.Delete, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Edit_AD1_LI_Address2' with focus on 'ApplicationUnderTest.AD1_LI_Address2'.", repo.ApplicationUnderTest.AD1_LI_Address2Info, new RecordItemIndex(41));
            repo.ApplicationUnderTest.AD1_LI_Address2.PressKeys(Edit_AD1_LI_Address2);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "User", Edit_AD1_LI_Address2, new RecordItemIndex(42));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$AD1_LI_City) on item 'ApplicationUnderTest.AD1_LI_City'.", repo.ApplicationUnderTest.AD1_LI_CityInfo, new RecordItemIndex(43));
            Validate.AttributeEqual(repo.ApplicationUnderTest.AD1_LI_CityInfo, "TagValue", AD1_LI_City);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "User", AD1_LI_City, new RecordItemIndex(44));
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Ctrl+A' Press.", new RecordItemIndex(45));
            Keyboard.Press(System.Windows.Forms.Keys.A | System.Windows.Forms.Keys.Control, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Delete' Press.", new RecordItemIndex(46));
            Keyboard.Press(System.Windows.Forms.Keys.Delete, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Edit_AD1_LI_City' with focus on 'ApplicationUnderTest.AD1_LI_City'.", repo.ApplicationUnderTest.AD1_LI_CityInfo, new RecordItemIndex(47));
            repo.ApplicationUnderTest.AD1_LI_City.PressKeys(Edit_AD1_LI_City);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "User", Edit_AD1_LI_City, new RecordItemIndex(48));
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'TagValue' from item 'ApplicationUnderTest.AD1_LI_ZipCode' and assigning its value to variable 'AD1_LI_ZipCode'.", repo.ApplicationUnderTest.AD1_LI_ZipCodeInfo, new RecordItemIndex(49));
            AD1_LI_ZipCode = repo.ApplicationUnderTest.AD1_LI_ZipCode.Element.GetAttributeValueText("TagValue");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$AD1_LI_ZipCode) on item 'ApplicationUnderTest.AD1_LI_ZipCode'.", repo.ApplicationUnderTest.AD1_LI_ZipCodeInfo, new RecordItemIndex(50));
            Validate.AttributeEqual(repo.ApplicationUnderTest.AD1_LI_ZipCodeInfo, "TagValue", AD1_LI_ZipCode);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "User", AD1_LI_ZipCode, new RecordItemIndex(51));
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Ctrl+A' Press.", new RecordItemIndex(52));
            Keyboard.Press(System.Windows.Forms.Keys.A | System.Windows.Forms.Keys.Control, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Delete' Press.", new RecordItemIndex(53));
            Keyboard.Press(System.Windows.Forms.Keys.Delete, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Edit_AD1_LI_ZipCode' with focus on 'ApplicationUnderTest.AD1_LI_ZipCode'.", repo.ApplicationUnderTest.AD1_LI_ZipCodeInfo, new RecordItemIndex(54));
            repo.ApplicationUnderTest.AD1_LI_ZipCode.PressKeys(Edit_AD1_LI_ZipCode);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "User", Edit_AD1_LI_ZipCode, new RecordItemIndex(55));
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'TagValue' from item 'ApplicationUnderTest.AD1_LI_PhoneUseType' and assigning its value to variable 'AD1_LI_PhoneUseType_getValue'.", repo.ApplicationUnderTest.AD1_LI_PhoneUseTypeInfo, new RecordItemIndex(56));
            AD1_LI_PhoneUseType_getValue = repo.ApplicationUnderTest.AD1_LI_PhoneUseType.Element.GetAttributeValueText("TagValue");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "User", AD1_LI_PhoneUseType_getValue, new RecordItemIndex(57));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$AD1_LI_PhoneUseType_getValue) on item 'ApplicationUnderTest.AD1_LI_PhoneUseType'.", repo.ApplicationUnderTest.AD1_LI_PhoneUseTypeInfo, new RecordItemIndex(58));
            Validate.AttributeEqual(repo.ApplicationUnderTest.AD1_LI_PhoneUseTypeInfo, "TagValue", AD1_LI_PhoneUseType_getValue);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Ctrl+A' Press.", new RecordItemIndex(59));
            Keyboard.Press(System.Windows.Forms.Keys.A | System.Windows.Forms.Keys.Control, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Delete' Press.", new RecordItemIndex(60));
            Keyboard.Press(System.Windows.Forms.Keys.Delete, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Set value", "Setting attribute TagValue to '$Edit_AD1_LI_PhoneUseType_getValue' on item 'ApplicationUnderTest.AD1_LI_PhoneUseType'.", repo.ApplicationUnderTest.AD1_LI_PhoneUseTypeInfo, new RecordItemIndex(61));
            repo.ApplicationUnderTest.AD1_LI_PhoneUseType.Element.SetAttributeValue("TagValue", Edit_AD1_LI_PhoneUseType_getValue);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "User", Edit_AD1_LI_PhoneUseType_getValue, new RecordItemIndex(62));
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'TagValue' from item 'ApplicationUnderTest.AD1_LI_PhoneType' and assigning its value to variable 'AD1_LI_PhoneType_getValue'.", repo.ApplicationUnderTest.AD1_LI_PhoneTypeInfo, new RecordItemIndex(63));
            AD1_LI_PhoneType_getValue = repo.ApplicationUnderTest.AD1_LI_PhoneType.Element.GetAttributeValueText("TagValue");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "User", AD1_LI_PhoneType_getValue, new RecordItemIndex(64));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$AD1_LI_PhoneType_getValue) on item 'ApplicationUnderTest.AD1_LI_PhoneType'.", repo.ApplicationUnderTest.AD1_LI_PhoneTypeInfo, new RecordItemIndex(65));
            Validate.AttributeEqual(repo.ApplicationUnderTest.AD1_LI_PhoneTypeInfo, "TagValue", AD1_LI_PhoneType_getValue);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Ctrl+A' Press.", new RecordItemIndex(66));
            Keyboard.Press(System.Windows.Forms.Keys.A | System.Windows.Forms.Keys.Control, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Delete' Press.", new RecordItemIndex(67));
            Keyboard.Press(System.Windows.Forms.Keys.Delete, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Set value", "Setting attribute TagValue to '$Edit_AD1_LI_PhoneType_getValue' on item 'ApplicationUnderTest.AD1_LI_PhoneType'.", repo.ApplicationUnderTest.AD1_LI_PhoneTypeInfo, new RecordItemIndex(68));
            repo.ApplicationUnderTest.AD1_LI_PhoneType.Element.SetAttributeValue("TagValue", Edit_AD1_LI_PhoneType_getValue);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "User", Edit_AD1_LI_PhoneType_getValue, new RecordItemIndex(69));
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'TagValue' from item 'ApplicationUnderTest.AD1_LI_PhoneSource' and assigning its value to variable 'AD1_LI_PhoneSource_getValue'.", repo.ApplicationUnderTest.AD1_LI_PhoneSourceInfo, new RecordItemIndex(70));
            AD1_LI_PhoneSource_getValue = repo.ApplicationUnderTest.AD1_LI_PhoneSource.Element.GetAttributeValueText("TagValue");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "User", AD1_LI_PhoneSource_getValue, new RecordItemIndex(71));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$AD1_LI_PhoneSource_getValue) on item 'ApplicationUnderTest.AD1_LI_PhoneSource'.", repo.ApplicationUnderTest.AD1_LI_PhoneSourceInfo, new RecordItemIndex(72));
            Validate.AttributeEqual(repo.ApplicationUnderTest.AD1_LI_PhoneSourceInfo, "TagValue", AD1_LI_PhoneSource_getValue);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Ctrl+A' Press.", new RecordItemIndex(73));
            Keyboard.Press(System.Windows.Forms.Keys.A | System.Windows.Forms.Keys.Control, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Delete' Press.", new RecordItemIndex(74));
            Keyboard.Press(System.Windows.Forms.Keys.Delete, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Set value", "Setting attribute TagValue to '$Edit_AD1_LI_PhoneSource_getValue' on item 'ApplicationUnderTest.AD1_LI_PhoneSource'.", repo.ApplicationUnderTest.AD1_LI_PhoneSourceInfo, new RecordItemIndex(75));
            repo.ApplicationUnderTest.AD1_LI_PhoneSource.Element.SetAttributeValue("TagValue", Edit_AD1_LI_PhoneSource_getValue);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "User", Edit_AD1_LI_PhoneSource_getValue, new RecordItemIndex(76));
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'TagValue' from item 'ApplicationUnderTest.AD1_LI_PhoneNumber' and assigning its value to variable 'AD1_LI_PhoneNumber_getValue'.", repo.ApplicationUnderTest.AD1_LI_PhoneNumberInfo, new RecordItemIndex(77));
            AD1_LI_PhoneNumber_getValue = repo.ApplicationUnderTest.AD1_LI_PhoneNumber.Element.GetAttributeValueText("TagValue");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "User", AD1_LI_PhoneNumber_getValue, new RecordItemIndex(78));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$AD1_LI_PhoneNumber_getValue) on item 'ApplicationUnderTest.AD1_LI_PhoneNumber'.", repo.ApplicationUnderTest.AD1_LI_PhoneNumberInfo, new RecordItemIndex(79));
            Validate.AttributeEqual(repo.ApplicationUnderTest.AD1_LI_PhoneNumberInfo, "TagValue", AD1_LI_PhoneNumber_getValue);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Ctrl+A' Press.", new RecordItemIndex(80));
            Keyboard.Press(System.Windows.Forms.Keys.A | System.Windows.Forms.Keys.Control, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Delete' Press.", new RecordItemIndex(81));
            Keyboard.Press(System.Windows.Forms.Keys.Delete, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Set value", "Setting attribute TagValue to '$Edit_AD1_LI_PhoneNumber_getValue' on item 'ApplicationUnderTest.AD1_LI_PhoneNumber'.", repo.ApplicationUnderTest.AD1_LI_PhoneNumberInfo, new RecordItemIndex(82));
            repo.ApplicationUnderTest.AD1_LI_PhoneNumber.Element.SetAttributeValue("TagValue", Edit_AD1_LI_PhoneNumber_getValue);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "User", Edit_AD1_LI_PhoneNumber_getValue, new RecordItemIndex(83));
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'TagValue' from item 'ApplicationUnderTest.AD1_LI_EmailUseType' and assigning its value to variable 'AD1_LI_EmailUseType_getValue'.", repo.ApplicationUnderTest.AD1_LI_EmailUseTypeInfo, new RecordItemIndex(84));
            AD1_LI_EmailUseType_getValue = repo.ApplicationUnderTest.AD1_LI_EmailUseType.Element.GetAttributeValueText("TagValue");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "User", AD1_LI_EmailUseType_getValue, new RecordItemIndex(85));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$AD1_LI_EmailUseType_getValue) on item 'ApplicationUnderTest.AD1_LI_EmailUseType'.", repo.ApplicationUnderTest.AD1_LI_EmailUseTypeInfo, new RecordItemIndex(86));
            Validate.AttributeEqual(repo.ApplicationUnderTest.AD1_LI_EmailUseTypeInfo, "TagValue", AD1_LI_EmailUseType_getValue);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Ctrl+A' Press.", new RecordItemIndex(87));
            Keyboard.Press(System.Windows.Forms.Keys.A | System.Windows.Forms.Keys.Control, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Delete' Press.", new RecordItemIndex(88));
            Keyboard.Press(System.Windows.Forms.Keys.Delete, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Set value", "Setting attribute TagValue to '$Edit_AD1_LI_EmailUseType_getValue' on item 'ApplicationUnderTest.AD1_LI_EmailUseType'.", repo.ApplicationUnderTest.AD1_LI_EmailUseTypeInfo, new RecordItemIndex(89));
            repo.ApplicationUnderTest.AD1_LI_EmailUseType.Element.SetAttributeValue("TagValue", Edit_AD1_LI_EmailUseType_getValue);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "User", Edit_AD1_LI_EmailUseType_getValue, new RecordItemIndex(90));
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'TagValue' from item 'ApplicationUnderTest.AD1_LI_EmailSource' and assigning its value to variable 'AD1_LI_EmailSource_getValue'.", repo.ApplicationUnderTest.AD1_LI_EmailSourceInfo, new RecordItemIndex(91));
            AD1_LI_EmailSource_getValue = repo.ApplicationUnderTest.AD1_LI_EmailSource.Element.GetAttributeValueText("TagValue");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "User", AD1_LI_EmailSource_getValue, new RecordItemIndex(92));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$AD1_LI_EmailSource_getValue) on item 'ApplicationUnderTest.AD1_LI_EmailSource'.", repo.ApplicationUnderTest.AD1_LI_EmailSourceInfo, new RecordItemIndex(93));
            Validate.AttributeEqual(repo.ApplicationUnderTest.AD1_LI_EmailSourceInfo, "TagValue", AD1_LI_EmailSource_getValue);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Ctrl+A' Press.", new RecordItemIndex(94));
            Keyboard.Press(System.Windows.Forms.Keys.A | System.Windows.Forms.Keys.Control, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Delete' Press.", new RecordItemIndex(95));
            Keyboard.Press(System.Windows.Forms.Keys.Delete, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Set value", "Setting attribute TagValue to '$Edit_AD1_LI_EmailSource_getValue' on item 'ApplicationUnderTest.AD1_LI_EmailSource'.", repo.ApplicationUnderTest.AD1_LI_EmailSourceInfo, new RecordItemIndex(96));
            repo.ApplicationUnderTest.AD1_LI_EmailSource.Element.SetAttributeValue("TagValue", Edit_AD1_LI_EmailSource_getValue);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "User", Edit_AD1_LI_EmailSource_getValue, new RecordItemIndex(97));
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'TagValue' from item 'ApplicationUnderTest.AD1_LI_Email' and assigning its value to variable 'AD1_LI_Email_getValue'.", repo.ApplicationUnderTest.AD1_LI_EmailInfo, new RecordItemIndex(98));
            AD1_LI_Email_getValue = repo.ApplicationUnderTest.AD1_LI_Email.Element.GetAttributeValueText("TagValue");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "User", AD1_LI_Email_getValue, new RecordItemIndex(99));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$AD1_LI_Email_getValue) on item 'ApplicationUnderTest.AD1_LI_Email'.", repo.ApplicationUnderTest.AD1_LI_EmailInfo, new RecordItemIndex(100));
            Validate.AttributeEqual(repo.ApplicationUnderTest.AD1_LI_EmailInfo, "TagValue", AD1_LI_Email_getValue);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Ctrl+A' Press.", new RecordItemIndex(101));
            Keyboard.Press(System.Windows.Forms.Keys.A | System.Windows.Forms.Keys.Control, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Delete' Press.", new RecordItemIndex(102));
            Keyboard.Press(System.Windows.Forms.Keys.Delete, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'TagValue' from item 'ApplicationUnderTest.AD1_LI_Email' and assigning its value to variable 'Edit_AD1_LI_Email_getValue'.", repo.ApplicationUnderTest.AD1_LI_EmailInfo, new RecordItemIndex(103));
            Edit_AD1_LI_Email_getValue = repo.ApplicationUnderTest.AD1_LI_Email.Element.GetAttributeValueText("TagValue");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "User", Edit_AD1_LI_Email_getValue, new RecordItemIndex(104));
            
            Report.Screenshot(ReportLevel.Info, "User", "", repo.PegaCaseManagerPortalGoogleChrome.Screenshot_Window, false, new RecordItemIndex(105));
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
