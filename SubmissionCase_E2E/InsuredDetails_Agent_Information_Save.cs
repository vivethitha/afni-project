///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace SubmissionCase_E2E
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The InsuredDetails_Agent_Information_Save recording.
    /// </summary>
    [TestModule("0b2b0ba5-3f5d-494e-987c-84a76d55c2f7", ModuleType.Recording, 1)]
    public partial class InsuredDetails_Agent_Information_Save : ITestModule
    {
        /// <summary>
        /// Holds an instance of the SubmissionCase_E2ERepository repository.
        /// </summary>
        public static SubmissionCase_E2ERepository repo = SubmissionCase_E2ERepository.Instance;

        static InsuredDetails_Agent_Information_Save instance = new InsuredDetails_Agent_Information_Save();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public InsuredDetails_Agent_Information_Save()
        {
            Agent_Name = "";
            AD_AddressLine1 = "";
            AD_AddressLine2 = "";
            AD_City = "";
            AD_State = "";
            AD_Zipcode = "";
            AgentDetails_AgentPhone = "";
            AgentDetails_Email = "";
            AgentDetails_Ext = "";
            AgentDetails_FaxNo = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static InsuredDetails_Agent_Information_Save Instance
        {
            get { return instance; }
        }

#region Variables

        string _Agent_Name;

        /// <summary>
        /// Gets or sets the value of variable Agent_Name.
        /// </summary>
        [TestVariable("82d2e449-b43a-4e8c-adda-3570b4f8dadb")]
        public string Agent_Name
        {
            get { return _Agent_Name; }
            set { _Agent_Name = value; }
        }

        string _AD_AddressLine1;

        /// <summary>
        /// Gets or sets the value of variable AD_AddressLine1.
        /// </summary>
        [TestVariable("0af78b66-29df-4ef1-8d01-dee78cfa9d0d")]
        public string AD_AddressLine1
        {
            get { return _AD_AddressLine1; }
            set { _AD_AddressLine1 = value; }
        }

        string _AD_AddressLine2;

        /// <summary>
        /// Gets or sets the value of variable AD_AddressLine2.
        /// </summary>
        [TestVariable("53ad8e96-94ed-4785-8512-ad3fecf8917f")]
        public string AD_AddressLine2
        {
            get { return _AD_AddressLine2; }
            set { _AD_AddressLine2 = value; }
        }

        string _AD_City;

        /// <summary>
        /// Gets or sets the value of variable AD_City.
        /// </summary>
        [TestVariable("94e51de5-c912-4b78-ae2a-fa8a58729590")]
        public string AD_City
        {
            get { return _AD_City; }
            set { _AD_City = value; }
        }

        string _AD_State;

        /// <summary>
        /// Gets or sets the value of variable AD_State.
        /// </summary>
        [TestVariable("91ea74dc-ed93-44e9-994f-a8a69057d4cd")]
        public string AD_State
        {
            get { return _AD_State; }
            set { _AD_State = value; }
        }

        string _AD_Zipcode;

        /// <summary>
        /// Gets or sets the value of variable AD_Zipcode.
        /// </summary>
        [TestVariable("3c34436d-5559-4559-8045-7ae061b85cbd")]
        public string AD_Zipcode
        {
            get { return _AD_Zipcode; }
            set { _AD_Zipcode = value; }
        }

        string _AgentDetails_AgentPhone;

        /// <summary>
        /// Gets or sets the value of variable AgentDetails_AgentPhone.
        /// </summary>
        [TestVariable("2f57b149-0abe-447e-bc32-9fcd02249113")]
        public string AgentDetails_AgentPhone
        {
            get { return _AgentDetails_AgentPhone; }
            set { _AgentDetails_AgentPhone = value; }
        }

        string _AgentDetails_Email;

        /// <summary>
        /// Gets or sets the value of variable AgentDetails_Email.
        /// </summary>
        [TestVariable("53f78777-9495-4ca6-b320-b8a4ee89d951")]
        public string AgentDetails_Email
        {
            get { return _AgentDetails_Email; }
            set { _AgentDetails_Email = value; }
        }

        string _AgentDetails_Ext;

        /// <summary>
        /// Gets or sets the value of variable AgentDetails_Ext.
        /// </summary>
        [TestVariable("296b1104-953a-4443-a0e5-c8cd3dbc9b75")]
        public string AgentDetails_Ext
        {
            get { return _AgentDetails_Ext; }
            set { _AgentDetails_Ext = value; }
        }

        string _AgentDetails_FaxNo;

        /// <summary>
        /// Gets or sets the value of variable AgentDetails_FaxNo.
        /// </summary>
        [TestVariable("20232520-d889-4fab-aa4c-123bfdba78a3")]
        public string AgentDetails_FaxNo
        {
            get { return _AgentDetails_FaxNo; }
            set { _AgentDetails_FaxNo = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.Save_Button' at 6;8.", repo.ApplicationUnderTest.Save_ButtonInfo, new RecordItemIndex(0));
            repo.ApplicationUnderTest.Save_Button.Click("6;8");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 5s.", new RecordItemIndex(1));
            Delay.Duration(5000, false);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 10s to exist. Associated repository item: 'ApplicationUnderTest.AgentDetails_Header'", repo.ApplicationUnderTest.AgentDetails_HeaderInfo, new ActionTimeout(10000), new RecordItemIndex(2));
            repo.ApplicationUnderTest.AgentDetails_HeaderInfo.WaitForExists(10000);
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'TagValue' from item 'ApplicationUnderTest.AgentName' and assigning its value to variable 'Agent_Name'.", repo.ApplicationUnderTest.AgentNameInfo, new RecordItemIndex(3));
            Agent_Name = repo.ApplicationUnderTest.AgentName.Element.GetAttributeValueText("TagValue");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "User", Agent_Name, new RecordItemIndex(4));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$Agent_Name) on item 'ApplicationUnderTest.AgentName'.", repo.ApplicationUnderTest.AgentNameInfo, new RecordItemIndex(5));
            Validate.AttributeEqual(repo.ApplicationUnderTest.AgentNameInfo, "TagValue", Agent_Name);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'TagValue' from item 'ApplicationUnderTest.AD_AddressLine1' and assigning its value to variable 'AD_AddressLine1'.", repo.ApplicationUnderTest.AD_AddressLine1Info, new RecordItemIndex(6));
            AD_AddressLine1 = repo.ApplicationUnderTest.AD_AddressLine1.Element.GetAttributeValueText("TagValue");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "User", AD_AddressLine1, new RecordItemIndex(7));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$AD_AddressLine1) on item 'ApplicationUnderTest.AD_AddressLine1'.", repo.ApplicationUnderTest.AD_AddressLine1Info, new RecordItemIndex(8));
            Validate.AttributeEqual(repo.ApplicationUnderTest.AD_AddressLine1Info, "TagValue", AD_AddressLine1);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'TagValue' from item 'ApplicationUnderTest.AD_AddressLine2' and assigning its value to variable 'AD_AddressLine2'.", repo.ApplicationUnderTest.AD_AddressLine2Info, new RecordItemIndex(9));
            AD_AddressLine2 = repo.ApplicationUnderTest.AD_AddressLine2.Element.GetAttributeValueText("TagValue");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "User", AD_AddressLine2, new RecordItemIndex(10));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$AD_AddressLine2) on item 'ApplicationUnderTest.AD_AddressLine2'.", repo.ApplicationUnderTest.AD_AddressLine2Info, new RecordItemIndex(11));
            Validate.AttributeEqual(repo.ApplicationUnderTest.AD_AddressLine2Info, "TagValue", AD_AddressLine2);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'TagValue' from item 'ApplicationUnderTest.AD_City' and assigning its value to variable 'AD_City'.", repo.ApplicationUnderTest.AD_CityInfo, new RecordItemIndex(12));
            AD_City = repo.ApplicationUnderTest.AD_City.Element.GetAttributeValueText("TagValue");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "User", AD_City, new RecordItemIndex(13));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$AD_City) on item 'ApplicationUnderTest.AD_City'.", repo.ApplicationUnderTest.AD_CityInfo, new RecordItemIndex(14));
            Validate.AttributeEqual(repo.ApplicationUnderTest.AD_CityInfo, "TagValue", AD_City);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'TagValue' from item 'ApplicationUnderTest.AD_State' and assigning its value to variable 'AD_State'.", repo.ApplicationUnderTest.AD_StateInfo, new RecordItemIndex(15));
            AD_State = repo.ApplicationUnderTest.AD_State.Element.GetAttributeValueText("TagValue");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "User", AD_State, new RecordItemIndex(16));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$AD_State) on item 'ApplicationUnderTest.AD_State'.", repo.ApplicationUnderTest.AD_StateInfo, new RecordItemIndex(17));
            Validate.AttributeEqual(repo.ApplicationUnderTest.AD_StateInfo, "TagValue", AD_State);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'TagValue' from item 'ApplicationUnderTest.AD_Zipcode' and assigning its value to variable 'AD_Zipcode'.", repo.ApplicationUnderTest.AD_ZipcodeInfo, new RecordItemIndex(18));
            AD_Zipcode = repo.ApplicationUnderTest.AD_Zipcode.Element.GetAttributeValueText("TagValue");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "User", AD_Zipcode, new RecordItemIndex(19));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$AD_Zipcode) on item 'ApplicationUnderTest.AD_Zipcode'.", repo.ApplicationUnderTest.AD_ZipcodeInfo, new RecordItemIndex(20));
            Validate.AttributeEqual(repo.ApplicationUnderTest.AD_ZipcodeInfo, "TagValue", AD_Zipcode);
            Delay.Milliseconds(100);
            
            Report.Screenshot(ReportLevel.Info, "User", "", repo.PegaCaseManagerPortalGoogleChrome.Screenshot_Window, false, new RecordItemIndex(21));
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'TagValue' from item 'ApplicationUnderTest.AgentDetails_AgentPhone' and assigning its value to variable 'AgentDetails_AgentPhone'.", repo.ApplicationUnderTest.AgentDetails_AgentPhoneInfo, new RecordItemIndex(22));
            AgentDetails_AgentPhone = repo.ApplicationUnderTest.AgentDetails_AgentPhone.Element.GetAttributeValueText("TagValue");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "User", AgentDetails_AgentPhone, new RecordItemIndex(23));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$AgentDetails_AgentPhone) on item 'ApplicationUnderTest.AgentDetails_AgentPhone'.", repo.ApplicationUnderTest.AgentDetails_AgentPhoneInfo, new RecordItemIndex(24));
            Validate.AttributeEqual(repo.ApplicationUnderTest.AgentDetails_AgentPhoneInfo, "TagValue", AgentDetails_AgentPhone);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'TagValue' from item 'ApplicationUnderTest.AgentDetails_Email' and assigning its value to variable 'AgentDetails_Email'.", repo.ApplicationUnderTest.AgentDetails_EmailInfo, new RecordItemIndex(25));
            AgentDetails_Email = repo.ApplicationUnderTest.AgentDetails_Email.Element.GetAttributeValueText("TagValue");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "User", AgentDetails_Email, new RecordItemIndex(26));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$AgentDetails_Email) on item 'ApplicationUnderTest.AgentDetails_Email'.", repo.ApplicationUnderTest.AgentDetails_EmailInfo, new RecordItemIndex(27));
            Validate.AttributeEqual(repo.ApplicationUnderTest.AgentDetails_EmailInfo, "TagValue", AgentDetails_Email);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'TagValue' from item 'ApplicationUnderTest.AgentDetails_Ext' and assigning its value to variable 'AgentDetails_Ext'.", repo.ApplicationUnderTest.AgentDetails_ExtInfo, new RecordItemIndex(28));
            AgentDetails_Ext = repo.ApplicationUnderTest.AgentDetails_Ext.Element.GetAttributeValueText("TagValue");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "User", AgentDetails_Ext, new RecordItemIndex(29));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$AgentDetails_Ext) on item 'ApplicationUnderTest.AgentDetails_Ext'.", repo.ApplicationUnderTest.AgentDetails_ExtInfo, new RecordItemIndex(30));
            Validate.AttributeEqual(repo.ApplicationUnderTest.AgentDetails_ExtInfo, "TagValue", AgentDetails_Ext);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'TagValue' from item 'ApplicationUnderTest.AgentDetails_FaxNo' and assigning its value to variable 'AgentDetails_FaxNo'.", repo.ApplicationUnderTest.AgentDetails_FaxNoInfo, new RecordItemIndex(31));
            AgentDetails_FaxNo = repo.ApplicationUnderTest.AgentDetails_FaxNo.Element.GetAttributeValueText("TagValue");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "User", AgentDetails_FaxNo, new RecordItemIndex(32));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$AgentDetails_FaxNo) on item 'ApplicationUnderTest.AgentDetails_FaxNo'.", repo.ApplicationUnderTest.AgentDetails_FaxNoInfo, new RecordItemIndex(33));
            Validate.AttributeEqual(repo.ApplicationUnderTest.AgentDetails_FaxNoInfo, "TagValue", AgentDetails_FaxNo);
            Delay.Milliseconds(100);
            
            Report.Screenshot(ReportLevel.Info, "User", "", repo.PegaCaseManagerPortalGoogleChrome.Screenshot_Window, false, new RecordItemIndex(34));
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.SubmitButton1' at 46;15.", repo.ApplicationUnderTest.SubmitButton1Info, new RecordItemIndex(35));
            repo.ApplicationUnderTest.SubmitButton1.Click("46;15");
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
