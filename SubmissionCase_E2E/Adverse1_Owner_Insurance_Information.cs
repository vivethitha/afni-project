///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace SubmissionCase_E2E
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Adverse1_Owner_Insurance_Information recording.
    /// </summary>
    [TestModule("31244cf1-3107-4624-8a29-0f7f1368c3bc", ModuleType.Recording, 1)]
    public partial class Adverse1_Owner_Insurance_Information : ITestModule
    {
        /// <summary>
        /// Holds an instance of the SubmissionCase_E2ERepository repository.
        /// </summary>
        public static SubmissionCase_E2ERepository repo = SubmissionCase_E2ERepository.Instance;

        static Adverse1_Owner_Insurance_Information instance = new Adverse1_Owner_Insurance_Information();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Adverse1_Owner_Insurance_Information()
        {
            AO_LI_PolicyNumber = "";
            AO_LI_ClaimNumber = "";
            AO_LI_ContactName = "";
            AO_LI_Address1 = "";
            AO_LI_Address2 = "";
            AO_LI_City = "";
            AO_LI_Zip = "";
            AO_LI_Email = "";
            AO_LI_PhoneUseType = "";
            AO_LI_PhoneType = "";
            AO_LI_PhoneSource = "";
            AO_LI_PhoneNumber = "";
            AO_LI_EmailUseType = "";
            AO_LI_EmailSource = "";
            AO_LI_EmailId = "";
            AO_LI_Company_Name = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Adverse1_Owner_Insurance_Information Instance
        {
            get { return instance; }
        }

#region Variables

        string _AO_LI_PolicyNumber;

        /// <summary>
        /// Gets or sets the value of variable AO_LI_PolicyNumber.
        /// </summary>
        [TestVariable("f54b2be3-9955-4236-91c9-c751e4ca774c")]
        public string AO_LI_PolicyNumber
        {
            get { return _AO_LI_PolicyNumber; }
            set { _AO_LI_PolicyNumber = value; }
        }

        string _AO_LI_ClaimNumber;

        /// <summary>
        /// Gets or sets the value of variable AO_LI_ClaimNumber.
        /// </summary>
        [TestVariable("ad917b80-1d82-4bad-8471-fb6fae84d9ae")]
        public string AO_LI_ClaimNumber
        {
            get { return _AO_LI_ClaimNumber; }
            set { _AO_LI_ClaimNumber = value; }
        }

        string _AO_LI_ContactName;

        /// <summary>
        /// Gets or sets the value of variable AO_LI_ContactName.
        /// </summary>
        [TestVariable("2e3423f3-7d5b-4801-b814-ef9320cb08d5")]
        public string AO_LI_ContactName
        {
            get { return _AO_LI_ContactName; }
            set { _AO_LI_ContactName = value; }
        }

        string _AO_LI_Address1;

        /// <summary>
        /// Gets or sets the value of variable AO_LI_Address1.
        /// </summary>
        [TestVariable("f9ffae14-7d2e-4f69-8703-59af3322d9d5")]
        public string AO_LI_Address1
        {
            get { return _AO_LI_Address1; }
            set { _AO_LI_Address1 = value; }
        }

        string _AO_LI_Address2;

        /// <summary>
        /// Gets or sets the value of variable AO_LI_Address2.
        /// </summary>
        [TestVariable("fe956e45-82fb-43fb-bcda-88b9ef484212")]
        public string AO_LI_Address2
        {
            get { return _AO_LI_Address2; }
            set { _AO_LI_Address2 = value; }
        }

        string _AO_LI_City;

        /// <summary>
        /// Gets or sets the value of variable AO_LI_City.
        /// </summary>
        [TestVariable("b08afdc4-ce49-42e2-a982-5b69862489bf")]
        public string AO_LI_City
        {
            get { return _AO_LI_City; }
            set { _AO_LI_City = value; }
        }

        string _AO_LI_Zip;

        /// <summary>
        /// Gets or sets the value of variable AO_LI_Zip.
        /// </summary>
        [TestVariable("d58d9d83-6b9f-4584-868c-d716be1fcdaf")]
        public string AO_LI_Zip
        {
            get { return _AO_LI_Zip; }
            set { _AO_LI_Zip = value; }
        }

        string _AO_LI_Email;

        /// <summary>
        /// Gets or sets the value of variable AO_LI_Email.
        /// </summary>
        [TestVariable("2b5c706c-bb21-42be-996c-7230ba2d0f74")]
        public string AO_LI_Email
        {
            get { return _AO_LI_Email; }
            set { _AO_LI_Email = value; }
        }

        string _AO_LI_PhoneUseType;

        /// <summary>
        /// Gets or sets the value of variable AO_LI_PhoneUseType.
        /// </summary>
        [TestVariable("f0e30abd-16a8-4e41-932b-6003ddf2178c")]
        public string AO_LI_PhoneUseType
        {
            get { return _AO_LI_PhoneUseType; }
            set { _AO_LI_PhoneUseType = value; }
        }

        string _AO_LI_PhoneType;

        /// <summary>
        /// Gets or sets the value of variable AO_LI_PhoneType.
        /// </summary>
        [TestVariable("db2fea69-de61-49a7-b58b-0f3247799bac")]
        public string AO_LI_PhoneType
        {
            get { return _AO_LI_PhoneType; }
            set { _AO_LI_PhoneType = value; }
        }

        string _AO_LI_PhoneSource;

        /// <summary>
        /// Gets or sets the value of variable AO_LI_PhoneSource.
        /// </summary>
        [TestVariable("55964cf9-e641-497d-9db6-d9804fd6a5f5")]
        public string AO_LI_PhoneSource
        {
            get { return _AO_LI_PhoneSource; }
            set { _AO_LI_PhoneSource = value; }
        }

        string _AO_LI_PhoneNumber;

        /// <summary>
        /// Gets or sets the value of variable AO_LI_PhoneNumber.
        /// </summary>
        [TestVariable("dcb94baf-3a03-4e8c-99a6-5db24bef8485")]
        public string AO_LI_PhoneNumber
        {
            get { return _AO_LI_PhoneNumber; }
            set { _AO_LI_PhoneNumber = value; }
        }

        string _AO_LI_EmailUseType;

        /// <summary>
        /// Gets or sets the value of variable AO_LI_EmailUseType.
        /// </summary>
        [TestVariable("8d9014a5-cd0b-4aa6-896c-553983d4eaf7")]
        public string AO_LI_EmailUseType
        {
            get { return _AO_LI_EmailUseType; }
            set { _AO_LI_EmailUseType = value; }
        }

        string _AO_LI_EmailSource;

        /// <summary>
        /// Gets or sets the value of variable AO_LI_EmailSource.
        /// </summary>
        [TestVariable("38c7f311-1364-4960-9311-d2cd5f780f16")]
        public string AO_LI_EmailSource
        {
            get { return _AO_LI_EmailSource; }
            set { _AO_LI_EmailSource = value; }
        }

        string _AO_LI_EmailId;

        /// <summary>
        /// Gets or sets the value of variable AO_LI_EmailId.
        /// </summary>
        [TestVariable("0dc81f32-5ba3-45dc-b576-de773bebb663")]
        public string AO_LI_EmailId
        {
            get { return _AO_LI_EmailId; }
            set { _AO_LI_EmailId = value; }
        }

        string _AO_LI_Company_Name;

        /// <summary>
        /// Gets or sets the value of variable AO_LI_Company_Name.
        /// </summary>
        [TestVariable("829fd90f-840b-4b85-b6a0-0127ef44c9f5")]
        public string AO_LI_Company_Name
        {
            get { return _AO_LI_Company_Name; }
            set { _AO_LI_Company_Name = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Wait", "Waiting 10s to exist. Associated repository item: 'ApplicationUnderTest.AO_LI_Self_Insured'", repo.ApplicationUnderTest.AO_LI_Self_InsuredInfo, new ActionTimeout(10000), new RecordItemIndex(0));
            repo.ApplicationUnderTest.AO_LI_Self_InsuredInfo.WaitForExists(10000);
            
            Report.Log(ReportLevel.Info, "Set value", "Setting attribute TagValue to '$AO_LI_Company_Name' on item 'ApplicationUnderTest.AO_LI_InsuranceCompanyName'.", repo.ApplicationUnderTest.AO_LI_InsuranceCompanyNameInfo, new RecordItemIndex(1));
            repo.ApplicationUnderTest.AO_LI_InsuranceCompanyName.Element.SetAttributeValue("TagValue", AO_LI_Company_Name);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 5s.", new RecordItemIndex(2));
            Delay.Duration(5000, false);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.AO_LI_Self_Insured' at Center.", repo.ApplicationUnderTest.AO_LI_Self_InsuredInfo, new RecordItemIndex(3));
            repo.ApplicationUnderTest.AO_LI_Self_Insured.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$AO_LI_PolicyNumber' with focus on 'ApplicationUnderTest.AO_LI_PolicyNumber'.", repo.ApplicationUnderTest.AO_LI_PolicyNumberInfo, new RecordItemIndex(4));
            repo.ApplicationUnderTest.AO_LI_PolicyNumber.PressKeys(AO_LI_PolicyNumber);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Tab}'.", new RecordItemIndex(5));
            Keyboard.Press("{Tab}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 3s.", new RecordItemIndex(6));
            Delay.Duration(3000, false);
            
            //Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.AO_LI_ClaimNumber' at Center.", repo.ApplicationUnderTest.AO_LI_ClaimNumberInfo, new RecordItemIndex(7));
            //repo.ApplicationUnderTest.AO_LI_ClaimNumber.Click();
            //Delay.Milliseconds(9700);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$AO_LI_ClaimNumber' with focus on 'ApplicationUnderTest.AO_LI_ClaimNumber'.", repo.ApplicationUnderTest.AO_LI_ClaimNumberInfo, new RecordItemIndex(8));
            repo.ApplicationUnderTest.AO_LI_ClaimNumber.PressKeys(AO_LI_ClaimNumber);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Tab}'.", new RecordItemIndex(9));
            Keyboard.Press("{Tab}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Tab}'.", new RecordItemIndex(10));
            Keyboard.Press("{Tab}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 2s.", new RecordItemIndex(11));
            Delay.Duration(2000, false);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$AO_LI_ContactName' with focus on 'ApplicationUnderTest.AO_LI_ContactName'.", repo.ApplicationUnderTest.AO_LI_ContactNameInfo, new RecordItemIndex(12));
            repo.ApplicationUnderTest.AO_LI_ContactName.PressKeys(AO_LI_ContactName);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Set value", "Setting attribute TagValue to 'DC' on item 'ApplicationUnderTest.AO_LI_State'.", repo.ApplicationUnderTest.AO_LI_StateInfo, new RecordItemIndex(13));
            repo.ApplicationUnderTest.AO_LI_State.Element.SetAttributeValue("TagValue", "DC");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$AO_LI_Address1' with focus on 'ApplicationUnderTest.AO_LI_Address1'.", repo.ApplicationUnderTest.AO_LI_Address1Info, new RecordItemIndex(14));
            repo.ApplicationUnderTest.AO_LI_Address1.PressKeys(AO_LI_Address1);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$AO_LI_Address2' with focus on 'ApplicationUnderTest.AO_LI_Address2'.", repo.ApplicationUnderTest.AO_LI_Address2Info, new RecordItemIndex(15));
            repo.ApplicationUnderTest.AO_LI_Address2.PressKeys(AO_LI_Address2);
            Delay.Milliseconds(0);
            
            Report.Screenshot(ReportLevel.Info, "User", "", repo.PegaCaseManagerPortalGoogleChrome.Screenshot_Window, false, new RecordItemIndex(16));
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$AO_LI_City' with focus on 'ApplicationUnderTest.AO_LI_City'.", repo.ApplicationUnderTest.AO_LI_CityInfo, new RecordItemIndex(17));
            repo.ApplicationUnderTest.AO_LI_City.PressKeys(AO_LI_City);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$AO_LI_Zip' with focus on 'ApplicationUnderTest.AO_LI_Zip'.", repo.ApplicationUnderTest.AO_LI_ZipInfo, new RecordItemIndex(18));
            repo.ApplicationUnderTest.AO_LI_Zip.PressKeys(AO_LI_Zip);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 5s.", new RecordItemIndex(19));
            Delay.Duration(5000, false);
            
            //Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$AO_LI_Email' with focus on 'ApplicationUnderTest.AO_LI_Email'.", repo.ApplicationUnderTest.AO_LI_EmailInfo, new RecordItemIndex(20));
            //repo.ApplicationUnderTest.AO_LI_Email.PressKeys(AO_LI_Email);
            //Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Tab}'.", new RecordItemIndex(21));
            Keyboard.Press("{Tab}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Return}'.", new RecordItemIndex(22));
            Keyboard.Press("{Return}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 5s.", new RecordItemIndex(23));
            Delay.Duration(5000, false);
            
            Report.Log(ReportLevel.Info, "Set value", "Setting attribute TagValue to '$AO_LI_PhoneUseType' on item 'ApplicationUnderTest.AO_LI_PhoneUseType'.", repo.ApplicationUnderTest.AO_LI_PhoneUseTypeInfo, new RecordItemIndex(24));
            repo.ApplicationUnderTest.AO_LI_PhoneUseType.Element.SetAttributeValue("TagValue", AO_LI_PhoneUseType);
            Delay.Milliseconds(1000);
            
            Report.Log(ReportLevel.Info, "Set value", "Setting attribute TagValue to '$AO_LI_PhoneType' on item 'ApplicationUnderTest.AO_LI_PhoneType'.", repo.ApplicationUnderTest.AO_LI_PhoneTypeInfo, new RecordItemIndex(25));
            repo.ApplicationUnderTest.AO_LI_PhoneType.Element.SetAttributeValue("TagValue", AO_LI_PhoneType);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Set value", "Setting attribute TagValue to '$AO_LI_PhoneSource' on item 'ApplicationUnderTest.AO_LI_PhoneSource'.", repo.ApplicationUnderTest.AO_LI_PhoneSourceInfo, new RecordItemIndex(26));
            repo.ApplicationUnderTest.AO_LI_PhoneSource.Element.SetAttributeValue("TagValue", AO_LI_PhoneSource);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$AO_LI_PhoneNumber' with focus on 'ApplicationUnderTest.AO_LI_PhoneNumber'.", repo.ApplicationUnderTest.AO_LI_PhoneNumberInfo, new RecordItemIndex(27));
            repo.ApplicationUnderTest.AO_LI_PhoneNumber.PressKeys(AO_LI_PhoneNumber);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Tab}'.", new RecordItemIndex(28));
            Keyboard.Press("{Tab}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Return}'.", new RecordItemIndex(29));
            Keyboard.Press("{Return}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Set value", "Setting attribute TagValue to '$AO_LI_EmailUseType' on item 'ApplicationUnderTest.AO_LI_EmailUseType'.", repo.ApplicationUnderTest.AO_LI_EmailUseTypeInfo, new RecordItemIndex(30));
            repo.ApplicationUnderTest.AO_LI_EmailUseType.Element.SetAttributeValue("TagValue", AO_LI_EmailUseType);
            Delay.Milliseconds(1000);
            
            Report.Log(ReportLevel.Info, "Set value", "Setting attribute TagValue to '$AO_LI_EmailSource' on item 'ApplicationUnderTest.AO_LI_EmailSource'.", repo.ApplicationUnderTest.AO_LI_EmailSourceInfo, new RecordItemIndex(31));
            repo.ApplicationUnderTest.AO_LI_EmailSource.Element.SetAttributeValue("TagValue", AO_LI_EmailSource);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Set value", "Setting attribute TagValue to '$AO_LI_EmailId' on item 'ApplicationUnderTest.AO_LI_EmailId'.", repo.ApplicationUnderTest.AO_LI_EmailIdInfo, new RecordItemIndex(32));
            repo.ApplicationUnderTest.AO_LI_EmailId.Element.SetAttributeValue("TagValue", AO_LI_EmailId);
            Delay.Milliseconds(0);
            
            Report.Screenshot(ReportLevel.Info, "User", "", repo.PegaCaseManagerPortalGoogleChrome.Screenshot_Window, false, new RecordItemIndex(33));
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 5s.", new RecordItemIndex(34));
            Delay.Duration(5000, false);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
