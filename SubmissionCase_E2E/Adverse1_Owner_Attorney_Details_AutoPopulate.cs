///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace SubmissionCase_E2E
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Adverse1_Owner_Attorney_Details_AutoPopulate recording.
    /// </summary>
    [TestModule("2ab21060-96ac-4d59-ad88-7b4ecc78450f", ModuleType.Recording, 1)]
    public partial class Adverse1_Owner_Attorney_Details_AutoPopulate : ITestModule
    {
        /// <summary>
        /// Holds an instance of the SubmissionCase_E2ERepository repository.
        /// </summary>
        public static SubmissionCase_E2ERepository repo = SubmissionCase_E2ERepository.Instance;

        static Adverse1_Owner_Attorney_Details_AutoPopulate instance = new Adverse1_Owner_Attorney_Details_AutoPopulate();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Adverse1_Owner_Attorney_Details_AutoPopulate()
        {
            AO_Search_Attorney = "";
            AO_AD_UseType = "";
            AO_AD_PhoneType = "";
            AO_AD_Source = "";
            AO_AD_EmailUseType = "";
            AO_AD_EmailSource = "";
            AO1_Attorney_RepDate = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Adverse1_Owner_Attorney_Details_AutoPopulate Instance
        {
            get { return instance; }
        }

#region Variables

        string _AO_Search_Attorney;

        /// <summary>
        /// Gets or sets the value of variable AO_Search_Attorney.
        /// </summary>
        [TestVariable("01e99b7d-fd98-4660-a72a-504ef8903feb")]
        public string AO_Search_Attorney
        {
            get { return _AO_Search_Attorney; }
            set { _AO_Search_Attorney = value; }
        }

        string _AO_AD_UseType;

        /// <summary>
        /// Gets or sets the value of variable AO_AD_UseType.
        /// </summary>
        [TestVariable("5953d3ee-2a65-4431-ac23-ace5e0ab2e8d")]
        public string AO_AD_UseType
        {
            get { return _AO_AD_UseType; }
            set { _AO_AD_UseType = value; }
        }

        string _AO_AD_PhoneType;

        /// <summary>
        /// Gets or sets the value of variable AO_AD_PhoneType.
        /// </summary>
        [TestVariable("fb1ae1bc-bdcb-4400-981b-a79c79d81e23")]
        public string AO_AD_PhoneType
        {
            get { return _AO_AD_PhoneType; }
            set { _AO_AD_PhoneType = value; }
        }

        string _AO_AD_Source;

        /// <summary>
        /// Gets or sets the value of variable AO_AD_Source.
        /// </summary>
        [TestVariable("85710b42-e56c-4d8b-89a4-16a3b63b4513")]
        public string AO_AD_Source
        {
            get { return _AO_AD_Source; }
            set { _AO_AD_Source = value; }
        }

        string _AO_AD_EmailUseType;

        /// <summary>
        /// Gets or sets the value of variable AO_AD_EmailUseType.
        /// </summary>
        [TestVariable("945444db-8031-4517-ba95-0d64e949e544")]
        public string AO_AD_EmailUseType
        {
            get { return _AO_AD_EmailUseType; }
            set { _AO_AD_EmailUseType = value; }
        }

        string _AO_AD_EmailSource;

        /// <summary>
        /// Gets or sets the value of variable AO_AD_EmailSource.
        /// </summary>
        [TestVariable("8786772b-da9a-4803-9922-3a3707941087")]
        public string AO_AD_EmailSource
        {
            get { return _AO_AD_EmailSource; }
            set { _AO_AD_EmailSource = value; }
        }

        string _AO1_Attorney_RepDate;

        /// <summary>
        /// Gets or sets the value of variable AO1_Attorney_RepDate.
        /// </summary>
        [TestVariable("47dee219-fff7-4d3e-bd1c-d12c46ada138")]
        public string AO1_Attorney_RepDate
        {
            get { return _AO1_Attorney_RepDate; }
            set { _AO1_Attorney_RepDate = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Wait", "Waiting 10s to exist. Associated repository item: 'ApplicationUnderTest.Search_Attorney_Header'", repo.ApplicationUnderTest.Search_Attorney_HeaderInfo, new ActionTimeout(10000), new RecordItemIndex(0));
            repo.ApplicationUnderTest.Search_Attorney_HeaderInfo.WaitForExists(10000);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.AO_Search_Attorney' at 175;17.", repo.ApplicationUnderTest.AO_Search_AttorneyInfo, new RecordItemIndex(1));
            repo.ApplicationUnderTest.AO_Search_Attorney.Click("175;17");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Down}' with focus on 'ApplicationUnderTest.AO_Search_Attorney'.", repo.ApplicationUnderTest.AO_Search_AttorneyInfo, new RecordItemIndex(2));
            repo.ApplicationUnderTest.AO_Search_Attorney.PressKeys("{Down}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 5s to exist. Associated repository item: 'ApplicationUnderTest.Select_Attorney'", repo.ApplicationUnderTest.Select_AttorneyInfo, new ActionTimeout(5000), new RecordItemIndex(3));
            repo.ApplicationUnderTest.Select_AttorneyInfo.WaitForExists(5000);
            
            Report.Log(ReportLevel.Info, "Set value", "Setting attribute TagValue to '$AO_Search_Attorney' on item 'ApplicationUnderTest.AO_Search_Attorney'.", repo.ApplicationUnderTest.AO_Search_AttorneyInfo, new RecordItemIndex(4));
            repo.ApplicationUnderTest.AO_Search_Attorney.Element.SetAttributeValue("TagValue", AO_Search_Attorney);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 1s.", new RecordItemIndex(5));
            Delay.Duration(1000, false);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Return}' with focus on 'ApplicationUnderTest.AO_Search_Attorney'.", repo.ApplicationUnderTest.AO_Search_AttorneyInfo, new RecordItemIndex(6));
            repo.ApplicationUnderTest.AO_Search_Attorney.PressKeys("{Return}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Tab}'.", new RecordItemIndex(7));
            Keyboard.Press("{Tab}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Set value", "Setting attribute TagValue to '$AO_AD_UseType' on item 'ApplicationUnderTest.AO_AD_UseType'.", repo.ApplicationUnderTest.AO_AD_UseTypeInfo, new RecordItemIndex(8));
            repo.ApplicationUnderTest.AO_AD_UseType.Element.SetAttributeValue("TagValue", AO_AD_UseType);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Set value", "Setting attribute TagValue to '$AO_AD_PhoneType' on item 'ApplicationUnderTest.AO_AD_PhoneType'.", repo.ApplicationUnderTest.AO_AD_PhoneTypeInfo, new RecordItemIndex(9));
            repo.ApplicationUnderTest.AO_AD_PhoneType.Element.SetAttributeValue("TagValue", AO_AD_PhoneType);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Set value", "Setting attribute TagValue to '$AO_AD_Source' on item 'ApplicationUnderTest.AO_AD_Source'.", repo.ApplicationUnderTest.AO_AD_SourceInfo, new RecordItemIndex(10));
            repo.ApplicationUnderTest.AO_AD_Source.Element.SetAttributeValue("TagValue", AO_AD_Source);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Tab' Press.", new RecordItemIndex(11));
            Keyboard.Press(System.Windows.Forms.Keys.Tab, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Set value", "Setting attribute TagValue to '$AO_AD_EmailUseType' on item 'ApplicationUnderTest.AO_AD_EmailUseType'.", repo.ApplicationUnderTest.AO_AD_EmailUseTypeInfo, new RecordItemIndex(12));
            repo.ApplicationUnderTest.AO_AD_EmailUseType.Element.SetAttributeValue("TagValue", AO_AD_EmailUseType);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Set value", "Setting attribute TagValue to '$AO_AD_EmailSource' on item 'ApplicationUnderTest.AO_AD_EmailSource'.", repo.ApplicationUnderTest.AO_AD_EmailSourceInfo, new RecordItemIndex(13));
            repo.ApplicationUnderTest.AO_AD_EmailSource.Element.SetAttributeValue("TagValue", AO_AD_EmailSource);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$AO1_Attorney_RepDate' with focus on 'ApplicationUnderTest.AO1_Attorney_RepDate'.", repo.ApplicationUnderTest.AO1_Attorney_RepDateInfo, new RecordItemIndex(14));
            repo.ApplicationUnderTest.AO1_Attorney_RepDate.PressKeys(AO1_Attorney_RepDate);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Tab' Press.", new RecordItemIndex(15));
            Keyboard.Press(System.Windows.Forms.Keys.Tab, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
