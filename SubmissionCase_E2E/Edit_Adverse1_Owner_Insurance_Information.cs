///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace SubmissionCase_E2E
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Edit_Adverse1_Owner_Insurance_Information recording.
    /// </summary>
    [TestModule("c611c948-7f3d-4a64-a4d7-05126aa31389", ModuleType.Recording, 1)]
    public partial class Edit_Adverse1_Owner_Insurance_Information : ITestModule
    {
        /// <summary>
        /// Holds an instance of the SubmissionCase_E2ERepository repository.
        /// </summary>
        public static SubmissionCase_E2ERepository repo = SubmissionCase_E2ERepository.Instance;

        static Edit_Adverse1_Owner_Insurance_Information instance = new Edit_Adverse1_Owner_Insurance_Information();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Edit_Adverse1_Owner_Insurance_Information()
        {
            AO_LI_Company_Name = "";
            Edit_AO_LI_Company_Name = "Edit_AO_LI_Company_Name";
            AO_LI_PolicyNumber = "";
            Edit_AO_LI_PolicyNumber = "Edit_AO_LI_PolicyNumber";
            AO_LI_ClaimNumber = "";
            Edit_AO_LI_ClaimNumber = "Edit_AO_LI_ClaimNumber";
            AO_LI_ContactName = "";
            Edit_AO_LI_ContactName = "Edit_AO_LI_ContactName";
            AO_LI_State = "";
            Edit_AO_LI_State = "DE";
            AO_LI_Address1 = "";
            Edit_AO_LI_Address1 = "Edit_AO_LI_Address1";
            AO_LI_Address2 = "";
            AO_LI_City = "";
            AO_LI_Zip = "";
            AO_LI_PhoneUseType_getValue = "";
            Edit_AO_LI_PhoneUseType_getValue = "Business";
            AO_LI_PhoneType_getValue = "";
            Edit_AO_LI_PhoneType_getValue = "Work";
            AO_LI_PhoneSource_getValue = "";
            Edit_AO_LI_PhoneSource_getValue = "Skip Trace";
            AO_LI_PhoneNumber_getValue = "";
            AO_LI_EmailUseType_getValue = "";
            Edit_AO_LI_EmailUseType_getValue = "Personal";
            AO_LI_EmailSource_getValue = "";
            Edit_AO_LI_EmailSource_getValue = "Skip Trace";
            AO_LI_EmailId_getValue = "";
            Edit_AO_LI_EmailId_getValue = "EditAO1LIEmail@gmail.com";
            Edit_AO_LI_Address2 = "Edit_AO_LI_Address2";
            Edit_AO_LI_City = "Edit_AO_LI_City";
            Edit_AO_LI_Zip = "200042000";
            Edit_AO_LI_PhoneNumber_getValue = "9600095005";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Edit_Adverse1_Owner_Insurance_Information Instance
        {
            get { return instance; }
        }

#region Variables

        string _AO_LI_Company_Name;

        /// <summary>
        /// Gets or sets the value of variable AO_LI_Company_Name.
        /// </summary>
        [TestVariable("e4c5c8b7-2d83-466c-bf65-03676c6ebb18")]
        public string AO_LI_Company_Name
        {
            get { return _AO_LI_Company_Name; }
            set { _AO_LI_Company_Name = value; }
        }

        string _Edit_AO_LI_Company_Name;

        /// <summary>
        /// Gets or sets the value of variable Edit_AO_LI_Company_Name.
        /// </summary>
        [TestVariable("4c69ca5a-7f00-4ded-838c-1c9293a3d2f3")]
        public string Edit_AO_LI_Company_Name
        {
            get { return _Edit_AO_LI_Company_Name; }
            set { _Edit_AO_LI_Company_Name = value; }
        }

        string _AO_LI_PolicyNumber;

        /// <summary>
        /// Gets or sets the value of variable AO_LI_PolicyNumber.
        /// </summary>
        [TestVariable("58c6bf33-87bc-4eae-97fc-5b909887eb49")]
        public string AO_LI_PolicyNumber
        {
            get { return _AO_LI_PolicyNumber; }
            set { _AO_LI_PolicyNumber = value; }
        }

        string _Edit_AO_LI_PolicyNumber;

        /// <summary>
        /// Gets or sets the value of variable Edit_AO_LI_PolicyNumber.
        /// </summary>
        [TestVariable("a6187e65-3d07-4f3b-a4b9-df5efcf0013c")]
        public string Edit_AO_LI_PolicyNumber
        {
            get { return _Edit_AO_LI_PolicyNumber; }
            set { _Edit_AO_LI_PolicyNumber = value; }
        }

        string _AO_LI_ClaimNumber;

        /// <summary>
        /// Gets or sets the value of variable AO_LI_ClaimNumber.
        /// </summary>
        [TestVariable("32d60f5b-09e1-4a67-b920-dfaac4d5af77")]
        public string AO_LI_ClaimNumber
        {
            get { return _AO_LI_ClaimNumber; }
            set { _AO_LI_ClaimNumber = value; }
        }

        string _Edit_AO_LI_ClaimNumber;

        /// <summary>
        /// Gets or sets the value of variable Edit_AO_LI_ClaimNumber.
        /// </summary>
        [TestVariable("46cdc81b-2d27-4ddc-827d-f69f031a4eb5")]
        public string Edit_AO_LI_ClaimNumber
        {
            get { return _Edit_AO_LI_ClaimNumber; }
            set { _Edit_AO_LI_ClaimNumber = value; }
        }

        string _AO_LI_ContactName;

        /// <summary>
        /// Gets or sets the value of variable AO_LI_ContactName.
        /// </summary>
        [TestVariable("d87a05cc-3ac2-4f85-91cb-656093b6d879")]
        public string AO_LI_ContactName
        {
            get { return _AO_LI_ContactName; }
            set { _AO_LI_ContactName = value; }
        }

        string _Edit_AO_LI_ContactName;

        /// <summary>
        /// Gets or sets the value of variable Edit_AO_LI_ContactName.
        /// </summary>
        [TestVariable("18a6851d-8d4b-441c-9fc3-f0594a39b640")]
        public string Edit_AO_LI_ContactName
        {
            get { return _Edit_AO_LI_ContactName; }
            set { _Edit_AO_LI_ContactName = value; }
        }

        string _AO_LI_State;

        /// <summary>
        /// Gets or sets the value of variable AO_LI_State.
        /// </summary>
        [TestVariable("a1c3ce85-9203-46c8-89de-931a1c341b96")]
        public string AO_LI_State
        {
            get { return _AO_LI_State; }
            set { _AO_LI_State = value; }
        }

        string _Edit_AO_LI_State;

        /// <summary>
        /// Gets or sets the value of variable Edit_AO_LI_State.
        /// </summary>
        [TestVariable("189d4965-2719-4721-81bd-2f3ca4246a86")]
        public string Edit_AO_LI_State
        {
            get { return _Edit_AO_LI_State; }
            set { _Edit_AO_LI_State = value; }
        }

        string _AO_LI_Address1;

        /// <summary>
        /// Gets or sets the value of variable AO_LI_Address1.
        /// </summary>
        [TestVariable("fe7f4ef4-06d5-4152-a270-0b0138cfd3c3")]
        public string AO_LI_Address1
        {
            get { return _AO_LI_Address1; }
            set { _AO_LI_Address1 = value; }
        }

        string _Edit_AO_LI_Address1;

        /// <summary>
        /// Gets or sets the value of variable Edit_AO_LI_Address1.
        /// </summary>
        [TestVariable("7b1c44cd-750e-4283-856c-048ba3fb3e6f")]
        public string Edit_AO_LI_Address1
        {
            get { return _Edit_AO_LI_Address1; }
            set { _Edit_AO_LI_Address1 = value; }
        }

        string _AO_LI_Address2;

        /// <summary>
        /// Gets or sets the value of variable AO_LI_Address2.
        /// </summary>
        [TestVariable("d34a69b1-0c72-4d20-91e2-7a181a6149cb")]
        public string AO_LI_Address2
        {
            get { return _AO_LI_Address2; }
            set { _AO_LI_Address2 = value; }
        }

        string _AO_LI_City;

        /// <summary>
        /// Gets or sets the value of variable AO_LI_City.
        /// </summary>
        [TestVariable("a2b958aa-5ad3-4008-b29e-a2f8475f1f76")]
        public string AO_LI_City
        {
            get { return _AO_LI_City; }
            set { _AO_LI_City = value; }
        }

        string _AO_LI_Zip;

        /// <summary>
        /// Gets or sets the value of variable AO_LI_Zip.
        /// </summary>
        [TestVariable("16ba01ea-314b-499f-9091-a65df743e863")]
        public string AO_LI_Zip
        {
            get { return _AO_LI_Zip; }
            set { _AO_LI_Zip = value; }
        }

        string _AO_LI_PhoneUseType_getValue;

        /// <summary>
        /// Gets or sets the value of variable AO_LI_PhoneUseType_getValue.
        /// </summary>
        [TestVariable("024faf84-4982-4605-8254-f6d78d8fddd0")]
        public string AO_LI_PhoneUseType_getValue
        {
            get { return _AO_LI_PhoneUseType_getValue; }
            set { _AO_LI_PhoneUseType_getValue = value; }
        }

        string _Edit_AO_LI_PhoneUseType_getValue;

        /// <summary>
        /// Gets or sets the value of variable Edit_AO_LI_PhoneUseType_getValue.
        /// </summary>
        [TestVariable("347827fd-29c6-47fe-806a-7e326439ff2b")]
        public string Edit_AO_LI_PhoneUseType_getValue
        {
            get { return _Edit_AO_LI_PhoneUseType_getValue; }
            set { _Edit_AO_LI_PhoneUseType_getValue = value; }
        }

        string _AO_LI_PhoneType_getValue;

        /// <summary>
        /// Gets or sets the value of variable AO_LI_PhoneType_getValue.
        /// </summary>
        [TestVariable("ce9de0fe-137a-46e7-b513-dedfcd002287")]
        public string AO_LI_PhoneType_getValue
        {
            get { return _AO_LI_PhoneType_getValue; }
            set { _AO_LI_PhoneType_getValue = value; }
        }

        string _Edit_AO_LI_PhoneType_getValue;

        /// <summary>
        /// Gets or sets the value of variable Edit_AO_LI_PhoneType_getValue.
        /// </summary>
        [TestVariable("6719ab86-5e31-4818-8b6b-8627c6bbb614")]
        public string Edit_AO_LI_PhoneType_getValue
        {
            get { return _Edit_AO_LI_PhoneType_getValue; }
            set { _Edit_AO_LI_PhoneType_getValue = value; }
        }

        string _AO_LI_PhoneSource_getValue;

        /// <summary>
        /// Gets or sets the value of variable AO_LI_PhoneSource_getValue.
        /// </summary>
        [TestVariable("6c6c7700-fdb3-4b2b-93d4-9434813d9ef8")]
        public string AO_LI_PhoneSource_getValue
        {
            get { return _AO_LI_PhoneSource_getValue; }
            set { _AO_LI_PhoneSource_getValue = value; }
        }

        string _Edit_AO_LI_PhoneSource_getValue;

        /// <summary>
        /// Gets or sets the value of variable Edit_AO_LI_PhoneSource_getValue.
        /// </summary>
        [TestVariable("8b0c5b59-4ce3-42ed-90cc-69c96cfd8eb0")]
        public string Edit_AO_LI_PhoneSource_getValue
        {
            get { return _Edit_AO_LI_PhoneSource_getValue; }
            set { _Edit_AO_LI_PhoneSource_getValue = value; }
        }

        string _AO_LI_PhoneNumber_getValue;

        /// <summary>
        /// Gets or sets the value of variable AO_LI_PhoneNumber_getValue.
        /// </summary>
        [TestVariable("90032a86-0878-4a8b-a931-9f8c4e298dfd")]
        public string AO_LI_PhoneNumber_getValue
        {
            get { return _AO_LI_PhoneNumber_getValue; }
            set { _AO_LI_PhoneNumber_getValue = value; }
        }

        string _AO_LI_EmailUseType_getValue;

        /// <summary>
        /// Gets or sets the value of variable AO_LI_EmailUseType_getValue.
        /// </summary>
        [TestVariable("9a3029ff-3135-4a82-8200-33e98f85c5b2")]
        public string AO_LI_EmailUseType_getValue
        {
            get { return _AO_LI_EmailUseType_getValue; }
            set { _AO_LI_EmailUseType_getValue = value; }
        }

        string _Edit_AO_LI_EmailUseType_getValue;

        /// <summary>
        /// Gets or sets the value of variable Edit_AO_LI_EmailUseType_getValue.
        /// </summary>
        [TestVariable("4b2b89a3-fb26-400d-87e2-abadc4ec51b2")]
        public string Edit_AO_LI_EmailUseType_getValue
        {
            get { return _Edit_AO_LI_EmailUseType_getValue; }
            set { _Edit_AO_LI_EmailUseType_getValue = value; }
        }

        string _AO_LI_EmailSource_getValue;

        /// <summary>
        /// Gets or sets the value of variable AO_LI_EmailSource_getValue.
        /// </summary>
        [TestVariable("e595473b-3535-49e8-a230-cb5ee8d57d0b")]
        public string AO_LI_EmailSource_getValue
        {
            get { return _AO_LI_EmailSource_getValue; }
            set { _AO_LI_EmailSource_getValue = value; }
        }

        string _Edit_AO_LI_EmailSource_getValue;

        /// <summary>
        /// Gets or sets the value of variable Edit_AO_LI_EmailSource_getValue.
        /// </summary>
        [TestVariable("5ca27673-66d7-4adb-bf1f-c8ebc3ae0933")]
        public string Edit_AO_LI_EmailSource_getValue
        {
            get { return _Edit_AO_LI_EmailSource_getValue; }
            set { _Edit_AO_LI_EmailSource_getValue = value; }
        }

        string _AO_LI_EmailId_getValue;

        /// <summary>
        /// Gets or sets the value of variable AO_LI_EmailId_getValue.
        /// </summary>
        [TestVariable("a62e767c-b34b-4e1a-91f7-bbf2f14f0522")]
        public string AO_LI_EmailId_getValue
        {
            get { return _AO_LI_EmailId_getValue; }
            set { _AO_LI_EmailId_getValue = value; }
        }

        string _Edit_AO_LI_EmailId_getValue;

        /// <summary>
        /// Gets or sets the value of variable Edit_AO_LI_EmailId_getValue.
        /// </summary>
        [TestVariable("f4424f32-f992-40fc-b918-f0b3795cb2ff")]
        public string Edit_AO_LI_EmailId_getValue
        {
            get { return _Edit_AO_LI_EmailId_getValue; }
            set { _Edit_AO_LI_EmailId_getValue = value; }
        }

        string _Edit_AO_LI_Address2;

        /// <summary>
        /// Gets or sets the value of variable Edit_AO_LI_Address2.
        /// </summary>
        [TestVariable("47793034-5087-4e50-9765-f0930256cff3")]
        public string Edit_AO_LI_Address2
        {
            get { return _Edit_AO_LI_Address2; }
            set { _Edit_AO_LI_Address2 = value; }
        }

        string _Edit_AO_LI_City;

        /// <summary>
        /// Gets or sets the value of variable Edit_AO_LI_City.
        /// </summary>
        [TestVariable("546ed05f-b06d-4538-b711-e6b7270da452")]
        public string Edit_AO_LI_City
        {
            get { return _Edit_AO_LI_City; }
            set { _Edit_AO_LI_City = value; }
        }

        string _Edit_AO_LI_Zip;

        /// <summary>
        /// Gets or sets the value of variable Edit_AO_LI_Zip.
        /// </summary>
        [TestVariable("00293d12-aa04-4180-a0d6-d25962d5b657")]
        public string Edit_AO_LI_Zip
        {
            get { return _Edit_AO_LI_Zip; }
            set { _Edit_AO_LI_Zip = value; }
        }

        string _Edit_AO_LI_PhoneNumber_getValue;

        /// <summary>
        /// Gets or sets the value of variable Edit_AO_LI_PhoneNumber_getValue.
        /// </summary>
        [TestVariable("bbe231dd-5b73-4971-8fd3-b339e16240d9")]
        public string Edit_AO_LI_PhoneNumber_getValue
        {
            get { return _Edit_AO_LI_PhoneNumber_getValue; }
            set { _Edit_AO_LI_PhoneNumber_getValue = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Delay", "Waiting for 5s.", new RecordItemIndex(0));
            Delay.Duration(5000, false);
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'TagValue' from item 'ApplicationUnderTest.AO_LI_CompanyName' and assigning its value to variable 'AO_LI_Company_Name'.", repo.ApplicationUnderTest.AO_LI_CompanyNameInfo, new RecordItemIndex(1));
            AO_LI_Company_Name = repo.ApplicationUnderTest.AO_LI_CompanyName.Element.GetAttributeValueText("TagValue");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$AO_LI_Company_Name) on item 'ApplicationUnderTest.AO_LI_CompanyName'.", repo.ApplicationUnderTest.AO_LI_CompanyNameInfo, new RecordItemIndex(2));
            Validate.AttributeEqual(repo.ApplicationUnderTest.AO_LI_CompanyNameInfo, "TagValue", AO_LI_Company_Name);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "User", AO_LI_Company_Name, new RecordItemIndex(3));
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Ctrl+A' Press.", new RecordItemIndex(4));
            Keyboard.Press(System.Windows.Forms.Keys.A | System.Windows.Forms.Keys.Control, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Delete' Press.", new RecordItemIndex(5));
            Keyboard.Press(System.Windows.Forms.Keys.Delete, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Edit_AO_LI_Company_Name' with focus on 'ApplicationUnderTest.AO_LI_CompanyName'.", repo.ApplicationUnderTest.AO_LI_CompanyNameInfo, new RecordItemIndex(6));
            repo.ApplicationUnderTest.AO_LI_CompanyName.PressKeys(Edit_AO_LI_Company_Name);
            Delay.Milliseconds(100);
            
            //Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Checked='True') on item 'ApplicationUnderTest.OAT_IL_RentalCompany'.", repo.ApplicationUnderTest.OAT_IL_RentalCompanyInfo, new RecordItemIndex(7));
            //Validate.AttributeEqual(repo.ApplicationUnderTest.OAT_IL_RentalCompanyInfo, "Checked", "True");
            //Delay.Milliseconds(100);
            
            //Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'TagValue' from item 'ApplicationUnderTest.AO_LI_PolicyNumber' and assigning its value to variable 'AO_LI_PolicyNumber'.", repo.ApplicationUnderTest.AO_LI_PolicyNumberInfo, new RecordItemIndex(8));
            //AO_LI_PolicyNumber = repo.ApplicationUnderTest.AO_LI_PolicyNumber.Element.GetAttributeValueText("TagValue");
            //Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$AO_LI_PolicyNumber) on item 'ApplicationUnderTest.AO_LI_PolicyNumber'.", repo.ApplicationUnderTest.AO_LI_PolicyNumberInfo, new RecordItemIndex(9));
            Validate.AttributeEqual(repo.ApplicationUnderTest.AO_LI_PolicyNumberInfo, "TagValue", AO_LI_PolicyNumber);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "User", AO_LI_PolicyNumber, new RecordItemIndex(10));
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Ctrl+A' Press.", new RecordItemIndex(11));
            Keyboard.Press(System.Windows.Forms.Keys.A | System.Windows.Forms.Keys.Control, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Delete' Press.", new RecordItemIndex(12));
            Keyboard.Press(System.Windows.Forms.Keys.Delete, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Edit_AO_LI_PolicyNumber' with focus on 'ApplicationUnderTest.AO_LI_PolicyNumber'.", repo.ApplicationUnderTest.AO_LI_PolicyNumberInfo, new RecordItemIndex(13));
            repo.ApplicationUnderTest.AO_LI_PolicyNumber.PressKeys(Edit_AO_LI_PolicyNumber);
            Delay.Milliseconds(100);
            
            //Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'TagValue' from item 'ApplicationUnderTest.AO_LI_ClaimNumber' and assigning its value to variable 'AO_LI_ClaimNumber'.", repo.ApplicationUnderTest.AO_LI_ClaimNumberInfo, new RecordItemIndex(14));
            //AO_LI_ClaimNumber = repo.ApplicationUnderTest.AO_LI_ClaimNumber.Element.GetAttributeValueText("TagValue");
            //Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$AO_LI_ClaimNumber) on item 'ApplicationUnderTest.AO_LI_ClaimNumber'.", repo.ApplicationUnderTest.AO_LI_ClaimNumberInfo, new RecordItemIndex(15));
            Validate.AttributeEqual(repo.ApplicationUnderTest.AO_LI_ClaimNumberInfo, "TagValue", AO_LI_ClaimNumber);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "User", AO_LI_ClaimNumber, new RecordItemIndex(16));
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Ctrl+A' Press.", new RecordItemIndex(17));
            Keyboard.Press(System.Windows.Forms.Keys.A | System.Windows.Forms.Keys.Control, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Delete' Press.", new RecordItemIndex(18));
            Keyboard.Press(System.Windows.Forms.Keys.Delete, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Edit_AO_LI_ClaimNumber' with focus on 'ApplicationUnderTest.AO_LI_ClaimNumber'.", repo.ApplicationUnderTest.AO_LI_ClaimNumberInfo, new RecordItemIndex(19));
            repo.ApplicationUnderTest.AO_LI_ClaimNumber.PressKeys(Edit_AO_LI_ClaimNumber);
            Delay.Milliseconds(100);
            
            //Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'TagValue' from item 'ApplicationUnderTest.AO_LI_ContactName' and assigning its value to variable 'AO_LI_ContactName'.", repo.ApplicationUnderTest.AO_LI_ContactNameInfo, new RecordItemIndex(20));
            //AO_LI_ContactName = repo.ApplicationUnderTest.AO_LI_ContactName.Element.GetAttributeValueText("TagValue");
            //Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$AO_LI_ContactName) on item 'ApplicationUnderTest.AO_LI_ContactName'.", repo.ApplicationUnderTest.AO_LI_ContactNameInfo, new RecordItemIndex(21));
            Validate.AttributeEqual(repo.ApplicationUnderTest.AO_LI_ContactNameInfo, "TagValue", AO_LI_ContactName);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "User", AO_LI_ContactName, new RecordItemIndex(22));
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Ctrl+A' Press.", new RecordItemIndex(23));
            Keyboard.Press(System.Windows.Forms.Keys.A | System.Windows.Forms.Keys.Control, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Delete' Press.", new RecordItemIndex(24));
            Keyboard.Press(System.Windows.Forms.Keys.Delete, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Edit_AO_LI_ContactName' with focus on 'ApplicationUnderTest.AO_LI_ContactName'.", repo.ApplicationUnderTest.AO_LI_ContactNameInfo, new RecordItemIndex(25));
            repo.ApplicationUnderTest.AO_LI_ContactName.PressKeys(Edit_AO_LI_ContactName);
            Delay.Milliseconds(100);
            
            //Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'TagValue' from item 'ApplicationUnderTest.AO_LI_State' and assigning its value to variable 'AO_LI_State'.", repo.ApplicationUnderTest.AO_LI_StateInfo, new RecordItemIndex(26));
            //AO_LI_State = repo.ApplicationUnderTest.AO_LI_State.Element.GetAttributeValueText("TagValue");
            //Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$AO_LI_State) on item 'ApplicationUnderTest.AO_LI_State'.", repo.ApplicationUnderTest.AO_LI_StateInfo, new RecordItemIndex(27));
            Validate.AttributeEqual(repo.ApplicationUnderTest.AO_LI_StateInfo, "TagValue", AO_LI_State);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "User", AO_LI_State, new RecordItemIndex(28));
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Ctrl+A' Press.", new RecordItemIndex(29));
            Keyboard.Press(System.Windows.Forms.Keys.A | System.Windows.Forms.Keys.Control, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Delete' Press.", new RecordItemIndex(30));
            Keyboard.Press(System.Windows.Forms.Keys.Delete, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Edit_AO_LI_State' with focus on 'ApplicationUnderTest.AO_LI_State'.", repo.ApplicationUnderTest.AO_LI_StateInfo, new RecordItemIndex(31));
            repo.ApplicationUnderTest.AO_LI_State.PressKeys(Edit_AO_LI_State);
            Delay.Milliseconds(100);
            
            //Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'TagValue' from item 'ApplicationUnderTest.AO_LI_Address1' and assigning its value to variable 'AO_LI_Address1'.", repo.ApplicationUnderTest.AO_LI_Address1Info, new RecordItemIndex(32));
            //AO_LI_Address1 = repo.ApplicationUnderTest.AO_LI_Address1.Element.GetAttributeValueText("TagValue");
            //Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$AO_LI_Address1) on item 'ApplicationUnderTest.AO_LI_Address1'.", repo.ApplicationUnderTest.AO_LI_Address1Info, new RecordItemIndex(33));
            Validate.AttributeEqual(repo.ApplicationUnderTest.AO_LI_Address1Info, "TagValue", AO_LI_Address1);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "User", AO_LI_Address1, new RecordItemIndex(34));
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Ctrl+A' Press.", new RecordItemIndex(35));
            Keyboard.Press(System.Windows.Forms.Keys.A | System.Windows.Forms.Keys.Control, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Delete' Press.", new RecordItemIndex(36));
            Keyboard.Press(System.Windows.Forms.Keys.Delete, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Edit_AO_LI_Address1' with focus on 'ApplicationUnderTest.AO_LI_Address1'.", repo.ApplicationUnderTest.AO_LI_Address1Info, new RecordItemIndex(37));
            repo.ApplicationUnderTest.AO_LI_Address1.PressKeys(Edit_AO_LI_Address1);
            Delay.Milliseconds(100);
            
            //Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'TagValue' from item 'ApplicationUnderTest.AO_LI_Address2' and assigning its value to variable 'AO_LI_Address2'.", repo.ApplicationUnderTest.AO_LI_Address2Info, new RecordItemIndex(38));
            //AO_LI_Address2 = repo.ApplicationUnderTest.AO_LI_Address2.Element.GetAttributeValueText("TagValue");
            //Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$AO_LI_Address2) on item 'ApplicationUnderTest.AO_LI_Address2'.", repo.ApplicationUnderTest.AO_LI_Address2Info, new RecordItemIndex(39));
            Validate.AttributeEqual(repo.ApplicationUnderTest.AO_LI_Address2Info, "TagValue", AO_LI_Address2);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "User", AO_LI_Address2, new RecordItemIndex(40));
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Ctrl+A' Press.", new RecordItemIndex(41));
            Keyboard.Press(System.Windows.Forms.Keys.A | System.Windows.Forms.Keys.Control, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Delete' Press.", new RecordItemIndex(42));
            Keyboard.Press(System.Windows.Forms.Keys.Delete, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '' with focus on 'ApplicationUnderTest.AO_LI_Address2'.", repo.ApplicationUnderTest.AO_LI_Address2Info, new RecordItemIndex(43));
            repo.ApplicationUnderTest.AO_LI_Address2.PressKeys("");
            Delay.Milliseconds(100);
            
            //Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'TagValue' from item 'ApplicationUnderTest.AO_LI_City' and assigning its value to variable 'AO_LI_City'.", repo.ApplicationUnderTest.AO_LI_CityInfo, new RecordItemIndex(44));
            //AO_LI_City = repo.ApplicationUnderTest.AO_LI_City.Element.GetAttributeValueText("TagValue");
            //Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$AO_LI_City) on item 'ApplicationUnderTest.AO_LI_City'.", repo.ApplicationUnderTest.AO_LI_CityInfo, new RecordItemIndex(45));
            Validate.AttributeEqual(repo.ApplicationUnderTest.AO_LI_CityInfo, "TagValue", AO_LI_City);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "User", AO_LI_City, new RecordItemIndex(46));
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Ctrl+A' Press.", new RecordItemIndex(47));
            Keyboard.Press(System.Windows.Forms.Keys.A | System.Windows.Forms.Keys.Control, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Delete' Press.", new RecordItemIndex(48));
            Keyboard.Press(System.Windows.Forms.Keys.Delete, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '' with focus on 'ApplicationUnderTest.AO_LI_City'.", repo.ApplicationUnderTest.AO_LI_CityInfo, new RecordItemIndex(49));
            repo.ApplicationUnderTest.AO_LI_City.PressKeys("");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'TagValue' from item 'ApplicationUnderTest.AO_LI_Zip' and assigning its value to variable 'AO_LI_Zip'.", repo.ApplicationUnderTest.AO_LI_ZipInfo, new RecordItemIndex(50));
            AO_LI_Zip = repo.ApplicationUnderTest.AO_LI_Zip.Element.GetAttributeValueText("TagValue");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$AO_LI_Zip) on item 'ApplicationUnderTest.AO_LI_Zip'.", repo.ApplicationUnderTest.AO_LI_ZipInfo, new RecordItemIndex(51));
            Validate.AttributeEqual(repo.ApplicationUnderTest.AO_LI_ZipInfo, "TagValue", AO_LI_Zip);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "User", AO_LI_Zip, new RecordItemIndex(52));
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Ctrl+A' Press.", new RecordItemIndex(53));
            Keyboard.Press(System.Windows.Forms.Keys.A | System.Windows.Forms.Keys.Control, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Delete' Press.", new RecordItemIndex(54));
            Keyboard.Press(System.Windows.Forms.Keys.Delete, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '' with focus on 'ApplicationUnderTest.AO_LI_Zip'.", repo.ApplicationUnderTest.AO_LI_ZipInfo, new RecordItemIndex(55));
            repo.ApplicationUnderTest.AO_LI_Zip.PressKeys("");
            Delay.Milliseconds(100);
            
            Report.Screenshot(ReportLevel.Info, "User", "", repo.PegaCaseManagerPortalGoogleChrome.Screenshot_Window, false, new RecordItemIndex(56));
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'TagValue' from item 'ApplicationUnderTest.AO_LI_PhoneUseType' and assigning its value to variable 'AO_LI_PhoneUseType_getValue'.", repo.ApplicationUnderTest.AO_LI_PhoneUseTypeInfo, new RecordItemIndex(57));
            AO_LI_PhoneUseType_getValue = repo.ApplicationUnderTest.AO_LI_PhoneUseType.Element.GetAttributeValueText("TagValue");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "User", AO_LI_PhoneUseType_getValue, new RecordItemIndex(58));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$AO_LI_PhoneUseType_getValue) on item 'ApplicationUnderTest.AO_LI_PhoneUseType'.", repo.ApplicationUnderTest.AO_LI_PhoneUseTypeInfo, new RecordItemIndex(59));
            Validate.AttributeEqual(repo.ApplicationUnderTest.AO_LI_PhoneUseTypeInfo, "TagValue", AO_LI_PhoneUseType_getValue);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Ctrl+A' Press.", new RecordItemIndex(60));
            Keyboard.Press(System.Windows.Forms.Keys.A | System.Windows.Forms.Keys.Control, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Delete' Press.", new RecordItemIndex(61));
            Keyboard.Press(System.Windows.Forms.Keys.Delete, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Set value", "Setting attribute TagValue to '$Edit_AO_LI_PhoneUseType_getValue' on item 'ApplicationUnderTest.AO_LI_PhoneUseType'.", repo.ApplicationUnderTest.AO_LI_PhoneUseTypeInfo, new RecordItemIndex(62));
            repo.ApplicationUnderTest.AO_LI_PhoneUseType.Element.SetAttributeValue("TagValue", Edit_AO_LI_PhoneUseType_getValue);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'TagValue' from item 'ApplicationUnderTest.AO_LI_PhoneType' and assigning its value to variable 'AO_LI_PhoneType_getValue'.", repo.ApplicationUnderTest.AO_LI_PhoneTypeInfo, new RecordItemIndex(63));
            AO_LI_PhoneType_getValue = repo.ApplicationUnderTest.AO_LI_PhoneType.Element.GetAttributeValueText("TagValue");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "User", AO_LI_PhoneType_getValue, new RecordItemIndex(64));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$AO_LI_PhoneType_getValue) on item 'ApplicationUnderTest.AO_LI_PhoneType'.", repo.ApplicationUnderTest.AO_LI_PhoneTypeInfo, new RecordItemIndex(65));
            Validate.AttributeEqual(repo.ApplicationUnderTest.AO_LI_PhoneTypeInfo, "TagValue", AO_LI_PhoneType_getValue);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Ctrl+A' Press.", new RecordItemIndex(66));
            Keyboard.Press(System.Windows.Forms.Keys.A | System.Windows.Forms.Keys.Control, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Delete' Press.", new RecordItemIndex(67));
            Keyboard.Press(System.Windows.Forms.Keys.Delete, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Set value", "Setting attribute TagValue to '$Edit_AO_LI_PhoneType_getValue' on item 'ApplicationUnderTest.AO_LI_PhoneType'.", repo.ApplicationUnderTest.AO_LI_PhoneTypeInfo, new RecordItemIndex(68));
            repo.ApplicationUnderTest.AO_LI_PhoneType.Element.SetAttributeValue("TagValue", Edit_AO_LI_PhoneType_getValue);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'TagValue' from item 'ApplicationUnderTest.AO_LI_PhoneSource' and assigning its value to variable 'AO_LI_PhoneSource_getValue'.", repo.ApplicationUnderTest.AO_LI_PhoneSourceInfo, new RecordItemIndex(69));
            AO_LI_PhoneSource_getValue = repo.ApplicationUnderTest.AO_LI_PhoneSource.Element.GetAttributeValueText("TagValue");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "User", AO_LI_PhoneSource_getValue, new RecordItemIndex(70));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$AO_LI_PhoneSource_getValue) on item 'ApplicationUnderTest.AO_LI_PhoneSource'.", repo.ApplicationUnderTest.AO_LI_PhoneSourceInfo, new RecordItemIndex(71));
            Validate.AttributeEqual(repo.ApplicationUnderTest.AO_LI_PhoneSourceInfo, "TagValue", AO_LI_PhoneSource_getValue);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Ctrl+A' Press.", new RecordItemIndex(72));
            Keyboard.Press(System.Windows.Forms.Keys.A | System.Windows.Forms.Keys.Control, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Delete' Press.", new RecordItemIndex(73));
            Keyboard.Press(System.Windows.Forms.Keys.Delete, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Set value", "Setting attribute TagValue to '$Edit_AO_LI_PhoneSource_getValue' on item 'ApplicationUnderTest.AO_LI_PhoneSource'.", repo.ApplicationUnderTest.AO_LI_PhoneSourceInfo, new RecordItemIndex(74));
            repo.ApplicationUnderTest.AO_LI_PhoneSource.Element.SetAttributeValue("TagValue", Edit_AO_LI_PhoneSource_getValue);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'TagValue' from item 'ApplicationUnderTest.AO_LI_PhoneNumber' and assigning its value to variable 'AO_LI_PhoneNumber_getValue'.", repo.ApplicationUnderTest.AO_LI_PhoneNumberInfo, new RecordItemIndex(75));
            AO_LI_PhoneNumber_getValue = repo.ApplicationUnderTest.AO_LI_PhoneNumber.Element.GetAttributeValueText("TagValue");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "User", AO_LI_PhoneNumber_getValue, new RecordItemIndex(76));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$AO_LI_PhoneNumber_getValue) on item 'ApplicationUnderTest.AO_LI_PhoneNumber'.", repo.ApplicationUnderTest.AO_LI_PhoneNumberInfo, new RecordItemIndex(77));
            Validate.AttributeEqual(repo.ApplicationUnderTest.AO_LI_PhoneNumberInfo, "TagValue", AO_LI_PhoneNumber_getValue);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Ctrl+A' Press.", new RecordItemIndex(78));
            Keyboard.Press(System.Windows.Forms.Keys.A | System.Windows.Forms.Keys.Control, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Delete' Press.", new RecordItemIndex(79));
            Keyboard.Press(System.Windows.Forms.Keys.Delete, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '' with focus on 'ApplicationUnderTest.AO_LI_PhoneNumber'.", repo.ApplicationUnderTest.AO_LI_PhoneNumberInfo, new RecordItemIndex(80));
            repo.ApplicationUnderTest.AO_LI_PhoneNumber.PressKeys("");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'TagValue' from item 'ApplicationUnderTest.AO_LI_EmailUseType' and assigning its value to variable 'AO_LI_EmailUseType_getValue'.", repo.ApplicationUnderTest.AO_LI_EmailUseTypeInfo, new RecordItemIndex(81));
            AO_LI_EmailUseType_getValue = repo.ApplicationUnderTest.AO_LI_EmailUseType.Element.GetAttributeValueText("TagValue");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "User", AO_LI_EmailUseType_getValue, new RecordItemIndex(82));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$AO_LI_EmailUseType_getValue) on item 'ApplicationUnderTest.AO_LI_EmailUseType'.", repo.ApplicationUnderTest.AO_LI_EmailUseTypeInfo, new RecordItemIndex(83));
            Validate.AttributeEqual(repo.ApplicationUnderTest.AO_LI_EmailUseTypeInfo, "TagValue", AO_LI_EmailUseType_getValue);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Ctrl+A' Press.", new RecordItemIndex(84));
            Keyboard.Press(System.Windows.Forms.Keys.A | System.Windows.Forms.Keys.Control, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Delete' Press.", new RecordItemIndex(85));
            Keyboard.Press(System.Windows.Forms.Keys.Delete, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Set value", "Setting attribute TagValue to '$Edit_AO_LI_EmailUseType_getValue' on item 'ApplicationUnderTest.AO_LI_EmailUseType'.", repo.ApplicationUnderTest.AO_LI_EmailUseTypeInfo, new RecordItemIndex(86));
            repo.ApplicationUnderTest.AO_LI_EmailUseType.Element.SetAttributeValue("TagValue", Edit_AO_LI_EmailUseType_getValue);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'TagValue' from item 'ApplicationUnderTest.AO_LI_EmailSource' and assigning its value to variable 'AO_LI_EmailSource_getValue'.", repo.ApplicationUnderTest.AO_LI_EmailSourceInfo, new RecordItemIndex(87));
            AO_LI_EmailSource_getValue = repo.ApplicationUnderTest.AO_LI_EmailSource.Element.GetAttributeValueText("TagValue");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "User", AO_LI_EmailSource_getValue, new RecordItemIndex(88));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$AO_LI_EmailSource_getValue) on item 'ApplicationUnderTest.AO_LI_EmailSource'.", repo.ApplicationUnderTest.AO_LI_EmailSourceInfo, new RecordItemIndex(89));
            Validate.AttributeEqual(repo.ApplicationUnderTest.AO_LI_EmailSourceInfo, "TagValue", AO_LI_EmailSource_getValue);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Ctrl+A' Press.", new RecordItemIndex(90));
            Keyboard.Press(System.Windows.Forms.Keys.A | System.Windows.Forms.Keys.Control, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Delete' Press.", new RecordItemIndex(91));
            Keyboard.Press(System.Windows.Forms.Keys.Delete, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Set value", "Setting attribute TagValue to '$Edit_AO_LI_EmailSource_getValue' on item 'ApplicationUnderTest.AO_LI_EmailSource'.", repo.ApplicationUnderTest.AO_LI_EmailSourceInfo, new RecordItemIndex(92));
            repo.ApplicationUnderTest.AO_LI_EmailSource.Element.SetAttributeValue("TagValue", Edit_AO_LI_EmailSource_getValue);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'TagValue' from item 'ApplicationUnderTest.AO_LI_EmailId' and assigning its value to variable 'AO_LI_EmailId_getValue'.", repo.ApplicationUnderTest.AO_LI_EmailIdInfo, new RecordItemIndex(93));
            AO_LI_EmailId_getValue = repo.ApplicationUnderTest.AO_LI_EmailId.Element.GetAttributeValueText("TagValue");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "User", AO_LI_EmailId_getValue, new RecordItemIndex(94));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$AO_LI_EmailId_getValue) on item 'ApplicationUnderTest.AO_LI_EmailId'.", repo.ApplicationUnderTest.AO_LI_EmailIdInfo, new RecordItemIndex(95));
            Validate.AttributeEqual(repo.ApplicationUnderTest.AO_LI_EmailIdInfo, "TagValue", AO_LI_EmailId_getValue);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Ctrl+A' Press.", new RecordItemIndex(96));
            Keyboard.Press(System.Windows.Forms.Keys.A | System.Windows.Forms.Keys.Control, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Delete' Press.", new RecordItemIndex(97));
            Keyboard.Press(System.Windows.Forms.Keys.Delete, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Edit_AO_LI_EmailId_getValue' with focus on 'ApplicationUnderTest.AO_LI_EmailId'.", repo.ApplicationUnderTest.AO_LI_EmailIdInfo, new RecordItemIndex(98));
            repo.ApplicationUnderTest.AO_LI_EmailId.PressKeys(Edit_AO_LI_EmailId_getValue);
            Delay.Milliseconds(100);
            
            Report.Screenshot(ReportLevel.Info, "User", "", repo.PegaCaseManagerPortalGoogleChrome.Screenshot_Window, false, new RecordItemIndex(99));
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.Save_Button' at 6;8.", repo.ApplicationUnderTest.Save_ButtonInfo, new RecordItemIndex(100));
            repo.ApplicationUnderTest.Save_Button.Click("6;8");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (InnerText=$Edit_AO_LI_Company_Name) on item 'ApplicationUnderTest.AO_LI_CompanyName'.", repo.ApplicationUnderTest.AO_LI_CompanyNameInfo, new RecordItemIndex(101));
            Validate.AttributeEqual(repo.ApplicationUnderTest.AO_LI_CompanyNameInfo, "InnerText", Edit_AO_LI_Company_Name);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "User", Edit_AO_LI_Company_Name, new RecordItemIndex(102));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (InnerText=$Edit_AO_LI_PolicyNumber) on item 'ApplicationUnderTest.AO_LI_PolicyNumber'.", repo.ApplicationUnderTest.AO_LI_PolicyNumberInfo, new RecordItemIndex(103));
            Validate.AttributeEqual(repo.ApplicationUnderTest.AO_LI_PolicyNumberInfo, "InnerText", Edit_AO_LI_PolicyNumber);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "User", Edit_AO_LI_PolicyNumber, new RecordItemIndex(104));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (InnerText=$Edit_AO_LI_ClaimNumber) on item 'ApplicationUnderTest.AO_LI_ClaimNumber'.", repo.ApplicationUnderTest.AO_LI_ClaimNumberInfo, new RecordItemIndex(105));
            Validate.AttributeEqual(repo.ApplicationUnderTest.AO_LI_ClaimNumberInfo, "InnerText", Edit_AO_LI_ClaimNumber);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "User", Edit_AO_LI_ClaimNumber, new RecordItemIndex(106));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (InnerText=$Edit_AO_LI_ContactName) on item 'ApplicationUnderTest.AO_LI_ContactName'.", repo.ApplicationUnderTest.AO_LI_ContactNameInfo, new RecordItemIndex(107));
            Validate.AttributeEqual(repo.ApplicationUnderTest.AO_LI_ContactNameInfo, "InnerText", Edit_AO_LI_ContactName);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "User", Edit_AO_LI_ContactName, new RecordItemIndex(108));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (InnerText=$Edit_AO_LI_State) on item 'ApplicationUnderTest.AO_LI_State'.", repo.ApplicationUnderTest.AO_LI_StateInfo, new RecordItemIndex(109));
            Validate.AttributeEqual(repo.ApplicationUnderTest.AO_LI_StateInfo, "InnerText", Edit_AO_LI_State);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "User", Edit_AO_LI_State, new RecordItemIndex(110));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (InnerText=$Edit_AO_LI_Address1) on item 'ApplicationUnderTest.AO_LI_Address1'.", repo.ApplicationUnderTest.AO_LI_Address1Info, new RecordItemIndex(111));
            Validate.AttributeEqual(repo.ApplicationUnderTest.AO_LI_Address1Info, "InnerText", Edit_AO_LI_Address1);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "User", Edit_AO_LI_Address1, new RecordItemIndex(112));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (InnerText=$Edit_AO_LI_Address2) on item 'ApplicationUnderTest.AO_LI_Address2'.", repo.ApplicationUnderTest.AO_LI_Address2Info, new RecordItemIndex(113));
            Validate.AttributeEqual(repo.ApplicationUnderTest.AO_LI_Address2Info, "InnerText", Edit_AO_LI_Address2);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "User", Edit_AO_LI_Address2, new RecordItemIndex(114));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (InnerText=$Edit_AO_LI_City) on item 'ApplicationUnderTest.AO_LI_City'.", repo.ApplicationUnderTest.AO_LI_CityInfo, new RecordItemIndex(115));
            Validate.AttributeEqual(repo.ApplicationUnderTest.AO_LI_CityInfo, "InnerText", Edit_AO_LI_City);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "User", Edit_AO_LI_City, new RecordItemIndex(116));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (InnerText=$Edit_AO_LI_Zip) on item 'ApplicationUnderTest.AO_LI_Zip'.", repo.ApplicationUnderTest.AO_LI_ZipInfo, new RecordItemIndex(117));
            Validate.AttributeEqual(repo.ApplicationUnderTest.AO_LI_ZipInfo, "InnerText", Edit_AO_LI_Zip);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "User", Edit_AO_LI_Zip, new RecordItemIndex(118));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (InnerText=$Edit_AO_LI_PhoneUseType_getValue) on item 'ApplicationUnderTest.AO_LI_PhoneUseType'.", repo.ApplicationUnderTest.AO_LI_PhoneUseTypeInfo, new RecordItemIndex(119));
            Validate.AttributeEqual(repo.ApplicationUnderTest.AO_LI_PhoneUseTypeInfo, "InnerText", Edit_AO_LI_PhoneUseType_getValue);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "User", Edit_AO_LI_PhoneUseType_getValue, new RecordItemIndex(120));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (InnerText=$Edit_AO_LI_PhoneType_getValue) on item 'ApplicationUnderTest.AO_LI_PhoneType'.", repo.ApplicationUnderTest.AO_LI_PhoneTypeInfo, new RecordItemIndex(121));
            Validate.AttributeEqual(repo.ApplicationUnderTest.AO_LI_PhoneTypeInfo, "InnerText", Edit_AO_LI_PhoneType_getValue);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "User", Edit_AO_LI_PhoneType_getValue, new RecordItemIndex(122));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (InnerText=$Edit_AO_LI_PhoneSource_getValue) on item 'ApplicationUnderTest.AO_LI_PhoneSource'.", repo.ApplicationUnderTest.AO_LI_PhoneSourceInfo, new RecordItemIndex(123));
            Validate.AttributeEqual(repo.ApplicationUnderTest.AO_LI_PhoneSourceInfo, "InnerText", Edit_AO_LI_PhoneSource_getValue);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "User", Edit_AO_LI_PhoneSource_getValue, new RecordItemIndex(124));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (InnerText=$Edit_AO_LI_PhoneNumber_getValue) on item 'ApplicationUnderTest.AO_LI_PhoneNumber'.", repo.ApplicationUnderTest.AO_LI_PhoneNumberInfo, new RecordItemIndex(125));
            Validate.AttributeEqual(repo.ApplicationUnderTest.AO_LI_PhoneNumberInfo, "InnerText", Edit_AO_LI_PhoneNumber_getValue);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "User", Edit_AO_LI_PhoneNumber_getValue, new RecordItemIndex(126));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (InnerText=$Edit_AO_LI_EmailUseType_getValue) on item 'ApplicationUnderTest.AO_LI_EmailUseType'.", repo.ApplicationUnderTest.AO_LI_EmailUseTypeInfo, new RecordItemIndex(127));
            Validate.AttributeEqual(repo.ApplicationUnderTest.AO_LI_EmailUseTypeInfo, "InnerText", Edit_AO_LI_EmailUseType_getValue);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "User", Edit_AO_LI_EmailUseType_getValue, new RecordItemIndex(128));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (InnerText=$Edit_AO_LI_EmailSource_getValue) on item 'ApplicationUnderTest.AO_LI_EmailSource'.", repo.ApplicationUnderTest.AO_LI_EmailSourceInfo, new RecordItemIndex(129));
            Validate.AttributeEqual(repo.ApplicationUnderTest.AO_LI_EmailSourceInfo, "InnerText", Edit_AO_LI_EmailSource_getValue);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "User", Edit_AO_LI_EmailSource_getValue, new RecordItemIndex(130));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (InnerText=$Edit_AO_LI_EmailId_getValue) on item 'ApplicationUnderTest.AO_LI_EmailId'.", repo.ApplicationUnderTest.AO_LI_EmailIdInfo, new RecordItemIndex(131));
            Validate.AttributeEqual(repo.ApplicationUnderTest.AO_LI_EmailIdInfo, "InnerText", Edit_AO_LI_EmailId_getValue);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "User", Edit_AO_LI_EmailId_getValue, new RecordItemIndex(132));
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.SubmitButton1' at 46;15.", repo.ApplicationUnderTest.SubmitButton1Info, new RecordItemIndex(133));
            repo.ApplicationUnderTest.SubmitButton1.Click("46;15");
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
