///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace SubmissionCase_E2E
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Adverse_Other_Information_Save recording.
    /// </summary>
    [TestModule("53de5fa9-e2d3-4bfe-b913-6ea565b10abc", ModuleType.Recording, 1)]
    public partial class Adverse_Other_Information_Save : ITestModule
    {
        /// <summary>
        /// Holds an instance of the SubmissionCase_E2ERepository repository.
        /// </summary>
        public static SubmissionCase_E2ERepository repo = SubmissionCase_E2ERepository.Instance;

        static Adverse_Other_Information_Save instance = new Adverse_Other_Information_Save();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Adverse_Other_Information_Save()
        {
            CauseofLoss = "";
            Accident_description = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Adverse_Other_Information_Save Instance
        {
            get { return instance; }
        }

#region Variables

        string _CauseofLoss;

        /// <summary>
        /// Gets or sets the value of variable CauseofLoss.
        /// </summary>
        [TestVariable("7358c75a-01b7-4fa9-9b7e-c7e994aff4ed")]
        public string CauseofLoss
        {
            get { return _CauseofLoss; }
            set { _CauseofLoss = value; }
        }

        string _Accident_description;

        /// <summary>
        /// Gets or sets the value of variable Accident_description.
        /// </summary>
        [TestVariable("bdcf1047-fd6b-4649-a3de-c48878530804")]
        public string Accident_description
        {
            get { return _Accident_description; }
            set { _Accident_description = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.Save_Button' at 6;8.", repo.ApplicationUnderTest.Save_ButtonInfo, new RecordItemIndex(0));
            repo.ApplicationUnderTest.Save_Button.Click("6;8");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 5s.", new RecordItemIndex(1));
            Delay.Duration(5000, false);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 10s to exist. Associated repository item: 'ApplicationUnderTest.OtherInfo_Header'", repo.ApplicationUnderTest.OtherInfo_HeaderInfo, new ActionTimeout(10000), new RecordItemIndex(2));
            repo.ApplicationUnderTest.OtherInfo_HeaderInfo.WaitForExists(10000);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$CauseofLoss) on item 'ApplicationUnderTest.CauseofLoss'.", repo.ApplicationUnderTest.CauseofLossInfo, new RecordItemIndex(3));
            Validate.AttributeEqual(repo.ApplicationUnderTest.CauseofLossInfo, "TagValue", CauseofLoss);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "User", CauseofLoss, new RecordItemIndex(4));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$Accident_description) on item 'ApplicationUnderTest.AccidentDescription'.", repo.ApplicationUnderTest.AccidentDescriptionInfo, new RecordItemIndex(5));
            Validate.AttributeEqual(repo.ApplicationUnderTest.AccidentDescriptionInfo, "TagValue", Accident_description);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "User", Accident_description, new RecordItemIndex(6));
            
            Report.Screenshot(ReportLevel.Info, "User", "", repo.PegaCaseManagerPortalGoogleChrome.Screenshot_Window, false, new RecordItemIndex(7));
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.SubmitButton1' at 47;14.", repo.ApplicationUnderTest.SubmitButton1Info, new RecordItemIndex(8));
            repo.ApplicationUnderTest.SubmitButton1.Click("47;14");
            Delay.Milliseconds(200);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
