///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace SubmissionCase_E2E
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Adverse1_Driver_Insurance_Information_Save recording.
    /// </summary>
    [TestModule("18eaeb8f-95da-4cd2-9d4d-14473f64d4bc", ModuleType.Recording, 1)]
    public partial class Adverse1_Driver_Insurance_Information_Save : ITestModule
    {
        /// <summary>
        /// Holds an instance of the SubmissionCase_E2ERepository repository.
        /// </summary>
        public static SubmissionCase_E2ERepository repo = SubmissionCase_E2ERepository.Instance;

        static Adverse1_Driver_Insurance_Information_Save instance = new Adverse1_Driver_Insurance_Information_Save();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Adverse1_Driver_Insurance_Information_Save()
        {
            AD1_LI_CompanyName = "";
            AD1_LI_PolicyNumber = "";
            AD1_LI_ClaimNumber = "";
            AD1_LI_ContactName = "";
            AD1_LI_USStateCode = "";
            AD1_LI_Address1 = "";
            AD1_LI_Address2 = "";
            AD1_LI_City = "";
            AD1_LI_ZipCode = "";
            AD1_LI_PhoneNumber_getValue = "";
            AD1_LI_PhoneUseType = "";
            AD1_LI_PhoneType = "";
            AD1_LI_PhoneSource = "";
            AD1_LI_EmailUseType = "";
            AD1_LI_EmailSource = "";
            AD1_LI_Email = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Adverse1_Driver_Insurance_Information_Save Instance
        {
            get { return instance; }
        }

#region Variables

        string _AD1_LI_CompanyName;

        /// <summary>
        /// Gets or sets the value of variable AD1_LI_CompanyName.
        /// </summary>
        [TestVariable("f0534789-b0d6-4f78-b520-99fee454d7ba")]
        public string AD1_LI_CompanyName
        {
            get { return _AD1_LI_CompanyName; }
            set { _AD1_LI_CompanyName = value; }
        }

        string _AD1_LI_PolicyNumber;

        /// <summary>
        /// Gets or sets the value of variable AD1_LI_PolicyNumber.
        /// </summary>
        [TestVariable("e2a3a4a4-0f15-4a77-bcc5-1852fc6279b2")]
        public string AD1_LI_PolicyNumber
        {
            get { return _AD1_LI_PolicyNumber; }
            set { _AD1_LI_PolicyNumber = value; }
        }

        string _AD1_LI_ClaimNumber;

        /// <summary>
        /// Gets or sets the value of variable AD1_LI_ClaimNumber.
        /// </summary>
        [TestVariable("884c1156-22dd-4476-8051-1007f4aa99da")]
        public string AD1_LI_ClaimNumber
        {
            get { return _AD1_LI_ClaimNumber; }
            set { _AD1_LI_ClaimNumber = value; }
        }

        string _AD1_LI_ContactName;

        /// <summary>
        /// Gets or sets the value of variable AD1_LI_ContactName.
        /// </summary>
        [TestVariable("7b6a855b-7853-4cd0-9f0e-f817ef0ad264")]
        public string AD1_LI_ContactName
        {
            get { return _AD1_LI_ContactName; }
            set { _AD1_LI_ContactName = value; }
        }

        string _AD1_LI_USStateCode;

        /// <summary>
        /// Gets or sets the value of variable AD1_LI_USStateCode.
        /// </summary>
        [TestVariable("9ee8982b-3427-41eb-8a77-77e3079fb1ca")]
        public string AD1_LI_USStateCode
        {
            get { return _AD1_LI_USStateCode; }
            set { _AD1_LI_USStateCode = value; }
        }

        string _AD1_LI_Address1;

        /// <summary>
        /// Gets or sets the value of variable AD1_LI_Address1.
        /// </summary>
        [TestVariable("b96a4416-8837-4364-b6bc-819405dc5155")]
        public string AD1_LI_Address1
        {
            get { return _AD1_LI_Address1; }
            set { _AD1_LI_Address1 = value; }
        }

        string _AD1_LI_Address2;

        /// <summary>
        /// Gets or sets the value of variable AD1_LI_Address2.
        /// </summary>
        [TestVariable("46bda3a6-3c1f-4436-89f1-80302cb78803")]
        public string AD1_LI_Address2
        {
            get { return _AD1_LI_Address2; }
            set { _AD1_LI_Address2 = value; }
        }

        string _AD1_LI_City;

        /// <summary>
        /// Gets or sets the value of variable AD1_LI_City.
        /// </summary>
        [TestVariable("4379f5a1-11e2-4ecd-8df1-fbb86e4282db")]
        public string AD1_LI_City
        {
            get { return _AD1_LI_City; }
            set { _AD1_LI_City = value; }
        }

        string _AD1_LI_ZipCode;

        /// <summary>
        /// Gets or sets the value of variable AD1_LI_ZipCode.
        /// </summary>
        [TestVariable("8e5226d1-f7aa-4c49-85db-bab8ec8294b6")]
        public string AD1_LI_ZipCode
        {
            get { return _AD1_LI_ZipCode; }
            set { _AD1_LI_ZipCode = value; }
        }

        string _AD1_LI_PhoneNumber_getValue;

        /// <summary>
        /// Gets or sets the value of variable AD1_LI_PhoneNumber_getValue.
        /// </summary>
        [TestVariable("7985fd6a-d2fc-4bb4-9a6b-16cef8478658")]
        public string AD1_LI_PhoneNumber_getValue
        {
            get { return _AD1_LI_PhoneNumber_getValue; }
            set { _AD1_LI_PhoneNumber_getValue = value; }
        }

        string _AD1_LI_PhoneUseType;

        /// <summary>
        /// Gets or sets the value of variable AD1_LI_PhoneUseType.
        /// </summary>
        [TestVariable("f2bb00b0-f980-4107-a6a3-6e4bd7c68fce")]
        public string AD1_LI_PhoneUseType
        {
            get { return _AD1_LI_PhoneUseType; }
            set { _AD1_LI_PhoneUseType = value; }
        }

        string _AD1_LI_PhoneType;

        /// <summary>
        /// Gets or sets the value of variable AD1_LI_PhoneType.
        /// </summary>
        [TestVariable("c9d643c5-d2a1-4eee-b16d-00098d583698")]
        public string AD1_LI_PhoneType
        {
            get { return _AD1_LI_PhoneType; }
            set { _AD1_LI_PhoneType = value; }
        }

        string _AD1_LI_PhoneSource;

        /// <summary>
        /// Gets or sets the value of variable AD1_LI_PhoneSource.
        /// </summary>
        [TestVariable("621dc2ac-3a46-4490-a652-fc72236a2e1d")]
        public string AD1_LI_PhoneSource
        {
            get { return _AD1_LI_PhoneSource; }
            set { _AD1_LI_PhoneSource = value; }
        }

        string _AD1_LI_EmailUseType;

        /// <summary>
        /// Gets or sets the value of variable AD1_LI_EmailUseType.
        /// </summary>
        [TestVariable("5f8ffa41-a81e-4fa3-8e19-6f3e13c9d92c")]
        public string AD1_LI_EmailUseType
        {
            get { return _AD1_LI_EmailUseType; }
            set { _AD1_LI_EmailUseType = value; }
        }

        string _AD1_LI_EmailSource;

        /// <summary>
        /// Gets or sets the value of variable AD1_LI_EmailSource.
        /// </summary>
        [TestVariable("ee7afc8f-5340-434c-a024-7d882c175bec")]
        public string AD1_LI_EmailSource
        {
            get { return _AD1_LI_EmailSource; }
            set { _AD1_LI_EmailSource = value; }
        }

        string _AD1_LI_Email;

        /// <summary>
        /// Gets or sets the value of variable AD1_LI_Email.
        /// </summary>
        [TestVariable("da6f9e2e-63a5-4507-819b-045444073c1b")]
        public string AD1_LI_Email
        {
            get { return _AD1_LI_Email; }
            set { _AD1_LI_Email = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.Save_Button' at 6;8.", repo.ApplicationUnderTest.Save_ButtonInfo, new RecordItemIndex(0));
            repo.ApplicationUnderTest.Save_Button.Click("6;8");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 5s.", new RecordItemIndex(1));
            Delay.Duration(5000, false);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$AD1_LI_CompanyName) on item 'ApplicationUnderTest.AD1_LI_CompanyName'.", repo.ApplicationUnderTest.AD1_LI_CompanyNameInfo, new RecordItemIndex(2));
            Validate.AttributeEqual(repo.ApplicationUnderTest.AD1_LI_CompanyNameInfo, "TagValue", AD1_LI_CompanyName);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "User", AD1_LI_CompanyName, new RecordItemIndex(3));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$AD1_LI_PolicyNumber) on item 'ApplicationUnderTest.AD1_LI_PolicyNumber'.", repo.ApplicationUnderTest.AD1_LI_PolicyNumberInfo, new RecordItemIndex(4));
            Validate.AttributeEqual(repo.ApplicationUnderTest.AD1_LI_PolicyNumberInfo, "TagValue", AD1_LI_PolicyNumber);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "User", "", new RecordItemIndex(5));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$AD1_LI_ClaimNumber) on item 'ApplicationUnderTest.AD1_LI_ClaimNumber'.", repo.ApplicationUnderTest.AD1_LI_ClaimNumberInfo, new RecordItemIndex(6));
            Validate.AttributeEqual(repo.ApplicationUnderTest.AD1_LI_ClaimNumberInfo, "TagValue", AD1_LI_ClaimNumber);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "User", AD1_LI_ClaimNumber, new RecordItemIndex(7));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$AD1_LI_ContactName) on item 'ApplicationUnderTest.AD1_LI_ContactName'.", repo.ApplicationUnderTest.AD1_LI_ContactNameInfo, new RecordItemIndex(8));
            Validate.AttributeEqual(repo.ApplicationUnderTest.AD1_LI_ContactNameInfo, "TagValue", AD1_LI_ContactName);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "User", AD1_LI_ContactName, new RecordItemIndex(9));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$AD1_LI_USStateCode) on item 'ApplicationUnderTest.AD1_LI_USStateCode'.", repo.ApplicationUnderTest.AD1_LI_USStateCodeInfo, new RecordItemIndex(10));
            Validate.AttributeEqual(repo.ApplicationUnderTest.AD1_LI_USStateCodeInfo, "TagValue", AD1_LI_USStateCode);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "User", AD1_LI_USStateCode, new RecordItemIndex(11));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$AD1_LI_Address1) on item 'ApplicationUnderTest.AD1_LI_Address1'.", repo.ApplicationUnderTest.AD1_LI_Address1Info, new RecordItemIndex(12));
            Validate.AttributeEqual(repo.ApplicationUnderTest.AD1_LI_Address1Info, "TagValue", AD1_LI_Address1);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "User", AD1_LI_Address1, new RecordItemIndex(13));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$AD1_LI_Address2) on item 'ApplicationUnderTest.AD1_LI_Address2'.", repo.ApplicationUnderTest.AD1_LI_Address2Info, new RecordItemIndex(14));
            Validate.AttributeEqual(repo.ApplicationUnderTest.AD1_LI_Address2Info, "TagValue", AD1_LI_Address2);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "User", AD1_LI_Address2, new RecordItemIndex(15));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$AD1_LI_City) on item 'ApplicationUnderTest.AD1_LI_City'.", repo.ApplicationUnderTest.AD1_LI_CityInfo, new RecordItemIndex(16));
            Validate.AttributeEqual(repo.ApplicationUnderTest.AD1_LI_CityInfo, "TagValue", AD1_LI_City);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "User", AD1_LI_City, new RecordItemIndex(17));
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'TagValue' from item 'ApplicationUnderTest.AD1_LI_ZipCode' and assigning its value to variable 'AD1_LI_ZipCode'.", repo.ApplicationUnderTest.AD1_LI_ZipCodeInfo, new RecordItemIndex(18));
            AD1_LI_ZipCode = repo.ApplicationUnderTest.AD1_LI_ZipCode.Element.GetAttributeValueText("TagValue");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$AD1_LI_ZipCode) on item 'ApplicationUnderTest.AD1_LI_ZipCode'.", repo.ApplicationUnderTest.AD1_LI_ZipCodeInfo, new RecordItemIndex(19));
            Validate.AttributeEqual(repo.ApplicationUnderTest.AD1_LI_ZipCodeInfo, "TagValue", AD1_LI_ZipCode);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "User", AD1_LI_ZipCode, new RecordItemIndex(20));
            
            Report.Log(ReportLevel.Info, "User", AD1_LI_PhoneUseType, new RecordItemIndex(21));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$AD1_LI_PhoneUseType) on item 'ApplicationUnderTest.AD1_LI_PhoneUseType'.", repo.ApplicationUnderTest.AD1_LI_PhoneUseTypeInfo, new RecordItemIndex(22));
            Validate.AttributeEqual(repo.ApplicationUnderTest.AD1_LI_PhoneUseTypeInfo, "TagValue", AD1_LI_PhoneUseType);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "User", AD1_LI_PhoneType, new RecordItemIndex(23));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$AD1_LI_PhoneType) on item 'ApplicationUnderTest.AD1_LI_PhoneType'.", repo.ApplicationUnderTest.AD1_LI_PhoneTypeInfo, new RecordItemIndex(24));
            Validate.AttributeEqual(repo.ApplicationUnderTest.AD1_LI_PhoneTypeInfo, "TagValue", AD1_LI_PhoneType);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "User", AD1_LI_PhoneSource, new RecordItemIndex(25));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$AD1_LI_PhoneSource) on item 'ApplicationUnderTest.AD1_LI_PhoneSource'.", repo.ApplicationUnderTest.AD1_LI_PhoneSourceInfo, new RecordItemIndex(26));
            Validate.AttributeEqual(repo.ApplicationUnderTest.AD1_LI_PhoneSourceInfo, "TagValue", AD1_LI_PhoneSource);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'TagValue' from item 'ApplicationUnderTest.AD1_LI_PhoneNumber' and assigning its value to variable 'AD1_LI_PhoneNumber_getValue'.", repo.ApplicationUnderTest.AD1_LI_PhoneNumberInfo, new RecordItemIndex(27));
            AD1_LI_PhoneNumber_getValue = repo.ApplicationUnderTest.AD1_LI_PhoneNumber.Element.GetAttributeValueText("TagValue");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "User", AD1_LI_PhoneNumber_getValue, new RecordItemIndex(28));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$AD1_LI_PhoneNumber_getValue) on item 'ApplicationUnderTest.AD1_LI_PhoneNumber'.", repo.ApplicationUnderTest.AD1_LI_PhoneNumberInfo, new RecordItemIndex(29));
            Validate.AttributeEqual(repo.ApplicationUnderTest.AD1_LI_PhoneNumberInfo, "TagValue", AD1_LI_PhoneNumber_getValue);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$AD1_LI_EmailUseType) on item 'ApplicationUnderTest.AD1_LI_EmailUseType'.", repo.ApplicationUnderTest.AD1_LI_EmailUseTypeInfo, new RecordItemIndex(30));
            Validate.AttributeEqual(repo.ApplicationUnderTest.AD1_LI_EmailUseTypeInfo, "TagValue", AD1_LI_EmailUseType);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "User", AD1_LI_EmailUseType, new RecordItemIndex(31));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$AD1_LI_EmailSource) on item 'ApplicationUnderTest.AD1_LI_EmailSource'.", repo.ApplicationUnderTest.AD1_LI_EmailSourceInfo, new RecordItemIndex(32));
            Validate.AttributeEqual(repo.ApplicationUnderTest.AD1_LI_EmailSourceInfo, "TagValue", AD1_LI_EmailSource);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "User", AD1_LI_EmailSource, new RecordItemIndex(33));
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.AD1_LI_Email' at Center.", repo.ApplicationUnderTest.AD1_LI_EmailInfo, new RecordItemIndex(34));
            repo.ApplicationUnderTest.AD1_LI_Email.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$AD1_LI_Email) on item 'ApplicationUnderTest.AD1_LI_Email'.", repo.ApplicationUnderTest.AD1_LI_EmailInfo, new RecordItemIndex(35));
            Validate.AttributeEqual(repo.ApplicationUnderTest.AD1_LI_EmailInfo, "TagValue", AD1_LI_Email);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "User", AD1_LI_Email, new RecordItemIndex(36));
            
            Report.Screenshot(ReportLevel.Info, "User", "", repo.PegaCaseManagerPortalGoogleChrome.Screenshot_Window, false, new RecordItemIndex(37));
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.SubmitButton1' at 46;15.", repo.ApplicationUnderTest.SubmitButton1Info, new RecordItemIndex(38));
            repo.ApplicationUnderTest.SubmitButton1.Click("46;15");
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
