///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace SubmissionCase_E2E
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Edit_Adverse1_Owner_Attorney_Details recording.
    /// </summary>
    [TestModule("88f0b12e-6544-4d94-84fc-332891b09419", ModuleType.Recording, 1)]
    public partial class Edit_Adverse1_Owner_Attorney_Details : ITestModule
    {
        /// <summary>
        /// Holds an instance of the SubmissionCase_E2ERepository repository.
        /// </summary>
        public static SubmissionCase_E2ERepository repo = SubmissionCase_E2ERepository.Instance;

        static Edit_Adverse1_Owner_Attorney_Details instance = new Edit_Adverse1_Owner_Attorney_Details();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Edit_Adverse1_Owner_Attorney_Details()
        {
            AO1_Attorney_FirmName = "";
            AO1_Attorney_FirstName = "";
            AO1_Attorney_LastName = "";
            AO1_Attorney_Address1 = "";
            AO1_Attorney_Address2 = "";
            AO1_Attorney_City = "";
            AO1_Attorney_State = "";
            AO1_Attorney_Zip = "";
            AO1_Attorney_RepDate = "";
            AO1_Attorney_UseType = "";
            AO1_Attorney_PhoneType = "";
            AO1_Attorney_Source = "";
            AO1_Attorney_PhoneNumber = "";
            AO1_Attorney_EmailUseType = "";
            AO1_Attorney_EmailSource = "";
            AO1_Attorney_Email = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Edit_Adverse1_Owner_Attorney_Details Instance
        {
            get { return instance; }
        }

#region Variables

        string _AO1_Attorney_FirmName;

        /// <summary>
        /// Gets or sets the value of variable AO1_Attorney_FirmName.
        /// </summary>
        [TestVariable("96eec06c-46c6-4812-abb3-7c7528917583")]
        public string AO1_Attorney_FirmName
        {
            get { return _AO1_Attorney_FirmName; }
            set { _AO1_Attorney_FirmName = value; }
        }

        string _AO1_Attorney_FirstName;

        /// <summary>
        /// Gets or sets the value of variable AO1_Attorney_FirstName.
        /// </summary>
        [TestVariable("170ddcd3-ff5a-4c1a-96c8-67170c5097e5")]
        public string AO1_Attorney_FirstName
        {
            get { return _AO1_Attorney_FirstName; }
            set { _AO1_Attorney_FirstName = value; }
        }

        string _AO1_Attorney_LastName;

        /// <summary>
        /// Gets or sets the value of variable AO1_Attorney_LastName.
        /// </summary>
        [TestVariable("cc2a9329-f349-4812-9f54-8c6aff3b3e26")]
        public string AO1_Attorney_LastName
        {
            get { return _AO1_Attorney_LastName; }
            set { _AO1_Attorney_LastName = value; }
        }

        string _AO1_Attorney_Address1;

        /// <summary>
        /// Gets or sets the value of variable AO1_Attorney_Address1.
        /// </summary>
        [TestVariable("87ee4738-3ab5-4fce-9869-a07af9529913")]
        public string AO1_Attorney_Address1
        {
            get { return _AO1_Attorney_Address1; }
            set { _AO1_Attorney_Address1 = value; }
        }

        string _AO1_Attorney_Address2;

        /// <summary>
        /// Gets or sets the value of variable AO1_Attorney_Address2.
        /// </summary>
        [TestVariable("5fde57f5-d4f0-469f-adb7-49cc35570085")]
        public string AO1_Attorney_Address2
        {
            get { return _AO1_Attorney_Address2; }
            set { _AO1_Attorney_Address2 = value; }
        }

        string _AO1_Attorney_City;

        /// <summary>
        /// Gets or sets the value of variable AO1_Attorney_City.
        /// </summary>
        [TestVariable("12b2bb59-7751-422b-a948-c263b8f7b81c")]
        public string AO1_Attorney_City
        {
            get { return _AO1_Attorney_City; }
            set { _AO1_Attorney_City = value; }
        }

        string _AO1_Attorney_State;

        /// <summary>
        /// Gets or sets the value of variable AO1_Attorney_State.
        /// </summary>
        [TestVariable("81408e16-a2fa-4581-99d6-96fcf0823b52")]
        public string AO1_Attorney_State
        {
            get { return _AO1_Attorney_State; }
            set { _AO1_Attorney_State = value; }
        }

        string _AO1_Attorney_Zip;

        /// <summary>
        /// Gets or sets the value of variable AO1_Attorney_Zip.
        /// </summary>
        [TestVariable("58a06c10-2002-4955-8f88-b71b6829c3bf")]
        public string AO1_Attorney_Zip
        {
            get { return _AO1_Attorney_Zip; }
            set { _AO1_Attorney_Zip = value; }
        }

        string _AO1_Attorney_RepDate;

        /// <summary>
        /// Gets or sets the value of variable AO1_Attorney_RepDate.
        /// </summary>
        [TestVariable("2d3e6305-9d25-4f92-b398-915dafff06aa")]
        public string AO1_Attorney_RepDate
        {
            get { return _AO1_Attorney_RepDate; }
            set { _AO1_Attorney_RepDate = value; }
        }

        string _AO1_Attorney_UseType;

        /// <summary>
        /// Gets or sets the value of variable AO1_Attorney_UseType.
        /// </summary>
        [TestVariable("8f7f2d48-da90-4613-943a-60cbb7c1daa0")]
        public string AO1_Attorney_UseType
        {
            get { return _AO1_Attorney_UseType; }
            set { _AO1_Attorney_UseType = value; }
        }

        string _AO1_Attorney_PhoneType;

        /// <summary>
        /// Gets or sets the value of variable AO1_Attorney_PhoneType.
        /// </summary>
        [TestVariable("a4aba9ef-3a6a-4a12-b126-2819ce3ed0f6")]
        public string AO1_Attorney_PhoneType
        {
            get { return _AO1_Attorney_PhoneType; }
            set { _AO1_Attorney_PhoneType = value; }
        }

        string _AO1_Attorney_Source;

        /// <summary>
        /// Gets or sets the value of variable AO1_Attorney_Source.
        /// </summary>
        [TestVariable("5566d189-d8db-4a57-900a-03b623f34703")]
        public string AO1_Attorney_Source
        {
            get { return _AO1_Attorney_Source; }
            set { _AO1_Attorney_Source = value; }
        }

        string _AO1_Attorney_PhoneNumber;

        /// <summary>
        /// Gets or sets the value of variable AO1_Attorney_PhoneNumber.
        /// </summary>
        [TestVariable("1a6e7fe5-8af0-45a8-bf37-90a29208e52c")]
        public string AO1_Attorney_PhoneNumber
        {
            get { return _AO1_Attorney_PhoneNumber; }
            set { _AO1_Attorney_PhoneNumber = value; }
        }

        string _AO1_Attorney_EmailUseType;

        /// <summary>
        /// Gets or sets the value of variable AO1_Attorney_EmailUseType.
        /// </summary>
        [TestVariable("e6c363ac-c6b3-4de6-817a-ae6d71d75583")]
        public string AO1_Attorney_EmailUseType
        {
            get { return _AO1_Attorney_EmailUseType; }
            set { _AO1_Attorney_EmailUseType = value; }
        }

        string _AO1_Attorney_EmailSource;

        /// <summary>
        /// Gets or sets the value of variable AO1_Attorney_EmailSource.
        /// </summary>
        [TestVariable("37c211ae-c2e1-4c75-8afe-633debcecb7c")]
        public string AO1_Attorney_EmailSource
        {
            get { return _AO1_Attorney_EmailSource; }
            set { _AO1_Attorney_EmailSource = value; }
        }

        string _AO1_Attorney_Email;

        /// <summary>
        /// Gets or sets the value of variable AO1_Attorney_Email.
        /// </summary>
        [TestVariable("a780ca81-2f1c-452e-8f79-4503e4fb9e98")]
        public string AO1_Attorney_Email
        {
            get { return _AO1_Attorney_Email; }
            set { _AO1_Attorney_Email = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.Save_Button' at 6;8.", repo.ApplicationUnderTest.Save_ButtonInfo, new RecordItemIndex(0));
            repo.ApplicationUnderTest.Save_Button.Click("6;8");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 5s.", new RecordItemIndex(1));
            Delay.Duration(5000, false);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$AO1_Attorney_FirmName) on item 'ApplicationUnderTest.AO1_Attorney_FirmName'.", repo.ApplicationUnderTest.AO1_Attorney_FirmNameInfo, new RecordItemIndex(2));
            Validate.AttributeEqual(repo.ApplicationUnderTest.AO1_Attorney_FirmNameInfo, "TagValue", AO1_Attorney_FirmName);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "User", AO1_Attorney_FirmName, new RecordItemIndex(3));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$AO1_Attorney_FirstName) on item 'ApplicationUnderTest.AO1_Attorney_FirstName'.", repo.ApplicationUnderTest.AO1_Attorney_FirstNameInfo, new RecordItemIndex(4));
            Validate.AttributeEqual(repo.ApplicationUnderTest.AO1_Attorney_FirstNameInfo, "TagValue", AO1_Attorney_FirstName);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "User", AO1_Attorney_FirstName, new RecordItemIndex(5));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$AO1_Attorney_LastName) on item 'ApplicationUnderTest.AO1_Attorney_LastName'.", repo.ApplicationUnderTest.AO1_Attorney_LastNameInfo, new RecordItemIndex(6));
            Validate.AttributeEqual(repo.ApplicationUnderTest.AO1_Attorney_LastNameInfo, "TagValue", AO1_Attorney_LastName);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "User", AO1_Attorney_LastName, new RecordItemIndex(7));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$AO1_Attorney_Address1) on item 'ApplicationUnderTest.AO1_Attorney_Address1'.", repo.ApplicationUnderTest.AO1_Attorney_Address1Info, new RecordItemIndex(8));
            Validate.AttributeEqual(repo.ApplicationUnderTest.AO1_Attorney_Address1Info, "TagValue", AO1_Attorney_Address1);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "User", AO1_Attorney_Address1, new RecordItemIndex(9));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$AO1_Attorney_Address2) on item 'ApplicationUnderTest.AO1_Attorney_Address2'.", repo.ApplicationUnderTest.AO1_Attorney_Address2Info, new RecordItemIndex(10));
            Validate.AttributeEqual(repo.ApplicationUnderTest.AO1_Attorney_Address2Info, "TagValue", AO1_Attorney_Address2);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "User", AO1_Attorney_Address2, new RecordItemIndex(11));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$AO1_Attorney_City) on item 'ApplicationUnderTest.AO1_Attorney_City'.", repo.ApplicationUnderTest.AO1_Attorney_CityInfo, new RecordItemIndex(12));
            Validate.AttributeEqual(repo.ApplicationUnderTest.AO1_Attorney_CityInfo, "TagValue", AO1_Attorney_City);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "User", AO1_Attorney_City, new RecordItemIndex(13));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$AO1_Attorney_State) on item 'ApplicationUnderTest.AO1_Attorney_State'.", repo.ApplicationUnderTest.AO1_Attorney_StateInfo, new RecordItemIndex(14));
            Validate.AttributeEqual(repo.ApplicationUnderTest.AO1_Attorney_StateInfo, "TagValue", AO1_Attorney_State);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "User", AO1_Attorney_State, new RecordItemIndex(15));
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'TagValue' from item 'ApplicationUnderTest.AO1_Attorney_Zip' and assigning its value to variable 'AO1_Attorney_Zip'.", repo.ApplicationUnderTest.AO1_Attorney_ZipInfo, new RecordItemIndex(16));
            AO1_Attorney_Zip = repo.ApplicationUnderTest.AO1_Attorney_Zip.Element.GetAttributeValueText("TagValue");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$AO1_Attorney_Zip) on item 'ApplicationUnderTest.AO1_Attorney_Zip'.", repo.ApplicationUnderTest.AO1_Attorney_ZipInfo, new RecordItemIndex(17));
            Validate.AttributeEqual(repo.ApplicationUnderTest.AO1_Attorney_ZipInfo, "TagValue", AO1_Attorney_Zip);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "User", AO1_Attorney_Zip, new RecordItemIndex(18));
            
            Report.Screenshot(ReportLevel.Info, "User", "", repo.PegaCaseManagerPortalGoogleChrome.Screenshot_Window, false, new RecordItemIndex(19));
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'TagValue' from item 'ApplicationUnderTest.AO1_Attorney_RepDate' and assigning its value to variable 'AO1_Attorney_RepDate'.", repo.ApplicationUnderTest.AO1_Attorney_RepDateInfo, new RecordItemIndex(20));
            AO1_Attorney_RepDate = repo.ApplicationUnderTest.AO1_Attorney_RepDate.Element.GetAttributeValueText("TagValue");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "User", AO1_Attorney_RepDate, new RecordItemIndex(21));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$AO1_Attorney_RepDate) on item 'ApplicationUnderTest.AO1_Attorney_RepDate'.", repo.ApplicationUnderTest.AO1_Attorney_RepDateInfo, new RecordItemIndex(22));
            Validate.AttributeEqual(repo.ApplicationUnderTest.AO1_Attorney_RepDateInfo, "TagValue", AO1_Attorney_RepDate);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'TagValue' from item 'ApplicationUnderTest.AO_AD_UseType' and assigning its value to variable 'AO1_Attorney_UseType'.", repo.ApplicationUnderTest.AO_AD_UseTypeInfo, new RecordItemIndex(23));
            AO1_Attorney_UseType = repo.ApplicationUnderTest.AO_AD_UseType.Element.GetAttributeValueText("TagValue");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "User", AO1_Attorney_UseType, new RecordItemIndex(24));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$AO1_Attorney_UseType) on item 'ApplicationUnderTest.AO_AD_UseType'.", repo.ApplicationUnderTest.AO_AD_UseTypeInfo, new RecordItemIndex(25));
            Validate.AttributeEqual(repo.ApplicationUnderTest.AO_AD_UseTypeInfo, "TagValue", AO1_Attorney_UseType);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'TagValue' from item 'ApplicationUnderTest.AO_AD_PhoneType' and assigning its value to variable 'AO1_Attorney_PhoneType'.", repo.ApplicationUnderTest.AO_AD_PhoneTypeInfo, new RecordItemIndex(26));
            AO1_Attorney_PhoneType = repo.ApplicationUnderTest.AO_AD_PhoneType.Element.GetAttributeValueText("TagValue");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "User", AO1_Attorney_PhoneType, new RecordItemIndex(27));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$AO1_Attorney_PhoneType) on item 'ApplicationUnderTest.AO_AD_PhoneType'.", repo.ApplicationUnderTest.AO_AD_PhoneTypeInfo, new RecordItemIndex(28));
            Validate.AttributeEqual(repo.ApplicationUnderTest.AO_AD_PhoneTypeInfo, "TagValue", AO1_Attorney_PhoneType);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'TagValue' from item 'ApplicationUnderTest.AO_AD_Source' and assigning its value to variable 'AO1_Attorney_Source'.", repo.ApplicationUnderTest.AO_AD_SourceInfo, new RecordItemIndex(29));
            AO1_Attorney_Source = repo.ApplicationUnderTest.AO_AD_Source.Element.GetAttributeValueText("TagValue");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "User", AO1_Attorney_Source, new RecordItemIndex(30));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$AO1_Attorney_Source) on item 'ApplicationUnderTest.AO_AD_Source'.", repo.ApplicationUnderTest.AO_AD_SourceInfo, new RecordItemIndex(31));
            Validate.AttributeEqual(repo.ApplicationUnderTest.AO_AD_SourceInfo, "TagValue", AO1_Attorney_Source);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'TagValue' from item 'ApplicationUnderTest.AO_AD_PhoneNumber' and assigning its value to variable 'AO1_Attorney_PhoneNumber'.", repo.ApplicationUnderTest.AO_AD_PhoneNumberInfo, new RecordItemIndex(32));
            AO1_Attorney_PhoneNumber = repo.ApplicationUnderTest.AO_AD_PhoneNumber.Element.GetAttributeValueText("TagValue");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "User", AO1_Attorney_PhoneNumber, new RecordItemIndex(33));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$AO1_Attorney_PhoneNumber) on item 'ApplicationUnderTest.AO_AD_PhoneNumber'.", repo.ApplicationUnderTest.AO_AD_PhoneNumberInfo, new RecordItemIndex(34));
            Validate.AttributeEqual(repo.ApplicationUnderTest.AO_AD_PhoneNumberInfo, "TagValue", AO1_Attorney_PhoneNumber);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'TagValue' from item 'ApplicationUnderTest.AO_AD_EmailUseType' and assigning its value to variable 'AO1_Attorney_EmailUseType'.", repo.ApplicationUnderTest.AO_AD_EmailUseTypeInfo, new RecordItemIndex(35));
            AO1_Attorney_EmailUseType = repo.ApplicationUnderTest.AO_AD_EmailUseType.Element.GetAttributeValueText("TagValue");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "User", AO1_Attorney_EmailUseType, new RecordItemIndex(36));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$AO1_Attorney_EmailUseType) on item 'ApplicationUnderTest.AO_AD_EmailUseType'.", repo.ApplicationUnderTest.AO_AD_EmailUseTypeInfo, new RecordItemIndex(37));
            Validate.AttributeEqual(repo.ApplicationUnderTest.AO_AD_EmailUseTypeInfo, "TagValue", AO1_Attorney_EmailUseType);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'TagValue' from item 'ApplicationUnderTest.AO_AD_EmailSource' and assigning its value to variable 'AO1_Attorney_EmailSource'.", repo.ApplicationUnderTest.AO_AD_EmailSourceInfo, new RecordItemIndex(38));
            AO1_Attorney_EmailSource = repo.ApplicationUnderTest.AO_AD_EmailSource.Element.GetAttributeValueText("TagValue");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "User", AO1_Attorney_EmailSource, new RecordItemIndex(39));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$AO1_Attorney_EmailSource) on item 'ApplicationUnderTest.AO_AD_EmailSource'.", repo.ApplicationUnderTest.AO_AD_EmailSourceInfo, new RecordItemIndex(40));
            Validate.AttributeEqual(repo.ApplicationUnderTest.AO_AD_EmailSourceInfo, "TagValue", AO1_Attorney_EmailSource);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'TagValue' from item 'ApplicationUnderTest.AO_AD_EmailId' and assigning its value to variable 'AO1_Attorney_Email'.", repo.ApplicationUnderTest.AO_AD_EmailIdInfo, new RecordItemIndex(41));
            AO1_Attorney_Email = repo.ApplicationUnderTest.AO_AD_EmailId.Element.GetAttributeValueText("TagValue");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "User", AO1_Attorney_Email, new RecordItemIndex(42));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$AO1_Attorney_Email) on item 'ApplicationUnderTest.AO_AD_EmailId'.", repo.ApplicationUnderTest.AO_AD_EmailIdInfo, new RecordItemIndex(43));
            Validate.AttributeEqual(repo.ApplicationUnderTest.AO_AD_EmailIdInfo, "TagValue", AO1_Attorney_Email);
            Delay.Milliseconds(0);
            
            Report.Screenshot(ReportLevel.Info, "User", "", repo.PegaCaseManagerPortalGoogleChrome.Screenshot_Window, false, new RecordItemIndex(44));
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.SubmitButton1' at 46;15.", repo.ApplicationUnderTest.SubmitButton1Info, new RecordItemIndex(45));
            repo.ApplicationUnderTest.SubmitButton1.Click("46;15");
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
