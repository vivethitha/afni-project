///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace SubmissionCase_E2E
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Adverse_Other_Insurance_Info recording.
    /// </summary>
    [TestModule("5a45c923-9e73-4ac5-8849-4d8f27de2aa2", ModuleType.Recording, 1)]
    public partial class Adverse_Other_Insurance_Info : ITestModule
    {
        /// <summary>
        /// Holds an instance of the SubmissionCase_E2ERepository repository.
        /// </summary>
        public static SubmissionCase_E2ERepository repo = SubmissionCase_E2ERepository.Instance;

        static Adverse_Other_Insurance_Info instance = new Adverse_Other_Insurance_Info();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Adverse_Other_Insurance_Info()
        {
            OAT_IL_CompName = "";
            OAT_IL_PolicyNumber = "";
            OAT_IL_ClaimNumber = "";
            OAT_IL_ContactName = "";
            OAT_IL_State = "";
            OAT_IL_Address1 = "";
            OAT_IL_Address2 = "";
            OAT_IL_City = "";
            OAT_IL_Zip = "";
            OAT_IL_UseType = "";
            OAT_IL_PhoneType = "";
            OAT_IL_Source = "";
            OAT_IL_PhoneNumber = "";
            OAT_IL_ExtNo = "";
            OAT_IL_EmailUseType = "";
            OAT_IL_EmailSource = "";
            OAT_IL_EmailID = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Adverse_Other_Insurance_Info Instance
        {
            get { return instance; }
        }

#region Variables

        string _OAT_IL_CompName;

        /// <summary>
        /// Gets or sets the value of variable OAT_IL_CompName.
        /// </summary>
        [TestVariable("22deed11-0b16-478c-8a7f-764a40b5bb21")]
        public string OAT_IL_CompName
        {
            get { return _OAT_IL_CompName; }
            set { _OAT_IL_CompName = value; }
        }

        string _OAT_IL_PolicyNumber;

        /// <summary>
        /// Gets or sets the value of variable OAT_IL_PolicyNumber.
        /// </summary>
        [TestVariable("cdf040d7-05ce-42c7-9168-13537e9dcaa4")]
        public string OAT_IL_PolicyNumber
        {
            get { return _OAT_IL_PolicyNumber; }
            set { _OAT_IL_PolicyNumber = value; }
        }

        string _OAT_IL_ClaimNumber;

        /// <summary>
        /// Gets or sets the value of variable OAT_IL_ClaimNumber.
        /// </summary>
        [TestVariable("f4d2ae45-bfc4-480e-af0c-78874cdcf501")]
        public string OAT_IL_ClaimNumber
        {
            get { return _OAT_IL_ClaimNumber; }
            set { _OAT_IL_ClaimNumber = value; }
        }

        string _OAT_IL_ContactName;

        /// <summary>
        /// Gets or sets the value of variable OAT_IL_ContactName.
        /// </summary>
        [TestVariable("5d1b4d24-986b-496d-b770-2b7b36334846")]
        public string OAT_IL_ContactName
        {
            get { return _OAT_IL_ContactName; }
            set { _OAT_IL_ContactName = value; }
        }

        string _OAT_IL_State;

        /// <summary>
        /// Gets or sets the value of variable OAT_IL_State.
        /// </summary>
        [TestVariable("e6825aef-d273-4643-a90b-1659f58dca3a")]
        public string OAT_IL_State
        {
            get { return _OAT_IL_State; }
            set { _OAT_IL_State = value; }
        }

        string _OAT_IL_Address1;

        /// <summary>
        /// Gets or sets the value of variable OAT_IL_Address1.
        /// </summary>
        [TestVariable("6763b8ee-72a9-4408-af80-498ac4baf1d2")]
        public string OAT_IL_Address1
        {
            get { return _OAT_IL_Address1; }
            set { _OAT_IL_Address1 = value; }
        }

        string _OAT_IL_Address2;

        /// <summary>
        /// Gets or sets the value of variable OAT_IL_Address2.
        /// </summary>
        [TestVariable("68333f99-7fe1-4034-9f9e-42189ae413d2")]
        public string OAT_IL_Address2
        {
            get { return _OAT_IL_Address2; }
            set { _OAT_IL_Address2 = value; }
        }

        string _OAT_IL_City;

        /// <summary>
        /// Gets or sets the value of variable OAT_IL_City.
        /// </summary>
        [TestVariable("beffe29b-410b-47e7-bca1-1afe37771c34")]
        public string OAT_IL_City
        {
            get { return _OAT_IL_City; }
            set { _OAT_IL_City = value; }
        }

        string _OAT_IL_Zip;

        /// <summary>
        /// Gets or sets the value of variable OAT_IL_Zip.
        /// </summary>
        [TestVariable("48dde539-8dfd-4997-952e-4aedb8f11005")]
        public string OAT_IL_Zip
        {
            get { return _OAT_IL_Zip; }
            set { _OAT_IL_Zip = value; }
        }

        string _OAT_IL_UseType;

        /// <summary>
        /// Gets or sets the value of variable OAT_IL_UseType.
        /// </summary>
        [TestVariable("280d25ed-9d3e-41c5-af94-f7935c81f420")]
        public string OAT_IL_UseType
        {
            get { return _OAT_IL_UseType; }
            set { _OAT_IL_UseType = value; }
        }

        string _OAT_IL_PhoneType;

        /// <summary>
        /// Gets or sets the value of variable OAT_IL_PhoneType.
        /// </summary>
        [TestVariable("edf31a43-4b32-45f2-98bb-3299733879ac")]
        public string OAT_IL_PhoneType
        {
            get { return _OAT_IL_PhoneType; }
            set { _OAT_IL_PhoneType = value; }
        }

        string _OAT_IL_Source;

        /// <summary>
        /// Gets or sets the value of variable OAT_IL_Source.
        /// </summary>
        [TestVariable("44ca82b8-f634-44d2-8871-2909d9f95897")]
        public string OAT_IL_Source
        {
            get { return _OAT_IL_Source; }
            set { _OAT_IL_Source = value; }
        }

        string _OAT_IL_PhoneNumber;

        /// <summary>
        /// Gets or sets the value of variable OAT_IL_PhoneNumber.
        /// </summary>
        [TestVariable("2491d4f2-ecb8-49c9-a423-9ffd6b9f43f1")]
        public string OAT_IL_PhoneNumber
        {
            get { return _OAT_IL_PhoneNumber; }
            set { _OAT_IL_PhoneNumber = value; }
        }

        string _OAT_IL_ExtNo;

        /// <summary>
        /// Gets or sets the value of variable OAT_IL_ExtNo.
        /// </summary>
        [TestVariable("c93011f9-f1f1-4ced-b4a7-51990f505d0c")]
        public string OAT_IL_ExtNo
        {
            get { return _OAT_IL_ExtNo; }
            set { _OAT_IL_ExtNo = value; }
        }

        string _OAT_IL_EmailUseType;

        /// <summary>
        /// Gets or sets the value of variable OAT_IL_EmailUseType.
        /// </summary>
        [TestVariable("ed7ade7a-a8b7-48f4-bc5e-9f3731efb2ae")]
        public string OAT_IL_EmailUseType
        {
            get { return _OAT_IL_EmailUseType; }
            set { _OAT_IL_EmailUseType = value; }
        }

        string _OAT_IL_EmailSource;

        /// <summary>
        /// Gets or sets the value of variable OAT_IL_EmailSource.
        /// </summary>
        [TestVariable("9f256619-11a6-48d5-9746-c333cf1dd9be")]
        public string OAT_IL_EmailSource
        {
            get { return _OAT_IL_EmailSource; }
            set { _OAT_IL_EmailSource = value; }
        }

        string _OAT_IL_EmailID;

        /// <summary>
        /// Gets or sets the value of variable OAT_IL_EmailID.
        /// </summary>
        [TestVariable("57bff8cc-d095-4427-8c8b-8933136adcb3")]
        public string OAT_IL_EmailID
        {
            get { return _OAT_IL_EmailID; }
            set { _OAT_IL_EmailID = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            //Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.InsuranceInformation1' at 98;26.", repo.ApplicationUnderTest.InsuranceInformation1Info, new RecordItemIndex(0));
            //repo.ApplicationUnderTest.InsuranceInformation1.Click("98;26");
            //Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 10s to exist. Associated repository item: 'ApplicationUnderTest.OAT_IL_CompName'", repo.ApplicationUnderTest.OAT_IL_CompNameInfo, new ActionTimeout(10000), new RecordItemIndex(1));
            repo.ApplicationUnderTest.OAT_IL_CompNameInfo.WaitForExists(10000);
            
            Report.Log(ReportLevel.Info, "Set value", "Setting attribute TagValue to '$OAT_IL_CompName' on item 'ApplicationUnderTest.OAT_IL_CompName'.", repo.ApplicationUnderTest.OAT_IL_CompNameInfo, new RecordItemIndex(2));
            repo.ApplicationUnderTest.OAT_IL_CompName.Element.SetAttributeValue("TagValue", OAT_IL_CompName);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 500ms.", new RecordItemIndex(3));
            Delay.Duration(500, false);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.OAT_IL_SelfInsured' at Center.", repo.ApplicationUnderTest.OAT_IL_SelfInsuredInfo, new RecordItemIndex(4));
            repo.ApplicationUnderTest.OAT_IL_SelfInsured.Click();
            Delay.Milliseconds(200);
            
            //Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.OAT_IL_RentalCompany' at Center.", repo.ApplicationUnderTest.OAT_IL_RentalCompanyInfo, new RecordItemIndex(5));
            //repo.ApplicationUnderTest.OAT_IL_RentalCompany.Click();
            //Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$OAT_IL_PolicyNumber' with focus on 'ApplicationUnderTest.OAT_IL_PolicyNumber'.", repo.ApplicationUnderTest.OAT_IL_PolicyNumberInfo, new RecordItemIndex(6));
            repo.ApplicationUnderTest.OAT_IL_PolicyNumber.PressKeys(OAT_IL_PolicyNumber);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Tab' Press.", new RecordItemIndex(7));
            Keyboard.Press(System.Windows.Forms.Keys.Tab, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$OAT_IL_ClaimNumber' with focus on 'ApplicationUnderTest.OAT_IL_ClaimNumber'.", repo.ApplicationUnderTest.OAT_IL_ClaimNumberInfo, new RecordItemIndex(8));
            repo.ApplicationUnderTest.OAT_IL_ClaimNumber.PressKeys(OAT_IL_ClaimNumber);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Tab' Press.", new RecordItemIndex(9));
            Keyboard.Press(System.Windows.Forms.Keys.Tab, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 500ms.", new RecordItemIndex(10));
            Delay.Duration(500, false);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.OAT_IL_ContactName' at Center.", repo.ApplicationUnderTest.OAT_IL_ContactNameInfo, new RecordItemIndex(11));
            repo.ApplicationUnderTest.OAT_IL_ContactName.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$OAT_IL_ContactName' with focus on 'ApplicationUnderTest.OAT_IL_ContactName'.", repo.ApplicationUnderTest.OAT_IL_ContactNameInfo, new RecordItemIndex(12));
            repo.ApplicationUnderTest.OAT_IL_ContactName.PressKeys(OAT_IL_ContactName);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Set value", "Setting attribute TagValue to '$OAT_IL_State' on item 'ApplicationUnderTest.OAT_IL_State'.", repo.ApplicationUnderTest.OAT_IL_StateInfo, new RecordItemIndex(13));
            repo.ApplicationUnderTest.OAT_IL_State.Element.SetAttributeValue("TagValue", OAT_IL_State);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$OAT_IL_Address1' with focus on 'ApplicationUnderTest.OAT_IL_Address1'.", repo.ApplicationUnderTest.OAT_IL_Address1Info, new RecordItemIndex(14));
            repo.ApplicationUnderTest.OAT_IL_Address1.PressKeys(OAT_IL_Address1);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$OAT_IL_Address2' with focus on 'ApplicationUnderTest.OAT_IL_Address2'.", repo.ApplicationUnderTest.OAT_IL_Address2Info, new RecordItemIndex(15));
            repo.ApplicationUnderTest.OAT_IL_Address2.PressKeys(OAT_IL_Address2);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$OAT_IL_City' with focus on 'ApplicationUnderTest.OAT_IL_City'.", repo.ApplicationUnderTest.OAT_IL_CityInfo, new RecordItemIndex(16));
            repo.ApplicationUnderTest.OAT_IL_City.PressKeys(OAT_IL_City);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$OAT_IL_Zip' with focus on 'ApplicationUnderTest.OAT_IL_Zip'.", repo.ApplicationUnderTest.OAT_IL_ZipInfo, new RecordItemIndex(17));
            repo.ApplicationUnderTest.OAT_IL_Zip.PressKeys(OAT_IL_Zip);
            Delay.Milliseconds(0);
            
            Report.Screenshot(ReportLevel.Info, "User", "", repo.PegaCaseManagerPortalGoogleChrome.Screenshot_Window, false, new RecordItemIndex(18));
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Tab}'.", new RecordItemIndex(19));
            Keyboard.Press("{Tab}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Return}'.", new RecordItemIndex(20));
            Keyboard.Press("{Return}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Set value", "Setting attribute TagValue to '$OAT_IL_UseType' on item 'ApplicationUnderTest.OAT_IL_UseType'.", repo.ApplicationUnderTest.OAT_IL_UseTypeInfo, new RecordItemIndex(21));
            repo.ApplicationUnderTest.OAT_IL_UseType.Element.SetAttributeValue("TagValue", OAT_IL_UseType);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Set value", "Setting attribute TagValue to '$OAT_IL_PhoneType' on item 'ApplicationUnderTest.OAT_IL_PhoneType'.", repo.ApplicationUnderTest.OAT_IL_PhoneTypeInfo, new RecordItemIndex(22));
            repo.ApplicationUnderTest.OAT_IL_PhoneType.Element.SetAttributeValue("TagValue", OAT_IL_PhoneType);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 500ms.", new RecordItemIndex(23));
            Delay.Duration(500, false);
            
            Report.Log(ReportLevel.Info, "Set value", "Setting attribute TagValue to '$OAT_IL_Source' on item 'ApplicationUnderTest.OAT_IL_Source'.", repo.ApplicationUnderTest.OAT_IL_SourceInfo, new RecordItemIndex(24));
            repo.ApplicationUnderTest.OAT_IL_Source.Element.SetAttributeValue("TagValue", OAT_IL_Source);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$OAT_IL_PhoneNumber' with focus on 'ApplicationUnderTest.OAT_IL_PhoneNumber'.", repo.ApplicationUnderTest.OAT_IL_PhoneNumberInfo, new RecordItemIndex(25));
            repo.ApplicationUnderTest.OAT_IL_PhoneNumber.PressKeys(OAT_IL_PhoneNumber);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$OAT_IL_ExtNo' with focus on 'ApplicationUnderTest.OAT_IL_ExtNo'.", repo.ApplicationUnderTest.OAT_IL_ExtNoInfo, new RecordItemIndex(26));
            repo.ApplicationUnderTest.OAT_IL_ExtNo.PressKeys(OAT_IL_ExtNo);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Tab' Press.", new RecordItemIndex(27));
            Keyboard.Press(System.Windows.Forms.Keys.Tab, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Enter' Press.", new RecordItemIndex(28));
            Keyboard.Press(System.Windows.Forms.Keys.Return, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Set value", "Setting attribute TagValue to '$OAT_IL_EmailUseType' on item 'ApplicationUnderTest.OAT_IL_EmailUseType'.", repo.ApplicationUnderTest.OAT_IL_EmailUseTypeInfo, new RecordItemIndex(29));
            repo.ApplicationUnderTest.OAT_IL_EmailUseType.Element.SetAttributeValue("TagValue", OAT_IL_EmailUseType);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Set value", "Setting attribute TagValue to '$OAT_IL_EmailSource' on item 'ApplicationUnderTest.OAT_IL_EmailSource'.", repo.ApplicationUnderTest.OAT_IL_EmailSourceInfo, new RecordItemIndex(30));
            repo.ApplicationUnderTest.OAT_IL_EmailSource.Element.SetAttributeValue("TagValue", OAT_IL_EmailSource);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$OAT_IL_EmailID' with focus on 'ApplicationUnderTest.OAT_IL_EmailID'.", repo.ApplicationUnderTest.OAT_IL_EmailIDInfo, new RecordItemIndex(31));
            repo.ApplicationUnderTest.OAT_IL_EmailID.PressKeys(OAT_IL_EmailID);
            Delay.Milliseconds(100);
            
            Report.Screenshot(ReportLevel.Info, "User", "", repo.PegaCaseManagerPortalGoogleChrome.Screenshot_Window, false, new RecordItemIndex(32));
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
