///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace SubmissionCase_E2E
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Adverse2_Vehicle_Details_Save recording.
    /// </summary>
    [TestModule("4873c4ca-03b7-4d00-b4ad-b9b69aea761f", ModuleType.Recording, 1)]
    public partial class Adverse2_Vehicle_Details_Save : ITestModule
    {
        /// <summary>
        /// Holds an instance of the SubmissionCase_E2ERepository repository.
        /// </summary>
        public static SubmissionCase_E2ERepository repo = SubmissionCase_E2ERepository.Instance;

        static Adverse2_Vehicle_Details_Save instance = new Adverse2_Vehicle_Details_Save();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Adverse2_Vehicle_Details_Save()
        {
            LicensePlate1 = "";
            LicensePlateState1 = "";
            AD2_Vin_Year = "";
            AD2_VIN_Make = "";
            AD2_VIN_Model = "Civic";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Adverse2_Vehicle_Details_Save Instance
        {
            get { return instance; }
        }

#region Variables

        string _LicensePlate1;

        /// <summary>
        /// Gets or sets the value of variable LicensePlate1.
        /// </summary>
        [TestVariable("3d43b887-b903-4e65-8545-47d99e32abb4")]
        public string LicensePlate1
        {
            get { return _LicensePlate1; }
            set { _LicensePlate1 = value; }
        }

        string _LicensePlateState1;

        /// <summary>
        /// Gets or sets the value of variable LicensePlateState1.
        /// </summary>
        [TestVariable("c3c79044-f533-45d4-bd74-eb503f3439dc")]
        public string LicensePlateState1
        {
            get { return _LicensePlateState1; }
            set { _LicensePlateState1 = value; }
        }

        string _AD2_Vin_Year;

        /// <summary>
        /// Gets or sets the value of variable AD2_Vin_Year.
        /// </summary>
        [TestVariable("ff5d417d-24d3-4065-bf5c-8b6f4f64f873")]
        public string AD2_Vin_Year
        {
            get { return _AD2_Vin_Year; }
            set { _AD2_Vin_Year = value; }
        }

        string _AD2_VIN_Make;

        /// <summary>
        /// Gets or sets the value of variable AD2_VIN_Make.
        /// </summary>
        [TestVariable("9a0fa0e3-196b-45f2-aa55-b6e917f56996")]
        public string AD2_VIN_Make
        {
            get { return _AD2_VIN_Make; }
            set { _AD2_VIN_Make = value; }
        }

        string _AD2_VIN_Model;

        /// <summary>
        /// Gets or sets the value of variable AD2_VIN_Model.
        /// </summary>
        [TestVariable("a4e4c058-6297-4096-ace3-7cb888128ed0")]
        public string AD2_VIN_Model
        {
            get { return _AD2_VIN_Model; }
            set { _AD2_VIN_Model = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.Save_Button' at 6;8.", repo.ApplicationUnderTest.Save_ButtonInfo, new RecordItemIndex(0));
            repo.ApplicationUnderTest.Save_Button.Click("6;8");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 10s.", new RecordItemIndex(1));
            Delay.Duration(10000, false);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 10s to exist. Associated repository item: 'ApplicationUnderTest.LabelTagYes1'", repo.ApplicationUnderTest.LabelTagYes1Info, new ActionTimeout(10000), new RecordItemIndex(2));
            repo.ApplicationUnderTest.LabelTagYes1Info.WaitForExists(10000);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'ApplicationUnderTest.LabelTagNo'.", repo.ApplicationUnderTest.LabelTagNoInfo, new RecordItemIndex(3));
            Validate.Exists(repo.ApplicationUnderTest.LabelTagNoInfo);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Id='849b37f2false') on item 'ApplicationUnderTest.LabelTagNo'.", repo.ApplicationUnderTest.LabelTagNoInfo, new RecordItemIndex(4));
            Validate.AttributeEqual(repo.ApplicationUnderTest.LabelTagNoInfo, "Id", "849b37f2false");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$LicensePlate1) on item 'ApplicationUnderTest.LicensePlate1'.", repo.ApplicationUnderTest.LicensePlate1Info, new RecordItemIndex(5));
            Validate.AttributeEqual(repo.ApplicationUnderTest.LicensePlate1Info, "TagValue", LicensePlate1);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$LicensePlateState1) on item 'ApplicationUnderTest.LicensePlateState1'.", repo.ApplicationUnderTest.LicensePlateState1Info, new RecordItemIndex(6));
            Validate.AttributeEqual(repo.ApplicationUnderTest.LicensePlateState1Info, "TagValue", LicensePlateState1);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Checked='True') on item 'ApplicationUnderTest.Manual_Model_Details'.", repo.ApplicationUnderTest.Manual_Model_DetailsInfo, new RecordItemIndex(7));
            Validate.AttributeEqual(repo.ApplicationUnderTest.Manual_Model_DetailsInfo, "Checked", "True");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Value='true') on item 'ApplicationUnderTest.Manual_Model_Details'.", repo.ApplicationUnderTest.Manual_Model_DetailsInfo, new RecordItemIndex(8));
            Validate.AttributeEqual(repo.ApplicationUnderTest.Manual_Model_DetailsInfo, "Value", "true");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 1s.", new RecordItemIndex(9));
            Delay.Duration(1000, false);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Value=$AD2_Vin_Year) on item 'ApplicationUnderTest.AD2_Vin_Year'.", repo.ApplicationUnderTest.AD2_Vin_YearInfo, new RecordItemIndex(10));
            Validate.AttributeEqual(repo.ApplicationUnderTest.AD2_Vin_YearInfo, "Value", AD2_Vin_Year);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Value=$AD2_VIN_Make) on item 'ApplicationUnderTest.AD2_VIN_Make'.", repo.ApplicationUnderTest.AD2_VIN_MakeInfo, new RecordItemIndex(11));
            Validate.AttributeEqual(repo.ApplicationUnderTest.AD2_VIN_MakeInfo, "Value", AD2_VIN_Make);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Value=$AD2_VIN_Model) on item 'ApplicationUnderTest.AD2_VIN_Model'.", repo.ApplicationUnderTest.AD2_VIN_ModelInfo, new RecordItemIndex(12));
            Validate.AttributeEqual(repo.ApplicationUnderTest.AD2_VIN_ModelInfo, "Value", AD2_VIN_Model);
            Delay.Milliseconds(100);
            
            Report.Screenshot(ReportLevel.Info, "User", "", repo.PegaCaseManagerPortalGoogleChrome.Screenshot_Window, false, new RecordItemIndex(13));
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 3s.", new RecordItemIndex(14));
            Delay.Duration(3000, false);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.Submit_4' at 43;11.", repo.ApplicationUnderTest.Submit_4Info, new RecordItemIndex(15));
            repo.ApplicationUnderTest.Submit_4.Click("43;11");
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
