///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace SubmissionCase_E2E
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The InsuredDetails_Agent_Information recording.
    /// </summary>
    [TestModule("27443c57-0776-4da9-8040-fd51e64c91e9", ModuleType.Recording, 1)]
    public partial class InsuredDetails_Agent_Information : ITestModule
    {
        /// <summary>
        /// Holds an instance of the SubmissionCase_E2ERepository repository.
        /// </summary>
        public static SubmissionCase_E2ERepository repo = SubmissionCase_E2ERepository.Instance;

        static InsuredDetails_Agent_Information instance = new InsuredDetails_Agent_Information();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public InsuredDetails_Agent_Information()
        {
            Agent_Name = "";
            AD_AddressLine1 = "";
            AD_AddressLine2 = "";
            AD_City = "";
            AD_State = "";
            AD_Zipcode = "";
            AgentDetails_AgentPhone = "";
            AgentDetails_Email = "";
            AgentDetails_Ext = "";
            AgentDetails_FaxNo = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static InsuredDetails_Agent_Information Instance
        {
            get { return instance; }
        }

#region Variables

        string _Agent_Name;

        /// <summary>
        /// Gets or sets the value of variable Agent_Name.
        /// </summary>
        [TestVariable("ba512f26-e4b9-4637-aeea-dbc299fc5b06")]
        public string Agent_Name
        {
            get { return _Agent_Name; }
            set { _Agent_Name = value; }
        }

        string _AD_AddressLine1;

        /// <summary>
        /// Gets or sets the value of variable AD_AddressLine1.
        /// </summary>
        [TestVariable("ef0c8af7-e99e-4887-a08b-291842dc123c")]
        public string AD_AddressLine1
        {
            get { return _AD_AddressLine1; }
            set { _AD_AddressLine1 = value; }
        }

        string _AD_AddressLine2;

        /// <summary>
        /// Gets or sets the value of variable AD_AddressLine2.
        /// </summary>
        [TestVariable("ee8e9e15-b608-4ed9-9db4-555c039f508f")]
        public string AD_AddressLine2
        {
            get { return _AD_AddressLine2; }
            set { _AD_AddressLine2 = value; }
        }

        string _AD_City;

        /// <summary>
        /// Gets or sets the value of variable AD_City.
        /// </summary>
        [TestVariable("c40e08c1-293b-4568-9e8d-c29d14a02702")]
        public string AD_City
        {
            get { return _AD_City; }
            set { _AD_City = value; }
        }

        string _AD_State;

        /// <summary>
        /// Gets or sets the value of variable AD_State.
        /// </summary>
        [TestVariable("0b9bd810-3fe1-4215-a555-e6d6de49e30f")]
        public string AD_State
        {
            get { return _AD_State; }
            set { _AD_State = value; }
        }

        string _AD_Zipcode;

        /// <summary>
        /// Gets or sets the value of variable AD_Zipcode.
        /// </summary>
        [TestVariable("791c4baf-70b6-4f7a-bae0-1e5f88d8c0ec")]
        public string AD_Zipcode
        {
            get { return _AD_Zipcode; }
            set { _AD_Zipcode = value; }
        }

        string _AgentDetails_AgentPhone;

        /// <summary>
        /// Gets or sets the value of variable AgentDetails_AgentPhone.
        /// </summary>
        [TestVariable("a8d440c1-fcff-4812-8988-b2d05631b728")]
        public string AgentDetails_AgentPhone
        {
            get { return _AgentDetails_AgentPhone; }
            set { _AgentDetails_AgentPhone = value; }
        }

        string _AgentDetails_Email;

        /// <summary>
        /// Gets or sets the value of variable AgentDetails_Email.
        /// </summary>
        [TestVariable("07dd5fb1-e0bb-4775-8773-e446d366156d")]
        public string AgentDetails_Email
        {
            get { return _AgentDetails_Email; }
            set { _AgentDetails_Email = value; }
        }

        string _AgentDetails_Ext;

        /// <summary>
        /// Gets or sets the value of variable AgentDetails_Ext.
        /// </summary>
        [TestVariable("426cff86-c933-4b9d-bda4-dd12ace100bd")]
        public string AgentDetails_Ext
        {
            get { return _AgentDetails_Ext; }
            set { _AgentDetails_Ext = value; }
        }

        string _AgentDetails_FaxNo;

        /// <summary>
        /// Gets or sets the value of variable AgentDetails_FaxNo.
        /// </summary>
        [TestVariable("d55d41b6-3599-4628-a604-10d4ec30bac7")]
        public string AgentDetails_FaxNo
        {
            get { return _AgentDetails_FaxNo; }
            set { _AgentDetails_FaxNo = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Agent_Name' with focus on 'ApplicationUnderTest.AgentName'.", repo.ApplicationUnderTest.AgentNameInfo, new RecordItemIndex(0));
            repo.ApplicationUnderTest.AgentName.PressKeys(Agent_Name);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$AD_AddressLine1' with focus on 'ApplicationUnderTest.AD_AddressLine1'.", repo.ApplicationUnderTest.AD_AddressLine1Info, new RecordItemIndex(1));
            repo.ApplicationUnderTest.AD_AddressLine1.PressKeys(AD_AddressLine1);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$AD_AddressLine2' with focus on 'ApplicationUnderTest.AD_AddressLine2'.", repo.ApplicationUnderTest.AD_AddressLine2Info, new RecordItemIndex(2));
            repo.ApplicationUnderTest.AD_AddressLine2.PressKeys(AD_AddressLine2);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$AD_City' with focus on 'ApplicationUnderTest.AD_City'.", repo.ApplicationUnderTest.AD_CityInfo, new RecordItemIndex(3));
            repo.ApplicationUnderTest.AD_City.PressKeys(AD_City);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Set value", "Setting attribute TagValue to '$AD_State' on item 'ApplicationUnderTest.AD_State'.", repo.ApplicationUnderTest.AD_StateInfo, new RecordItemIndex(4));
            repo.ApplicationUnderTest.AD_State.Element.SetAttributeValue("TagValue", AD_State);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$AD_Zipcode' with focus on 'ApplicationUnderTest.AD_Zipcode'.", repo.ApplicationUnderTest.AD_ZipcodeInfo, new RecordItemIndex(5));
            repo.ApplicationUnderTest.AD_Zipcode.PressKeys(AD_Zipcode);
            Delay.Milliseconds(0);
            
            Report.Screenshot(ReportLevel.Info, "User", "", repo.PegaCaseManagerPortalGoogleChrome.Screenshot_Window, false, new RecordItemIndex(6));
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Tab}'.", new RecordItemIndex(7));
            Keyboard.Press("{Tab}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Return}'.", new RecordItemIndex(8));
            Keyboard.Press("{Return}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$AgentDetails_AgentPhone' with focus on 'ApplicationUnderTest.AgentDetails_AgentPhone'.", repo.ApplicationUnderTest.AgentDetails_AgentPhoneInfo, new RecordItemIndex(9));
            repo.ApplicationUnderTest.AgentDetails_AgentPhone.PressKeys(AgentDetails_AgentPhone);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$AgentDetails_Email' with focus on 'ApplicationUnderTest.AgentDetails_Email'.", repo.ApplicationUnderTest.AgentDetails_EmailInfo, new RecordItemIndex(10));
            repo.ApplicationUnderTest.AgentDetails_Email.PressKeys(AgentDetails_Email);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$AgentDetails_Ext' with focus on 'ApplicationUnderTest.AgentDetails_Ext'.", repo.ApplicationUnderTest.AgentDetails_ExtInfo, new RecordItemIndex(11));
            repo.ApplicationUnderTest.AgentDetails_Ext.PressKeys(AgentDetails_Ext);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$AgentDetails_FaxNo' with focus on 'ApplicationUnderTest.AgentDetails_FaxNo'.", repo.ApplicationUnderTest.AgentDetails_FaxNoInfo, new RecordItemIndex(12));
            repo.ApplicationUnderTest.AgentDetails_FaxNo.PressKeys(AgentDetails_FaxNo);
            Delay.Milliseconds(0);
            
            Report.Screenshot(ReportLevel.Info, "User", "", repo.PegaCaseManagerPortalGoogleChrome.Screenshot_Window, false, new RecordItemIndex(13));
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
