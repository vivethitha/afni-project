///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace SubmissionCase_E2E
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Adverse1_Driver_Attorney_Details recording.
    /// </summary>
    [TestModule("6f51bf3d-5f83-459c-bd26-92ad0a81e57b", ModuleType.Recording, 1)]
    public partial class Adverse1_Driver_Attorney_Details : ITestModule
    {
        /// <summary>
        /// Holds an instance of the SubmissionCase_E2ERepository repository.
        /// </summary>
        public static SubmissionCase_E2ERepository repo = SubmissionCase_E2ERepository.Instance;

        static Adverse1_Driver_Attorney_Details instance = new Adverse1_Driver_Attorney_Details();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Adverse1_Driver_Attorney_Details()
        {
            AD1_Attorney_FirmName = "";
            AD1_Attorney_RepDate = "";
            AD1_Attorney_FirstName = "";
            AD1_Attorney_LastName = "";
            AD1_Attorney_Address1 = "";
            AD1_Attorney_Address2 = "";
            AD1_Attorney_City = "";
            AD1_Attorney_State = "";
            AD1_Attorney_Zip = "";
            AD1_AD_UseType = "";
            AD1_AD_PhoneType = "";
            AD1_AD_Source = "";
            AD1_AD_EmailUseType = "";
            AD1_AD_EmailSource = "";
            AD1_AD_Email = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Adverse1_Driver_Attorney_Details Instance
        {
            get { return instance; }
        }

#region Variables

        string _AD1_Attorney_FirmName;

        /// <summary>
        /// Gets or sets the value of variable AD1_Attorney_FirmName.
        /// </summary>
        [TestVariable("3e8497e5-3710-4ea6-abad-42942d9489d5")]
        public string AD1_Attorney_FirmName
        {
            get { return _AD1_Attorney_FirmName; }
            set { _AD1_Attorney_FirmName = value; }
        }

        string _AD1_Attorney_RepDate;

        /// <summary>
        /// Gets or sets the value of variable AD1_Attorney_RepDate.
        /// </summary>
        [TestVariable("0d4e4aea-20b5-451d-838f-2e3c550bb709")]
        public string AD1_Attorney_RepDate
        {
            get { return _AD1_Attorney_RepDate; }
            set { _AD1_Attorney_RepDate = value; }
        }

        string _AD1_Attorney_FirstName;

        /// <summary>
        /// Gets or sets the value of variable AD1_Attorney_FirstName.
        /// </summary>
        [TestVariable("34a67d29-a439-4bec-907a-31b338b0ca8c")]
        public string AD1_Attorney_FirstName
        {
            get { return _AD1_Attorney_FirstName; }
            set { _AD1_Attorney_FirstName = value; }
        }

        string _AD1_Attorney_LastName;

        /// <summary>
        /// Gets or sets the value of variable AD1_Attorney_LastName.
        /// </summary>
        [TestVariable("25ce6783-e45e-4212-a78e-1eb7377d01c2")]
        public string AD1_Attorney_LastName
        {
            get { return _AD1_Attorney_LastName; }
            set { _AD1_Attorney_LastName = value; }
        }

        string _AD1_Attorney_Address1;

        /// <summary>
        /// Gets or sets the value of variable AD1_Attorney_Address1.
        /// </summary>
        [TestVariable("4d0966b7-92bf-49ac-8055-f9892b711aeb")]
        public string AD1_Attorney_Address1
        {
            get { return _AD1_Attorney_Address1; }
            set { _AD1_Attorney_Address1 = value; }
        }

        string _AD1_Attorney_Address2;

        /// <summary>
        /// Gets or sets the value of variable AD1_Attorney_Address2.
        /// </summary>
        [TestVariable("1b4a2014-c538-479b-8153-5e4f4776e90c")]
        public string AD1_Attorney_Address2
        {
            get { return _AD1_Attorney_Address2; }
            set { _AD1_Attorney_Address2 = value; }
        }

        string _AD1_Attorney_City;

        /// <summary>
        /// Gets or sets the value of variable AD1_Attorney_City.
        /// </summary>
        [TestVariable("9611c791-fbb0-412a-ac8a-d550a446f990")]
        public string AD1_Attorney_City
        {
            get { return _AD1_Attorney_City; }
            set { _AD1_Attorney_City = value; }
        }

        string _AD1_Attorney_State;

        /// <summary>
        /// Gets or sets the value of variable AD1_Attorney_State.
        /// </summary>
        [TestVariable("d3e69b8c-364f-4dfa-a30f-f2c67b0fd656")]
        public string AD1_Attorney_State
        {
            get { return _AD1_Attorney_State; }
            set { _AD1_Attorney_State = value; }
        }

        string _AD1_Attorney_Zip;

        /// <summary>
        /// Gets or sets the value of variable AD1_Attorney_Zip.
        /// </summary>
        [TestVariable("60d1fd28-3fa3-42de-9810-7f7e6a017551")]
        public string AD1_Attorney_Zip
        {
            get { return _AD1_Attorney_Zip; }
            set { _AD1_Attorney_Zip = value; }
        }

        string _AD1_AD_UseType;

        /// <summary>
        /// Gets or sets the value of variable AD1_AD_UseType.
        /// </summary>
        [TestVariable("d5982700-3d2a-47f9-9b4d-83af8c63a649")]
        public string AD1_AD_UseType
        {
            get { return _AD1_AD_UseType; }
            set { _AD1_AD_UseType = value; }
        }

        string _AD1_AD_PhoneType;

        /// <summary>
        /// Gets or sets the value of variable AD1_AD_PhoneType.
        /// </summary>
        [TestVariable("b8ab0cd5-ab07-49ff-bf1b-7021a710a021")]
        public string AD1_AD_PhoneType
        {
            get { return _AD1_AD_PhoneType; }
            set { _AD1_AD_PhoneType = value; }
        }

        string _AD1_AD_Source;

        /// <summary>
        /// Gets or sets the value of variable AD1_AD_Source.
        /// </summary>
        [TestVariable("035e03d3-a4e0-4363-94c0-d55f44d12d61")]
        public string AD1_AD_Source
        {
            get { return _AD1_AD_Source; }
            set { _AD1_AD_Source = value; }
        }

        string _AD1_AD_EmailUseType;

        /// <summary>
        /// Gets or sets the value of variable AD1_AD_EmailUseType.
        /// </summary>
        [TestVariable("307a7695-92e5-4c5c-a7b1-591b79a93233")]
        public string AD1_AD_EmailUseType
        {
            get { return _AD1_AD_EmailUseType; }
            set { _AD1_AD_EmailUseType = value; }
        }

        string _AD1_AD_EmailSource;

        /// <summary>
        /// Gets or sets the value of variable AD1_AD_EmailSource.
        /// </summary>
        [TestVariable("cc19b5ac-5c48-4e6f-aa15-403ff23619a4")]
        public string AD1_AD_EmailSource
        {
            get { return _AD1_AD_EmailSource; }
            set { _AD1_AD_EmailSource = value; }
        }

        string _AD1_AD_Email;

        /// <summary>
        /// Gets or sets the value of variable AD1_AD_Email.
        /// </summary>
        [TestVariable("25a22dfc-57e6-47cc-b10c-20dabd04cf3c")]
        public string AD1_AD_Email
        {
            get { return _AD1_AD_Email; }
            set { _AD1_AD_Email = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.AttorneyInformation' at 67;26.", repo.ApplicationUnderTest.AttorneyInformationInfo, new RecordItemIndex(0));
            repo.ApplicationUnderTest.AttorneyInformation.Click("67;26");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$AD1_Attorney_FirmName' with focus on 'ApplicationUnderTest.AD1_Attorney_FirmName'.", repo.ApplicationUnderTest.AD1_Attorney_FirmNameInfo, new RecordItemIndex(1));
            repo.ApplicationUnderTest.AD1_Attorney_FirmName.PressKeys(AD1_Attorney_FirmName);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Set value", "Setting attribute TagValue to '$AD1_Attorney_RepDate' on item 'ApplicationUnderTest.AD1_Attorney_RepDate'.", repo.ApplicationUnderTest.AD1_Attorney_RepDateInfo, new RecordItemIndex(2));
            repo.ApplicationUnderTest.AD1_Attorney_RepDate.Element.SetAttributeValue("TagValue", AD1_Attorney_RepDate);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Tab}'.", new RecordItemIndex(3));
            Keyboard.Press("{Tab}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$AD1_Attorney_FirstName' with focus on 'ApplicationUnderTest.AD1_Attorney_FirstName'.", repo.ApplicationUnderTest.AD1_Attorney_FirstNameInfo, new RecordItemIndex(4));
            repo.ApplicationUnderTest.AD1_Attorney_FirstName.PressKeys(AD1_Attorney_FirstName);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$AD1_Attorney_LastName' with focus on 'ApplicationUnderTest.AD1_Attorney_LastName'.", repo.ApplicationUnderTest.AD1_Attorney_LastNameInfo, new RecordItemIndex(5));
            repo.ApplicationUnderTest.AD1_Attorney_LastName.PressKeys(AD1_Attorney_LastName);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$AD1_Attorney_Address1' with focus on 'ApplicationUnderTest.AD1_Attorney_Address1'.", repo.ApplicationUnderTest.AD1_Attorney_Address1Info, new RecordItemIndex(6));
            repo.ApplicationUnderTest.AD1_Attorney_Address1.PressKeys(AD1_Attorney_Address1);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$AD1_Attorney_Address2' with focus on 'ApplicationUnderTest.AD1_Attorney_Address2'.", repo.ApplicationUnderTest.AD1_Attorney_Address2Info, new RecordItemIndex(7));
            repo.ApplicationUnderTest.AD1_Attorney_Address2.PressKeys(AD1_Attorney_Address2);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$AD1_Attorney_City' with focus on 'ApplicationUnderTest.AD1_Attorney_City'.", repo.ApplicationUnderTest.AD1_Attorney_CityInfo, new RecordItemIndex(8));
            repo.ApplicationUnderTest.AD1_Attorney_City.PressKeys(AD1_Attorney_City);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Set value", "Setting attribute TagValue to '$AD1_Attorney_State' on item 'ApplicationUnderTest.AD1_Attorney_State'.", repo.ApplicationUnderTest.AD1_Attorney_StateInfo, new RecordItemIndex(9));
            repo.ApplicationUnderTest.AD1_Attorney_State.Element.SetAttributeValue("TagValue", AD1_Attorney_State);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 500ms.", new RecordItemIndex(10));
            Delay.Duration(500, false);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$AD1_Attorney_Zip' with focus on 'ApplicationUnderTest.AD1_Attorney_Zip'.", repo.ApplicationUnderTest.AD1_Attorney_ZipInfo, new RecordItemIndex(11));
            repo.ApplicationUnderTest.AD1_Attorney_Zip.PressKeys(AD1_Attorney_Zip);
            Delay.Milliseconds(0);
            
            Report.Screenshot(ReportLevel.Info, "User", "", repo.PegaCaseManagerPortalGoogleChrome.Screenshot_Window, false, new RecordItemIndex(12));
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Tab}'.", new RecordItemIndex(13));
            Keyboard.Press("{Tab}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Return}'.", new RecordItemIndex(14));
            Keyboard.Press("{Return}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Set value", "Setting attribute TagValue to '$AD1_AD_UseType' on item 'ApplicationUnderTest.AD1_AD_UseType'.", repo.ApplicationUnderTest.AD1_AD_UseTypeInfo, new RecordItemIndex(15));
            repo.ApplicationUnderTest.AD1_AD_UseType.Element.SetAttributeValue("TagValue", AD1_AD_UseType);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Set value", "Setting attribute TagValue to '$AD1_AD_PhoneType' on item 'ApplicationUnderTest.AD1_AD_PhoneType'.", repo.ApplicationUnderTest.AD1_AD_PhoneTypeInfo, new RecordItemIndex(16));
            repo.ApplicationUnderTest.AD1_AD_PhoneType.Element.SetAttributeValue("TagValue", AD1_AD_PhoneType);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Set value", "Setting attribute TagValue to '$AD1_AD_Source' on item 'ApplicationUnderTest.AD1_AD_Source'.", repo.ApplicationUnderTest.AD1_AD_SourceInfo, new RecordItemIndex(17));
            repo.ApplicationUnderTest.AD1_AD_Source.Element.SetAttributeValue("TagValue", AD1_AD_Source);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '9500095002' with focus on 'ApplicationUnderTest.AD1_AD_PhoneNumber'.", repo.ApplicationUnderTest.AD1_AD_PhoneNumberInfo, new RecordItemIndex(18));
            repo.ApplicationUnderTest.AD1_AD_PhoneNumber.PressKeys("9500095002");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Tab}'.", new RecordItemIndex(19));
            Keyboard.Press("{Tab}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Return}'.", new RecordItemIndex(20));
            Keyboard.Press("{Return}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Set value", "Setting attribute TagValue to '$AD1_AD_EmailUseType' on item 'ApplicationUnderTest.AD1_AD_EmailUseType'.", repo.ApplicationUnderTest.AD1_AD_EmailUseTypeInfo, new RecordItemIndex(21));
            repo.ApplicationUnderTest.AD1_AD_EmailUseType.Element.SetAttributeValue("TagValue", AD1_AD_EmailUseType);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Set value", "Setting attribute TagValue to '$AD1_AD_EmailSource' on item 'ApplicationUnderTest.AD1_AD_EmailSource'.", repo.ApplicationUnderTest.AD1_AD_EmailSourceInfo, new RecordItemIndex(22));
            repo.ApplicationUnderTest.AD1_AD_EmailSource.Element.SetAttributeValue("TagValue", AD1_AD_EmailSource);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$AD1_AD_Email' with focus on 'ApplicationUnderTest.AD1_AD_Email'.", repo.ApplicationUnderTest.AD1_AD_EmailInfo, new RecordItemIndex(23));
            repo.ApplicationUnderTest.AD1_AD_Email.PressKeys(AD1_AD_Email);
            Delay.Milliseconds(100);
            
            Report.Screenshot(ReportLevel.Info, "User", "", repo.PegaCaseManagerPortalGoogleChrome.Screenshot_Window, false, new RecordItemIndex(24));
            
            try {
                Report.Log(ReportLevel.Info, "Keyboard", "(Optional Action)\r\nKey sequence '{Tab}'.", new RecordItemIndex(25));
                Keyboard.Press("{Tab}");
                Delay.Milliseconds(0);
            } catch(Exception ex) { Report.Log(ReportLevel.Warn, "Module", "(Optional Action) " + ex.Message, new RecordItemIndex(25)); }
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
